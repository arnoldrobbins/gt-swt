      INTEGER A$BUF(200)
      INTEGER TDAAA0(28),DESTA0(3),PAPER0(3)
      INTEGER GETARG
      INTEGER QUEUE0(180),PACKA0(33)
      INTEGER NOSPO0(28)
      INTEGER NOQCT0(17)
      INTEGER AAAAA0
      INTEGER AAAAB0
      INTEGER PARSCL
      INTEGER AAAAC0(16)
      INTEGER AAAAD0(65)
      INTEGER AAAAE0(128),SPRT(7)
      INTEGER AT,AP,CODE,ENTRY,FD,I,AAAAF0(3),PRT(3),AAAAG0(16),AAAAH0(4
     *1)
      INTEGER GETTO,GETARG,CTOI
      INTEGER * 4 ENTPOS
      LOGICAL NAMEQV
      INTEGER AAAAI0(16)
      INTEGER AAAAJ0(6)
      INTEGER AAAAK0(26)
      INTEGER AAAAL0(10)
      INTEGER AAAAM0(6)
      INTEGER AT,CODE,F1,F2,I,T1,T2,AAAAP0,BUFAA0(8200),AAAAN0(3),AAAAO0
     *(16)
      INTEGER GETTO
      LOGICAL HEADE0
      INTEGER AAAAS0
      INTEGER AAAAT0(18)
      INTEGER AAAAU0(17)
      INTEGER AAAAV0(6)
      INTEGER AAAAW0(17)
      INTEGER AAAAQ0,AAAAR0
      INTEGER PFLAG(2),SSIZE(6),SDEST(17),SNAME(25)
      INTEGER AAAAX0,ENT,QENT(41)
      INTEGER PTOC
      LOGICAL NAMEQV
      INTEGER HEADI0(45)
      INTEGER AAAAY0(6)
      INTEGER AAAAZ0(4)
      INTEGER AAABA0(2)
      INTEGER AAABB0(13)
      INTEGER AAABC0(5)
      INTEGER AAABD0(4)
      INTEGER AAABE0(5)
      INTEGER AAABF0(7)
      INTEGER AAABG0(6)
      INTEGER AAABH0(7)
      INTEGER AAABI0(5)
      INTEGER AAABJ0(6)
      INTEGER AAABK0(12)
      INTEGER AAABL0(12)
      DATA NOSPO0/195,225,238,167,244,160,230,233,238,228,160,211,208,20
     *7,207,204,209,160,228,233,242,229,227,244,239,242,249,0/
      DATA NOQCT0/195,225,238,167,244,160,242,229,225,228,160,241,245,22
     *9,245,229,0/
      DATA AAAAC0/227,160,225,188,242,243,190,228,237,240,188,242,243,19
     *0,241,0/
      DATA AAAAD0/213,243,225,231,229,186,160,236,240,243,160,168,173,22
     *7,160,251,188,243,229,241,190,253,160,252,160,251,188,240,225,227,
     *235,190,253,160,219,173,251,225,160,188,228,229,243,244,190,252,22
     *8,252,237,252,240,160,188,240,225,240,229,242,190,252,241,253,221,
     *169,0/
      DATA AAAAI0/175,175,243,240,239,239,236,241,175,241,174,227,244,24
     *2,236,0/
      DATA AAAAJ0/170,243,174,170,238,0/
      DATA AAAAK0/170,243,186,160,226,225,228,160,243,229,241,245,229,23
     *8,227,229,160,238,245,237,226,229,242,170,238,0/
      DATA AAAAL0/240,242,244,170,179,172,172,176,233,0/
      DATA AAAAM0/170,243,174,170,238,0/
      DATA AAAAT0/175,170,243,175,243,240,239,239,236,241,175,241,174,22
     *7,244,242,236,0/
      DATA AAAAU0/170,243,160,239,238,160,228,233,243,235,160,170,243,17
     *4,170,238,0/
      DATA AAAAV0/170,243,174,170,238,0/
      DATA AAAAW0/170,243,160,239,238,160,228,233,243,235,160,170,243,17
     *4,170,238,0/
      DATA HEADI0/170,172,172,163,245,170,182,243,160,170,179,243,160,17
     *0,181,243,160,170,177,182,243,160,170,181,243,160,170,182,243,160,
     *170,182,243,160,170,181,243,160,170,177,180,243,170,238,0/
      DATA AAAAY0/160,239,240,229,238,0/
      DATA AAAAZ0/170,181,233,0/
      DATA AAABA0/170,0/
      DATA AAABB0/170,170,170,170,170,170,160,170,243,186,170,238,0/
      DATA AAABC0/245,243,229,242,0/
      DATA AAABD0/240,242,244,0/
      DATA AAABE0/244,233,237,229,0/
      DATA AAABF0/226,225,238,238,229,242,0/
      DATA AAABG0/160,243,233,250,229,0/
      DATA AAABH0/227,239,240,233,229,243,0/
      DATA AAABI0/230,239,242,237,0/
      DATA AAABJ0/228,229,230,229,242,0/
      DATA AAABK0/228,229,243,244,233,238,225,244,233,239,238,0/
      DATA AAABL0/170,178,233,186,170,178,172,172,176,233,160,0/
      CALL TIMDAT(TDAAA0,28)
      IF((PARSCL(AAAAC0,A$BUF).NE.-3))GOTO 10002
        CALL ERROR(AAAAD0)
10002 IF((A$BUF(227-225+1).EQ.0))GOTO 10003
        AAAAA0=1
        GOTO 10000
10004   GOTO 10005
10003   DO 10006 I=1,3
          PAPER0(I)='  '
          DESTA0(I)='  '
10006   CONTINUE
10007   IF((A$BUF(240-225+1).EQ.0))GOTO 10008
          CALL MAPSTR(A$BUF(A$BUF(240-225+27)),2)
          I=1
          CALL CTOP(A$BUF(A$BUF(240-225+27)),I,PAPER0,3)
10008   IF((A$BUF(225-225+1).EQ.0))GOTO 10009
          CALL MAPSTR(A$BUF(A$BUF(241-225+27)),2)
          I=1
          CALL CTOP(A$BUF(A$BUF(225-225+27)),I,DESTA0,3)
10009   I=1
        GOTO 10012
10010   I=I+(1)
10012   IF((GETARG(I,PACKA0,33).EQ.-1))GOTO 10011
          CALL MAPSTR(PACKA0,2)
          AAAAB0=1
          GOTO 10001
10013   GOTO 10010
10011   IF((I.NE.1))GOTO 10014
          PACKA0(1)=0
          AAAAB0=2
          GOTO 10001
10015   CONTINUE
10014 CONTINUE
10005 GOTO 10016
10000 IF((GETTO(AAAAI0,AAAAG0,AAAAF0,AT).NE.-3))GOTO 10017
        CALL PRINT(-15,AAAAJ0,NOSPO0)
        CALL ERROR(0)
10017 AP=1
      GOTO 10020
10018 AP=AP+(1)
10020 IF((GETARG(AP,AAAAE0,128).EQ.-1))GOTO 10019
        CALL MAPSTR(AAAAE0,1)
        IF((AAAAE0(1).NE.240))GOTO 10021
        IF((AAAAE0(2).NE.242))GOTO 10021
        IF((AAAAE0(3).NE.244))GOTO 10021
          I=4
          GOTO 10022
10021     I=1
10022   ENTRY=CTOI(AAAAE0,I)
        IF((AAAAE0(I).NE.0))GOTO 10024
        IF((ENTRY.LE.0))GOTO 10024
        IF((ENTRY.GE.200))GOTO 10024
        GOTO 10023
10024     CALL PRINT(-15,AAAAK0,AAAAE0)
          GOTO 10018
10023   CALL ENCODE(SPRT,7,AAAAL0,ENTRY)
        I=1
        CALL CTOP(SPRT,I,PRT,3)
        ENTPOS=INTL((ENTRY-1)*41+7)
        CALL Q$OFFC(FD,AAAAG0,6,:1+:40000,CODE)
        IF((CODE.NE.0))GOTO 10025
          CALL PRWF$$(:1+:10,FD,LOC(AAAAH0),4,ENTPOS,AAAAF0,CODE)
          CALL SRCH$$(:4,0,0,FD,0,AAAAF0)
          CALL BREAK$(0)
10025   IF((CODE.EQ.0))GOTO 10026
          CALL PRINT(-15,AAAAM0,NOQCT0)
          CALL ERROR(0)
10026   IF((AAAAH0(1).NE.0))GOTO 10027
          CALL PRINT(-15,'*,6h: not found*n.',PRT)
          GOTO 10028
10027     IF(NAMEQV(AAAAH0(2),TDAAA0(13)))GOTO 10029
          IF(NAMEQV(TDAAA0(13),'SYSTEM'))GOTO 10029
            CODE=-3
            CALL PRINT(-15,'*,6h: not yours*n.',PRT)
            GOTO 10030
10029       CALL SATR$$(:1,PRT,6,67108864,AAAAF0)
            CALL SRCH$$(:4,PRT,6,0,0,AAAAF0)
            CALL SRCH$$(:5,PRT,6,0,0,CODE)
            CALL SATR$$(:1,PRT,6,117440512,AAAAF0)
            IF((CODE.NE.15))GOTO 10031
              CODE=0
10031       IF((CODE.EQ.0))GOTO 10032
              CALL PRINT(-15,'*,6h: in use*n.',PRT)
10032     CONTINUE
10030   CONTINUE
10028   IF((CODE.NE.0))GOTO 10033
          CALL Q$REM(AAAAG0,FD,ENTRY,CODE)
          CALL SRCH$$(:4,0,0,FD,0,AAAAF0)
          CALL BREAK$(0)
          IF((CODE.EQ.0))GOTO 10034
            CALL PRINT(-15,'*,6h: can''t cancel*n.',PRT)
10034   CONTINUE
10033 GOTO 10018
10019 GOTO 10035
10016 GOTO 10036
10001 CALL ENCODE(QUEUE0,180,AAAAT0,PACKA0)
      IF((GETTO(QUEUE0,AAAAO0,AAAAN0,AT).EQ.-3))GOTO 10038
        CALL READQ0(AAAAO0,AAAAP0,BUFAA0,F1,T1,F2,T2,CODE)
        CALL FOLLOW(0,0)
        IF((CODE.NE.0))GOTO 10039
          HEADE0=.FALSE.
          IF((F1.EQ.0))GOTO 10040
            AAAAQ0=F1
            AAAAR0=T1
            AAAAS0=1
            GOTO 10037
10041       IF((F2.EQ.0))GOTO 10042
              AAAAQ0=F2
              AAAAR0=T2
              AAAAS0=2
              GOTO 10037
10043       CONTINUE
10042     CONTINUE
10040     GOTO 10044
10039     IF((PACKA0(1).NE.0))GOTO 10045
            CALL PRINT(-15,'*s.*n',NOQCT0)
            GOTO 10046
10045       CALL PRINT(-15,AAAAU0,NOQCT0,PACKA0)
10046   CONTINUE
10044   GOTO 10047
10038   IF((PACKA0(1).NE.0))GOTO 10048
          CALL PRINT(-15,AAAAV0,NOSPO0)
          GOTO 10049
10048     CALL PRINT(-15,AAAAW0,NOSPO0,PACKA0)
10049 CONTINUE
10047 GOTO 10050
10036 GOTO 10051
10037 DO 10052 ENT=AAAAQ0,AAAAR0
        IF((BUFAA0(ENT*41-41+1).NE.0))GOTO 10054
          GOTO 10052
10054   CALL MOVE$(BUFAA0(ENT*41-41+2),QENT,41-1)
        IF((A$BUF(237-225+1).EQ.0))GOTO 10057
        IF(NAMEQV(QENT(1),TDAAA0(13)))GOTO 10057
        GOTO 10056
10057   IF((A$BUF(228-225+1).EQ.0))GOTO 10058
        IF((AND(QENT(27),256).NE.0))GOTO 10058
        GOTO 10056
10058   IF((A$BUF(240-225+1).EQ.0))GOTO 10059
        IF(NAMEQV(QENT(20),PAPER0))GOTO 10059
        GOTO 10056
10059   IF((A$BUF(225-225+1).EQ.0))GOTO 10060
        IF(NAMEQV(QENT(30),DESTA0))GOTO 10060
        GOTO 10056
10060   GOTO 10055
10056     GOTO 10052
10055   IF((AND(QENT(27),16).NE.0))GOTO 10061
          QENT(39)=1
10061   IF((QENT(29).GE.0))GOTO 10062
          CALL CTOC(AAAAY0,SSIZE,6)
          GOTO 10063
10062     CALL ENCODE(SSIZE,6,AAAAZ0,QENT(29))
10063   PFLAG(1)=0
        IF((AND(QENT(27),64).NE.0))GOTO 10065
        IF((QENT(40).EQ.'<-'))GOTO 10065
        GOTO 10064
10065     AAAAX0=PTOC(QENT(30),160,SDEST,17)
          IF((QENT(34).EQ.'  '))GOTO 10066
            AAAAX0=AAAAX0+(PTOC(QENT(34),160,SDEST(AAAAX0+1),17-AAAAX0))
10066     IF((QENT(40).NE.'<-'))GOTO 10067
            CALL CTOC(AAABA0,PFLAG,2)
10067     GOTO 10068
10064     SDEST(1)=0
10068   CALL PTOC(QENT(4),160,SNAME,25)
        IF(HEADE0)GOTO 10069
          HEADE0=.TRUE.
          IF((PACKA0(1).EQ.0))GOTO 10070
            CALL PRINT(-11,AAABB0,PACKA0)
10070     IF((A$BUF(241-225+1).NE.0))GOTO 10071
            CALL PRINT(-11,HEADI0,160,AAABC0,AAABD0,AAABE0,AAABF0,AAABG0
     *,AAABH0,AAABI0,AAABJ0,AAABK0)
            CALL PRINT(-11,HEADI0,189,0,0,0,0,0,0,0,0,0)
10071   CONTINUE
10069   IF((A$BUF(241-225+1).EQ.0))GOTO 10072
          CALL PRINT(-11,'*3,,0i *,6h *5s *1s*6s *s*n.',ENT,QENT(1),SSIZ
     *E,PFLAG,SDEST,SNAME)
          GOTO 10073
10072     CALL PRINT(-11,'*,6h *3,,0i *2i:*2,,0i *,16h *5s *6i *,6h .',Q
     *ENT(1),ENT,QENT(26)/60,MOD(QENT(26),60),QENT(4),SSIZE,QENT(39),QEN
     *T(20))
          IF((AND(QENT(27),256).EQ.0))GOTO 10074
            CALL PRINT(-11,AAABL0,QENT(28)/60,MOD(QENT(28),60))
            GOTO 10075
10074       CALL PRINT(-11,'*6x.')
10075     CALL PRINT(-11,'*s*s*n.',PFLAG,SDEST)
10073   CONTINUE
10052 CONTINUE
10053 GOTO 10076
10051 CALL SWT
10076 GOTO(10041,10043),AAAAS0
      GOTO 10076
10035 GOTO 10004
10050 GOTO(10013,10015),AAAAB0
      GOTO 10050
      END
      SUBROUTINE READQ0(QNAM,F,QBUF,F1,T1,F2,T2,CODE)
      INTEGER QNAM(3),F,QBUF(1),F1,T1,F2,T2,CODE
      INTEGER CODE,HBUF(7),JUNK
      INTEGER * 4 POS
      INTEGER AAABM0
      F1=0
      F2=0
      CALL Q$OFFC(F,QNAM,6,:1+:40000,CODE)
      IF((CODE.EQ.0))GOTO 10078
        RETURN
10078 CALL PRWF$$(:1,F,LOC(HBUF),7,INTL(0),JUNK,CODE)
      IF((CODE.EQ.0))GOTO 10079
        AAABM0=1
        GOTO 10077
10080 CONTINUE
10079 IF((HBUF(7).NE.0))GOTO 10081
        AAABM0=2
        GOTO 10077
10082 CONTINUE
10081 F1=HBUF(3)
      T1=HBUF(4)-1
      IF((T1-F1.GE.0))GOTO 10083
        T1=200
10083 POS=INTL(F1)*41+7-41
      CALL PRWF$$(:1+:10,F,LOC(QBUF(POS-7+1)),(T1-F1+1)*41,POS,JUNK,CODE
     *)
      IF((CODE.EQ.0))GOTO 10084
        AAABM0=3
        GOTO 10077
10085 CONTINUE
10084 IF((T1.EQ.200))GOTO 10086
        AAABM0=4
        GOTO 10077
10087 CONTINUE
10086 T2=HBUF(4)-1
      IF((T2.GT.0))GOTO 10088
        AAABM0=5
        GOTO 10077
10089 CONTINUE
10088 F2=1
      CALL PRWF$$(:1+:10,F,LOC(QBUF),T2*41,INTL(7),JUNK,CODE)
      AAABM0=6
      GOTO 10077
10090 GOTO 10091
10077 CALL SRCH$$(:4,0,0,F,0,JUNK)
      CALL BREAK$(0)
      RETURN
10091 CONTINUE
10092 GOTO(10080,10082,10085,10087,10089,10090),AAABM0
      GOTO 10092
      END
      SUBROUTINE Q$OFFC(FD,NAME,LEN,KEY,CODE)
      INTEGER FD,NAME(16),LEN,KEY,CODE
      INTEGER I,JUNK
      I=1
      GOTO 10095
10093 I=I+(1)
10095 IF((I.GT.30))GOTO 10094
        CALL BREAK$(1)
        CALL SRCH$$(KEY,NAME,LEN,FD,JUNK,CODE)
        IF((CODE.EQ.5))GOTO 10096
          GOTO 10094
10096   CALL BREAK$(0)
        CALL SLEEP$(INTL(1000))
      GOTO 10093
10094 IF((CODE.EQ.0))GOTO 10097
      IF((I.GT.30))GOTO 10097
        CALL BREAK$(0)
10097 RETURN
      END
C ---- Long Name Map ----
C nospoolqmsg                    nospo0
C readqueue                      readq0
C Dest                           desta0
C Td                             tdaaa0
C printarea                      print0
C noqctrlmsg                     noqct0
C headingformat                  headi0
C Buf                            bufaa0
C Paper                          paper0
C cancelentries                  cance0
C Queuepath                      queue0
C Pack                           packa0
C listqueue                      listq0
C Headerprinted                  heade0
