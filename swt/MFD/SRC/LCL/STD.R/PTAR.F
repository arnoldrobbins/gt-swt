      INTEGER TBUFA0(512)
      INTEGER NAMEA0(100)
      INTEGER MODEA0(8)
      INTEGER UIDAA0(8)
      INTEGER GIDAA0(8)
      INTEGER SIZEA0(12)
      INTEGER MTIME0(12)
      INTEGER CHKSU0(8)
      INTEGER LINKF0
      INTEGER LINKN0(100)
      COMMON /TARCOM/TBUFA0
      INTEGER * 4 BLOCK0
      COMMON /BLKCOM/BLOCK0
      INTEGER PAAAA0,PBUFA0(512)
      COMMON /BUFCOM/PAAAA0,PBUFA0
      COMMON /FILCOM/INFILE
      INTEGER INFILE
      INTEGER I,DUMMY,GETBUF,LEN,LENGTH,MKDIR$
      INTEGER * 4 L,CNT,GCTOL
      INTEGER FD,CREATE,COMFI0
      LOGICAL SKIP
      INTEGER FILEN0(17)
      INTEGER A$BUF(200)
      INTEGER PARSCL
      INTEGER AAAAA0(26)
      INTEGER AAAAB0(49)
      INTEGER AAAAC0(13)
      INTEGER AAAAD0(2)
      INTEGER AAAAE0(20)
      INTEGER AAAAF0(15)
      INTEGER AAAAG0(18)
      INTEGER AAAAH0(35)
      INTEGER AAAAI0(25)
      INTEGER AAAAJ0(22)
      INTEGER AAAAK0(10)
      INTEGER AAAAL0(39)
      EQUIVALENCE (TBUFA0(1),NAMEA0(1))
      EQUIVALENCE (TBUFA0(101),MODEA0(1))
      EQUIVALENCE (TBUFA0(109),UIDAA0(1))
      EQUIVALENCE (TBUFA0(117),GIDAA0(1))
      EQUIVALENCE (TBUFA0(125),SIZEA0(1))
      EQUIVALENCE (TBUFA0(137),MTIME0(1))
      EQUIVALENCE (TBUFA0(149),CHKSU0(1))
      EQUIVALENCE (TBUFA0(157),LINKF0)
      EQUIVALENCE (TBUFA0(158),LINKN0(1))
      DATA FILEN0/223,228,229,244,225,226,174,244,225,242,174,230,233,23
     *6,229,243,0/
      DATA AAAAA0/248,188,230,190,160,246,188,230,190,160,244,188,230,19
     *0,160,230,188,242,229,241,160,243,244,242,190,0/
      DATA AAAAB0/247,225,242,238,233,238,231,186,160,227,239,245,236,22
     *8,238,167,244,160,227,242,229,225,244,229,160,228,229,244,225,226,
     *233,238,231,160,227,239,237,237,225,238,228,160,230,233,236,229,17
     *0,238,0/
      DATA AAAAC0/243,232,244,242,225,227,229,160,229,248,170,238,0/
      DATA AAAAD0/173,0/
      DATA AAAAE0/170,243,186,160,227,239,245,236,228,238,167,244,160,23
     *9,240,229,238,170,238,0/
      DATA AAAAF0/170,243,172,160,170,236,160,226,249,244,229,243,170,23
     *8,0/
      DATA AAAAG0/170,243,160,236,233,238,235,229,228,160,244,239,160,17
     *0,243,170,238,0/
      DATA AAAAH0/227,239,245,236,228,238,167,244,160,237,225,235,229,16
     *0,244,232,229,160,228,233,242,229,227,244,239,242,249,160,167,170,
     *243,167,170,238,0/
      DATA AAAAI0/170,243,190,160,228,229,244,225,226,160,171,184,160,25
     *2,160,227,225,244,160,190,170,243,170,238,0/
      DATA AAAAJ0/170,243,186,160,227,239,245,236,228,238,167,244,160,22
     *7,242,229,225,244,229,170,238,0/
      DATA AAAAK0/243,232,244,242,225,227,229,170,238,0/
      DATA AAAAL0/245,243,229,160,170,243,160,244,239,160,242,229,237,23
     *9,246,229,160,244,225,226,243,160,230,242,239,237,160,238,229,247,
     *160,230,233,236,229,243,170,238,0/
      IF((PARSCL(AAAAA0,A$BUF).NE.-3))GOTO 10000
        CALL ERROR('usage: ptar [-xvt] [-f <file>].')
10000 IF((A$BUF(244-225+1).EQ.0))GOTO 10001
        SKIP=.TRUE.
        GOTO 10002
10001   SKIP=.FALSE.
10002 IF((A$BUF(244-225+1).NE.0))GOTO 10003
        COMFI0=CREATE(FILEN0,2)
10003 IF((A$BUF(244-225+1).NE.0))GOTO 10004
      IF((COMFI0.NE.-3))GOTO 10004
        CALL PRINT(-15,AAAAB0)
10004 IF((A$BUF(244-225+1).NE.0))GOTO 10005
        CALL PRINT(COMFI0,AAAAC0)
10005 IF((A$BUF(230-225+1).EQ.0))GOTO 10006
        IF((EQUAL(A$BUF(A$BUF(230-225+27)),AAAAD0).NE.1))GOTO 10007
          INFILE=-10
          GOTO 10008
10007     INFILE=OPEN(A$BUF(A$BUF(230-225+27)),1)
          IF((INFILE.NE.-3))GOTO 10009
            CALL PRINT(-15,AAAAE0,A$BUF(A$BUF(230-225+27)))
            CALL SWT
10009   CONTINUE
10008   GOTO 10010
10006   INFILE=-10
10010 PAAAA0=1
      BLOCK0=1
10011 IF((GETBUF(DUMMY).EQ.-1))GOTO 10012
        IF((NAMEA0(1).NE.0))GOTO 10013
        IF((GETBUF(DUMMY).EQ.-1))GOTO 10013
          IF((NAMEA0(1).NE.0))GOTO 10014
            GOTO 10012
10014   CONTINUE
10013   I=1
        L=GCTOL(SIZEA0,I,8)
        IF((LINKF0.EQ.177))GOTO 10015
          IF((A$BUF(246-225+1).NE.0))GOTO 10017
          IF((A$BUF(244-225+1).NE.0))GOTO 10017
          GOTO 10016
10017       CALL PRINT(-11,AAAAF0,NAMEA0,L)
10016     GOTO 10018
10015     IF((A$BUF(246-225+1).NE.0))GOTO 10020
          IF((A$BUF(244-225+1).NE.0))GOTO 10020
          GOTO 10019
10020       CALL PRINT(-11,AAAAG0,NAMEA0,LINKN0)
10019     L=0
          SKIP=.TRUE.
10018   LEN=LENGTH(NAMEA0)
        CALL FIXNA0(NAMEA0,LEN)
        LEN=LENGTH(NAMEA0)
        IF((NAMEA0(LEN).NE.175))GOTO 10021
          NAMEA0(LEN)=0
          LEN=LEN-(1)
          IF((A$BUF(244-225+1).NE.0))GOTO 10022
          IF((MKDIR$(NAMEA0,0,0).NE.-3))GOTO 10022
            CALL PRINT(-15,AAAAH0,NAMEA0)
10022     SKIP=.TRUE.
          GOTO 10023
10021     IF((NAMEA0(1).EQ.0))GOTO 10024
            IF((A$BUF(244-225+1).NE.0))GOTO 10025
              CALL PRINT(COMFI0,AAAAI0,NAMEA0,NAMEA0)
              FD=CREATE(NAMEA0,3)
              IF((FD.NE.-3))GOTO 10026
                CALL PRINT(-15,AAAAJ0,NAMEA0)
                SKIP=.TRUE.
                GOTO 10027
10026           SKIP=.FALSE.
10027       CONTINUE
10025       CNT=0
            GOTO 10030
10028       CNT=CNT+(512)
10030       IF((CNT.GE.L))GOTO 10029
              CALL GETBUF(DUMMY)
              IF(SKIP)GOTO 10031
              IF((A$BUF(244-225+1).NE.0))GOTO 10031
                CALL PUTBUF(FD,L,CNT)
10031       GOTO 10028
10029       IF(SKIP)GOTO 10032
              CALL CLOSE(FD)
10032     CONTINUE
10024   CONTINUE
10023 GOTO 10011
10012 IF((A$BUF(244-225+1).NE.0))GOTO 10033
        CALL PRINT(COMFI0,AAAAK0)
        CALL CLOSE(COMFI0)
        CALL PRINT(-11,AAAAL0,FILEN0)
10033 IF((INFILE.EQ.-10))GOTO 10034
        CALL CLOSE(INFILE)
10034 CALL SWT
      END
      SUBROUTINE PUTBUF(FD,L,CNT)
      INTEGER FD
      INTEGER * 4 L,CNT
      INTEGER TBUFA0(512)
      INTEGER NAMEA0(100)
      INTEGER MODEA0(8)
      INTEGER UIDAA0(8)
      INTEGER GIDAA0(8)
      INTEGER SIZEA0(12)
      INTEGER MTIME0(12)
      INTEGER CHKSU0(8)
      INTEGER LINKF0
      INTEGER LINKN0(100)
      COMMON /TARCOM/TBUFA0
      INTEGER * 4 BLOCK0
      COMMON /BLKCOM/BLOCK0
      INTEGER PAAAA0,PBUFA0(512)
      COMMON /BUFCOM/PAAAA0,PBUFA0
      COMMON /FILCOM/INFILE
      INTEGER INFILE
      INTEGER * 4 I,J,M
      EQUIVALENCE (TBUFA0(1),NAMEA0(1))
      EQUIVALENCE (TBUFA0(101),MODEA0(1))
      EQUIVALENCE (TBUFA0(109),UIDAA0(1))
      EQUIVALENCE (TBUFA0(117),GIDAA0(1))
      EQUIVALENCE (TBUFA0(125),SIZEA0(1))
      EQUIVALENCE (TBUFA0(137),MTIME0(1))
      EQUIVALENCE (TBUFA0(149),CHKSU0(1))
      EQUIVALENCE (TBUFA0(157),LINKF0)
      EQUIVALENCE (TBUFA0(158),LINKN0(1))
      IF(((L-CNT).LE.512))GOTO 10035
        M=512
        GOTO 10036
10035   M=L-CNT
10036 I=1
      GOTO 10039
10037 I=I+(1)
10039 IF((I.GT.M))GOTO 10038
        PBUFA0(PAAAA0)=TBUFA0(I)
        PAAAA0=PAAAA0+(1)
        IF((TBUFA0(I).NE.138))GOTO 10040
          PBUFA0(PAAAA0)=0
          CALL PUTLIN(PBUFA0,FD)
          PAAAA0=1
10040 GOTO 10037
10038 RETURN
      END
      INTEGER FUNCTION GETBUF(DUMMY)
      INTEGER DUMMY
      INTEGER READF
      INTEGER I,BUF(512)
      INTEGER TBUFA0(512)
      INTEGER NAMEA0(100)
      INTEGER MODEA0(8)
      INTEGER UIDAA0(8)
      INTEGER GIDAA0(8)
      INTEGER SIZEA0(12)
      INTEGER MTIME0(12)
      INTEGER CHKSU0(8)
      INTEGER LINKF0
      INTEGER LINKN0(100)
      COMMON /TARCOM/TBUFA0
      INTEGER * 4 BLOCK0
      COMMON /BLKCOM/BLOCK0
      INTEGER PAAAA0,PBUFA0(512)
      COMMON /BUFCOM/PAAAA0,PBUFA0
      COMMON /FILCOM/INFILE
      INTEGER INFILE
      INTEGER AAAAM0(31)
      EQUIVALENCE (TBUFA0(1),NAMEA0(1))
      EQUIVALENCE (TBUFA0(101),MODEA0(1))
      EQUIVALENCE (TBUFA0(109),UIDAA0(1))
      EQUIVALENCE (TBUFA0(117),GIDAA0(1))
      EQUIVALENCE (TBUFA0(125),SIZEA0(1))
      EQUIVALENCE (TBUFA0(137),MTIME0(1))
      EQUIVALENCE (TBUFA0(149),CHKSU0(1))
      EQUIVALENCE (TBUFA0(157),LINKF0)
      EQUIVALENCE (TBUFA0(158),LINKN0(1))
      DATA AAAAM0/197,242,242,239,242,160,247,232,233,236,229,160,242,22
     *9,225,228,233,238,231,160,226,236,239,227,235,160,170,236,170,238,
     *0/
      I=READF(BUF,256,INFILE)
      IF((I.EQ.256))GOTO 10041
      IF((I.EQ.-1))GOTO 10041
        CALL PRINT(-15,AAAAM0,BLOCK0)
        CALL SWT
10041 IF((I.NE.-1))GOTO 10042
        GETBUF=-1
        RETURN
10042 BLOCK0=BLOCK0+(1)
      I=1
      GOTO 10045
10043 I=I+(1)
10045 IF((I.GT.256))GOTO 10044
        TBUFA0(2*I-1)=RS(BUF(I),8)
        TBUFA0(2*I)=RT(BUF(I),8)
        IF((TBUFA0(2*I-1).EQ.0))GOTO 10046
          TBUFA0(2*I-1)=OR(TBUFA0(2*I-1),128)
10046   IF((TBUFA0(2*I).EQ.0))GOTO 10047
          TBUFA0(2*I)=OR(TBUFA0(2*I),128)
10047 GOTO 10043
10044 GETBUF=0
      RETURN
      END
      SUBROUTINE CHECK0(NAME)
      INTEGER NAME(1)
      INTEGER NAMBUF(100)
      INTEGER I,J,LENGTH
      J=LENGTH(NAME)
      I=J
      GOTO 10050
10048 I=I-(1)
10050 IF((NAME(I).EQ.175))GOTO 10049
      GOTO 10048
10049 I=I+(1)
      IF((176.GT.NAME(I)))GOTO 10051
      IF((NAME(I).GT.185))GOTO 10051
        J=J+2
        GOTO 10054
10052   J=J-(1)
10054   IF((J.LE.I))GOTO 10053
          NAME(J)=NAME(J-1)
        GOTO 10052
10053   NAME(I)=223
10051 RETURN
      END
      SUBROUTINE FIXNA0(NAME,LEN)
      INTEGER NAME(1)
      INTEGER LEN
      INTEGER I,LENGTH
      IF((NAME(1).NE.175))GOTO 10055
        I=LEN+1
        GOTO 10058
10056   I=I-(1)
10058IF((I.LT.2))GOTO 10057
          NAME(I)=NAME(I-1)
        GOTO 10056
10057   LEN=LENGTH(NAME)
10055 CONTINUE
10059 IF((NAME(1).NE.174))GOTO 10060
      IF((NAME(2).NE.175))GOTO 10060
        I=3
        GOTO 10063
10061   I=I+(1)
10063   IF((I.GT.LEN+1))GOTO 10062
          NAME(I-2)=NAME(I)
        GOTO 10061
10062   LEN=LENGTH(NAME)
      GOTO 10059
10060 CONTINUE
10064 IF((NAME(1).NE.174))GOTO 10065
      IF((NAME(2).NE.174))GOTO 10065
      IF((NAME(3).NE.175))GOTO 10065
        I=3
        GOTO 10068
10066   I=I+(1)
10068   IF((I.GT.LEN+1))GOTO 10067
          NAME(I-2)=NAME(I)
        GOTO 10066
10067   NAME(1)=220
        LEN=LENGTH(NAME)
      GOTO 10064
10065 CALL CHECK0(NAME)
      RETURN
      END
C ---- Long Name Map ----
C Pbuf                           pbufa0
C fixname                        fixna0
C filename                       filen0
C Tbuf                           tbufa0
C Chksum                         chksu0
C Block                          block0
C Gid                            gidaa0
C Size                           sizea0
C Linkflag                       linkf0
C Uid                            uidaa0
C Mtime                          mtime0
C Linkname                       linkn0
C P                              paaaa0
C checkdig                       check0
C Name                           namea0
C comfile                        comfi0
C Mode                           modea0
