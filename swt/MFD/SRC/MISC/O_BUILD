SYS.C!    shtrace ex
 0
SYS.C! 
SYS.C!    template -a newbin //newbin
[ 1:ex]    template -a newbin //newbin
 SYS.C!    template -a newlib //newlib
[ 1:ex]    template -a newlib //newlib
 SYS.C!    template -a newebin //newebin
[ 1:ex]    template -a newebin //newebin
 SYS.C!    template -a newlbin //newlbin
[ 1:ex]    template -a newlbin //newlbin
 SYS.C!    template -a newgames //newgames
[ 1:ex]    template -a newgames //newgames
 SYS.C!    template -a newcmdnc0 //newcmdnc0
[ 1:ex]    template -a newcmdnc0 //newcmdnc0
 SYS.C!    template -a newsystem //newsystem
[ 1:ex]    template -a newsystem //newsystem
 SYS.C! 
SYS.C!    buildall
 [ 1:ex]    buildall
[ 2:ex]    declare _search_rule = "^int,=bin=/&,=lbin=/&,^var,&"
 [ 3:ex] cd -p
[ 2:ex]    declare od = /swt/src/misc
[ 3:ex] template =bin=
 [ 3:ex] template =newbin=
[ 3:ex]  cmp /swt/bin == //newbin 
 [ 2:ex]    if 0
[ 3:ex] template =lbin=
[ 3:ex] template =newlbin=
 [ 3:ex]  cmp /swt/lbin == //newlbin 
 [ 2:ex]    if 0
[ 3:ex] template =ebin=
[ 3:ex] template =newebin=
 [ 3:ex]  cmp /swt/extra/bin == //newebin 
[ 2:ex]    if 0
[ 3:ex] template =cmdnc0=
[ 3:ex] template =newcmdnc0=
 [ 3:ex]  cmp //cmdnc0 == //newcmdnc0 
[ 2:ex]    if 0
[ 3:ex] template =system=
[ 3:ex] template =newsystem=
 [ 3:ex]  cmp //system == //newsystem 
[ 2:ex]    if 0
[ 3:ex] template =lib=
 [ 3:ex] template =newlib=
[ 3:ex]  cmp //lib == //newlib 
[ 2:ex]    if 0
[ 2:ex]    =src=/misc/absent build >=src=/bk$=pid=
 [ 3:ex]    declare _search_rule = "^int,=bin=/&,=lbin=/&,&"
[ 3:ex]    lf -cstf =src= >=temp=/ab=pid=
[ 4:ex] arg 1 | quote
[ 4:ex] arg 1 | quote
[ 3:ex]    =temp=/ab=pid=> find %ufd | change "%ufd " | sort |cmp    =temp=/ab=pid=> find ~%ufd | change "%????" |       find /build$ | change /build$ | sort |cmp    :cmp ^cn/1
 [ 4:ex]  common -1 |$ =src=/misc/absdirs> sort | common -1 
[ 3:ex]    del =temp=/ab=pid=
[ 3:ex] file -nz =src=/bk$=pid=
[ 2:ex]    if 0
[ 2:ex]    =src=/misc/absent install >=src=/bk$=pid=
 [ 3:ex]    declare _search_rule = "^int,=bin=/&,=lbin=/&,&"
[ 3:ex]    lf -cstf =src= >=temp=/ab=pid=
[ 4:ex] arg 1 | quote
[ 4:ex] arg 1 | quote
[ 3:ex]    =temp=/ab=pid=> find %ufd | change "%ufd " | sort |cmp    =temp=/ab=pid=> find ~%ufd | change "%????" |       find /install$ | change /install$ | sort |cmp    :cmp ^cn/1
 [ 4:ex]  common -1 |$ =src=/misc/absdirs> sort | common -1 
[ 3:ex]    del =temp=/ab=pid=
[ 3:ex] file -nz =src=/bk$=pid=
[ 2:ex]    if 0
[ 2:ex]    del =src=/bk$=pid=
[ 2:ex]    del -sf =newbin= =newlbin= =newebin= =newcmdnc0= =newsystem= =newlib=
 [ 2:ex]    =src=/misc/mkxin build =src= | tee -2 |A |B       :A find /lib/    >=src=/ba$=pid=,       :B find /lib/ -x >=src=/bc$=pid=
[ 3:ex]    declare _search_rule = "^int,=bin=/&,=lbin=/&,^var,&"
 [ 4:ex] arg 2
[ 4:ex] arg 1 | quote
[ 4:ex] arg 1 | quote
[ 3:ex]    lf -csf =src= | find /build$ |       change "%{?*}/{"build"}$" "cd @1; @2"
[ 2:ex]    =src=/ba$=pid=
[ 3:ex] cd =src=/lib/edt
 [ 3:ex]  build
 [ 4:ex]    declare _search_rule = "^int,^var,=bin=/&"
[ 4:ex]    rp ed.r -ag
 [ 4:ex]    fc ed.f -b vedtlb -d0oq
 [ 5:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 6:ex] args
 [ 6:ex] fc "ed.f" "-b" "vedtlb" "-d0oq"
[ 5:ex]    x "ftn -i *>ed.f -b *>vedtlb -l no -64v -dc -dy -sp -u"
 0000 ERRORS [<EDIT  >FTN-REV19.2] 
 0000 ERRORS [<LED$1 >FTN-REV19.2] 
 0000 ERRORS [<LED$2 >FTN-REV19.2] 
 0000 ERRORS [<LED$3 >FTN-REV19.2] 
 0000 ERRORS [<LED$6 >FTN-REV19.2] 
 0000 ERRORS [<LED$7 >FTN-REV19.2] 
 0000 ERRORS [<LED$8 >FTN-REV19.2] 
 0000 ERRORS [<LED$9 >FTN-REV19.2] 
 0000 ERRORS [<LED$15>FTN-REV19.2] 
 0000 ERRORS [<LED$23>FTN-REV19.2] 
 0000 ERRORS [<LED$24>FTN-REV19.2] 
 0000 ERRORS [<LED$25>FTN-REV19.2] 
 0000 ERRORS [<LED$26>FTN-REV19.2] 
 0000 ERRORS [<LED$28>FTN-REV19.2] 
 0000 ERRORS [<LED$77>FTN-REV19.2] 
 0000 ERRORS [<LED$29>FTN-REV19.2] 
 0000 ERRORS [<LED$30>FTN-REV19.2] 
 0000 ERRORS [<LED$27>FTN-REV19.2] 
 0000 ERRORS [<LED$31>FTN-REV19.2] 
 0000 ERRORS [<LED$32>FTN-REV19.2] 
 0000 ERRORS [<LED$33>FTN-REV19.2] 
 0000 ERRORS [<LED$34>FTN-REV19.2] 
 0000 ERRORS [<LED$35>FTN-REV19.2] 
 0000 ERRORS [<LED$36>FTN-REV19.2] 
 0000 ERRORS [<LED$37>FTN-REV19.2] 
 0000 ERRORS [<LED$39>FTN-REV19.2] 
 0000 ERRORS [<LED$40>FTN-REV19.2] 
 0000 ERRORS [<LED$41>FTN-REV19.2] 
 0000 ERRORS [<LED$42>FTN-REV19.2] 
 0000 ERRORS [<LED$43>FTN-REV19.2] 
 0000 ERRORS [<LED$44>FTN-REV19.2] 
 0000 ERRORS [<LED$45>FTN-REV19.2] 
 0000 ERRORS [<LED$46>FTN-REV19.2] 
 0000 ERRORS [<LED$47>FTN-REV19.2] 
 0000 ERRORS [<LED$48>FTN-REV19.2] 
 0000 ERRORS [<LED$49>FTN-REV19.2] 
 0000 ERRORS [<LED$54>FTN-REV19.2] 
 0000 ERRORS [<LED$55>FTN-REV19.2] 
 0000 ERRORS [<LED$56>FTN-REV19.2] 
 0000 ERRORS [<LED$58>FTN-REV19.2] 
 0000 ERRORS [<LED$60>FTN-REV19.2] 
 0000 ERRORS [<LED$61>FTN-REV19.2] 
 0000 ERRORS [<LED$62>FTN-REV19.2] 
 0000 ERRORS [<LED$63>FTN-REV19.2] 
 0000 ERRORS [<LED$64>FTN-REV19.2] 
 0000 ERRORS [<LED$65>FTN-REV19.2] 
 0000 ERRORS [<LED$66>FTN-REV19.2] 
 0000 ERRORS [<LED$69>FTN-REV19.2] 
 0000 ERRORS [<LED$73>FTN-REV19.2] 
 0000 ERRORS [<LED$74>FTN-REV19.2] 
 0000 ERRORS [<LED$75>FTN-REV19.2] 
 0000 ERRORS [<LED$76>FTN-REV19.2] 
 0000 ERRORS [<LED$81>FTN-REV19.2] 
 0000 ERRORS [<LED$50>FTN-REV19.2] 
 0000 ERRORS [<LED$52>FTN-REV19.2] 
 0000 ERRORS [<LED$67>FTN-REV19.2] 
 0000 ERRORS [<LED$79>FTN-REV19.2] 
 0000 ERRORS [<LED$70>FTN-REV19.2] 
 0000 ERRORS [<LED$57>FTN-REV19.2] 
 0000 ERRORS [<LED$72>FTN-REV19.2] 
 0000 ERRORS [<LED$11>FTN-REV19.2] 
 0000 ERRORS [<LED$51>FTN-REV19.2] 
 0000 ERRORS [<LED$71>FTN-REV19.2] 
 0000 ERRORS [<LED$59>FTN-REV19.2] 
 0000 ERRORS [<LED$78>FTN-REV19.2] 
 0000 ERRORS [<LED$80>FTN-REV19.2] 
 0000 ERRORS [<LED$68>FTN-REV19.2] 
 0000 ERRORS [<LED$38>FTN-REV19.2] 
 0000 ERRORS [<LED$22>FTN-REV19.2] 
 0000 ERRORS [<LED$53>FTN-REV19.2] 
 [ 3:ex] cd =src=/lib/swt
 [ 3:ex]  build
 [ 4:ex]    declare _search_rule = "^int,=bin=/&,&,^var"
[ 4:ex]    build_archive
 [ 5:ex]    declare _search_rule = "^int,=bin=/&,&,^var"
[ 5:ex]    declare opt
 [ 6:ex] arg 1
[ 5:ex]    case 
 [ 5:ex]          set opt = ""
[ 5:ex]       out
[ 5:ex]    cd src
[ 6:ex] line
 [ 5:ex]    lf -c |       find ".[cprs]$" -x |       find ".pl[gp]$" -x >\lrb039
[ 6:ex] line
 [ 6:ex] file -nz lrb039
[ 5:ex]    if 0
[ 6:ex] line
 [ 5:ex]    lf -c >\lrb039
[ 6:ex] line
 [ 6:ex] file -nz \lrb039
 [ 5:ex]    if 1
[ 6:ex] line
 [ 6:ex] opt
[ 5:ex]       \lrb039> ar -u \src.a -n
 [ 5:ex]    fi
[ 5:ex]    cd \
[ 6:ex] line
 [ 5:ex]    del lrb039
[ 4:ex]    del -s obj
[ 4:ex]    ar -t src.a | find .r$ | slice -i "%" -x "%parscl.r$" |       ^cn/1 | rp -ag >rsrc.f
[ 5:ex] cat def.r.i
[ 5:ex]  ar -p src.a -n
[ 4:ex]    ar -t src.a | find .r$ | slice -i "%parscl.r$" -x "z$" |       ^cn/1 | rp -ag >>rsrc.f
[ 5:ex] cat def.r.i
[ 5:ex]  ar -p src.a -n
[ 4:ex]    fc -d0oq rsrc.f
 [ 5:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 6:ex] args
 [ 6:ex] fc "-d0oq" "rsrc.f"
[ 5:ex]    x "ftn -i *>rsrc.f -b *>rsrc.b -l no -64v -dc -dy -sp -u"
 0000 ERRORS [<ADDSET>FTN-REV19.2] 
 0000 ERRORS [<AMATCH>FTN-REV19.2] 
 0000 ERRORS [<ATOC  >FTN-REV19.2] 
 0000 ERRORS [<BPONU$>FTN-REV19.2] 
 0000 ERRORS [<C$END >FTN-REV19.2] 
 0000 ERRORS [<C$INCR>FTN-REV19.2] 
 0000 ERRORS [<CANT  >FTN-REV19.2] 
 0000 ERRORS [<CATSUB>FTN-REV19.2] 
 0000 ERRORS [<CHKARG>FTN-REV19.2] 
 0000 ERRORS [<CHKSTR>FTN-REV19.2] 
 0000 ERRORS [<CHUNK$>FTN-REV19.2] 
 0000 ERRORS [<CLOSE >FTN-REV19.2] 
 0000 ERRORS [<COF$  >FTN-REV19.2] 
 0000 ERRORS [<CPFIL$>FTN-REV19.2] 
 0000 ERRORS [<CPSEG$>FTN-REV19.2] 
 0000 ERRORS [<CREATE>FTN-REV19.2] 
 0000 ERRORS [<CTOA  >FTN-REV19.2] 
 0000 ERRORS [<CTOD  >FTN-REV19.2] 
 0000 ERRORS [<CTOI  >FTN-REV19.2] 
 0000 ERRORS [<CTOL  >FTN-REV19.2] 
 0000 ERRORS [<CTOMN >FTN-REV19.2] 
 0000 ERRORS [<CTOP  >FTN-REV19.2] 
 0000 ERRORS [<CTOR  >FTN-REV19.2] 
 0000 ERRORS [<CTOV  >FTN-REV19.2] 
 0000 ERRORS [<DATE  >FTN-REV19.2] 
 0000 ERRORS [<DECODE>FTN-REV19.2] 
 0000 ERRORS [<DELARG>FTN-REV19.2] 
 0000 ERRORS [<DELETE>FTN-REV19.2] 
 0000 ERRORS [<DMARK$>FTN-REV19.2] 
 0000 ERRORS [<DMPCM$>FTN-REV19.2] 
 0000 ERRORS [<DMPFD$>FTN-REV19.2] 
 0000 ERRORS [<DODASH>FTN-REV19.2] 
 0000 ERRORS [<DOPEN$>FTN-REV19.2] 
 0000 ERRORS [<DREAD$>FTN-REV19.2] 
 0000 ERRORS [<DSDBIU>FTN-REV19.2] 
 0000 ERRORS [<DSDUMP>FTN-REV19.2] 
 0000 ERRORS [<DSEEK$>FTN-REV19.2] 
 0000 ERRORS [<DSFREE>FTN-REV19.2] 
 0000 ERRORS [<DSGET >FTN-REV19.2] 
 0000 ERRORS [<DSINIT>FTN-REV19.2] 
 0000 ERRORS [<DTOC  >FTN-REV19.2] 
 0000 ERRORS [<DWRIT$>FTN-REV19.2] 
 0000 ERRORS [<ENCODE>FTN-REV19.2] 
 0000 ERRORS [<ENTER >FTN-REV19.2] 
 0000 ERRORS [<ERROR >FTN-REV19.2] 
 0000 ERRORS [<ESC   >FTN-REV19.2] 
 0000 ERRORS [<EXEC  >FTN-REV19.2] 
 0000 ERRORS [<EXECN >FTN-REV19.2] 
 0000 ERRORS [<EXPAND>FTN-REV19.2] 
 0000 ERRORS [<FCOPY >FTN-REV19.2] 
 0000 ERRORS [<FILCPY>FTN-REV19.2] 
 0000 ERRORS [<FILSET>FTN-REV19.2] 
 0000 ERRORS [<FILTST>FTN-REV19.2] 
 0000 ERRORS [<FINDF$>FTN-REV19.2] 
 0000 ERRORS [<FINFO$>FTN-REV19.2] 
 0000 ERRORS [<FIRST$>FTN-REV19.2] 
 0000 ERRORS [<FLUSH$>FTN-REV19.2] 
 0000 ERRORS [<FOLLOW>FTN-REV19.2] 
 0000 ERRORS [<GCDIR$>FTN-REV19.2] 
 0000 ERRORS [<GCIFU$>FTN-REV19.2] 
 0000 ERRORS [<GCTOI >FTN-REV19.2] 
 0000 ERRORS [<GCTOL >FTN-REV19.2] 
 0000 ERRORS [<GETA$F>FTN-REV19.2] 
 0000 ERRORS [<GETA$P>FTN-REV19.2] 
 0000 ERRORS [<GETARG>FTN-REV19.2] 
 0000 ERRORS [<GETCCL>FTN-REV19.2] 
 0000 ERRORS [<GETCH >FTN-REV19.2] 
 0000 ERRORS [<GETFD$>FTN-REV19.2] 
 0000 ERRORS [<GETKWD>FTN-REV19.2] 
 0000 ERRORS [<GETLIN>FTN-REV19.2] 
 0000 ERRORS [<GETTO >FTN-REV19.2] 
 0000 ERRORS [<GETVDN>FTN-REV19.2] 
 0000 ERRORS [<GETWRD>FTN-REV19.2] 
 0000 ERRORS [<GFDATA>FTN-REV19.2] 
 0000 ERRORS [<GFNAM$>FTN-REV19.2] 
 0000 ERRORS [<GFNARG>FTN-REV19.2] 
 0000 ERRORS [<GITOC >FTN-REV19.2] 
 0000 ERRORS [<GKLARG>FTN-REV19.2] 
 0000 ERRORS [<GLTOC >FTN-REV19.2] 
 0000 ERRORS [<GTACL$>FTN-REV19.2] 
 0000 ERRORS [<GTATTR>FTN-REV19.2] 
 0000 ERRORS [<GTEMP >FTN-REV19.2] 
 0000 ERRORS [<GTTYPE>FTN-REV19.2] 
 0000 ERRORS [<GVLARG>FTN-REV19.2] 
 0000 ERRORS [<ICOMN$>FTN-REV19.2] 
 0000 ERRORS [<INIT$F>FTN-REV19.2] 
 0000 ERRORS [<INIT$P>FTN-REV19.2] 
 0000 ERRORS [<INIT  >FTN-REV19.2] 
 0000 ERRORS [<INPUT >FTN-REV19.2] 
 0000 ERRORS [<IOFL$ >FTN-REV19.2] 
 0000 ERRORS [<IOINIT>FTN-REV19.2] 
 0000 ERRORS [<ISADSK>FTN-REV19.2] 
 0000 ERRORS [<ISATTY>FTN-REV19.2] 
 0000 ERRORS [<ISNULL>FTN-REV19.2] 
 0000 ERRORS [<ISPH$ >FTN-REV19.2] 
 0000 ERRORS [<ITOC  >FTN-REV19.2] 
 0000 ERRORS [<JDATE >FTN-REV19.2] 
 0000 ERRORS [<LDSEG$>FTN-REV19.2] 
 0000 ERRORS [<LDTMP$>FTN-REV19.2] 
 0000 ERRORS [<LOCATE>FTN-REV19.2] 
 0000 ERRORS [<LOOKAC>FTN-REV19.2] 
 0000 ERRORS [<LOOKUP>FTN-REV19.2] 
 0000 ERRORS [<LOPEN$>FTN-REV19.2] 
 0000 ERRORS [<LTOC  >FTN-REV19.2] 
 0000 ERRORS [<LUTEMP>FTN-REV19.2] 
 0000 ERRORS [<MAKPAT>FTN-REV19.2] 
 0000 ERRORS [<MAKSUB>FTN-REV19.2] 
 0000 ERRORS [<MAPDN >FTN-REV19.2] 
 0000 ERRORS [<MAPFD >FTN-REV19.2] 
 0000 ERRORS [<MAPSTR>FTN-REV19.2] 
 0000 ERRORS [<MAPSU >FTN-REV19.2] 
 0000 ERRORS [<MAPUP >FTN-REV19.2] 
 0000 ERRORS [<MARKF >FTN-REV19.2] 
 0000 ERRORS [<MATCH >FTN-REV19.2] 
 0000 ERRORS [<MKDIR$>FTN-REV19.2] 
 0000 ERRORS [<MKFD$ >FTN-REV19.2] 
 0000 ERRORS [<MKPA$ >FTN-REV19.2] 
 0000 ERRORS [<MKPACL>FTN-REV19.2] 
 0000 ERRORS [<MKSACL>FTN-REV19.2] 
 0000 ERRORS [<MKTABL>FTN-REV19.2] 
 0000 ERRORS [<MKTEMP>FTN-REV19.2] 
 0000 ERRORS [<MKTR$ >FTN-REV19.2] 
 0000 ERRORS [<MNTOC >FTN-REV19.2] 
 0000 ERRORS [<OMATCH>FTN-REV19.2] 
 0000 ERRORS [<OPEN  >FTN-REV19.2] 
 0000 ERRORS [<PAGE  >FTN-REV19.2] 
 0000 ERRORS [<PG$BRK>FTN-REV19.2] 
 0000 ERRORS [<PARSA$>FTN-REV19.2] 
 0000 ERRORS [<PARSCL>FTN-REV19.2] 
 0000 ERRORS [<PARSDT>FTN-REV19.2] 
 0000 ERRORS [<PARSTM>FTN-REV19.2] 
 0000 ERRORS [<PATSIZ>FTN-REV19.2] 
 0000 ERRORS [<PRINT >FTN-REV19.2] 
 0000 ERRORS [<PTOC  >FTN-REV19.2] 
 0000 ERRORS [<PUTCH >FTN-REV19.2] 
 0000 ERRORS [<PUTDEC>FTN-REV19.2] 
 0000 ERRORS [<PUTLIN>FTN-REV19.2] 
 0000 ERRORS [<PUTLIT>FTN-REV19.2] 
 0000 ERRORS [<READF >FTN-REV19.2] 
 0000 ERRORS [<REMARK>FTN-REV19.2] 
 0000 ERRORS [<REMOVE>FTN-REV19.2] 
 0000 ERRORS [<REWIND>FTN-REV19.2] 
 0000 ERRORS [<RMFIL$>FTN-REV19.2] 
 0000 ERRORS [<RMSEG$>FTN-REV19.2] 
 0000 ERRORS [<RMTABL>FTN-REV19.2] 
 0000 ERRORS [<RMTEMP>FTN-REV19.2] 
 0000 ERRORS [<RTOC  >FTN-REV19.2] 
 0000 ERRORS [<SCTABL>FTN-REV19.2] 
 0000 ERRORS [<SDROP >FTN-REV19.2] 
 0000 ERRORS [<SEEKF >FTN-REV19.2] 
 0000 ERRORS [<SETERR>FTN-REV19.2] 
 0000 ERRORS [<SFDATA>FTN-REV19.2] 
 0000 ERRORS [<SPROT$>FTN-REV19.2] 
 0000 ERRORS [<ST$LU >FTN-REV19.2] 
 0000 ERRORS [<STAKE >FTN-REV19.2] 
 0000 ERRORS [<STCLOS>FTN-REV19.2] 
 0000 ERRORS [<STRBSR>FTN-REV19.2] 
 0000 ERRORS [<STRCMP>FTN-REV19.2] 
 0000 ERRORS [<STRIM >FTN-REV19.2] 
 0000 ERRORS [<STRLSR>FTN-REV19.2] 
 0000 ERRORS [<SUBSTR>FTN-REV19.2] 
 0000 ERRORS [<SWT   >FTN-REV19.2] 
 0000 ERRORS [<SZFIL$>FTN-REV19.2] 
 0000 ERRORS [<SZSEG$>FTN-REV19.2] 
 0000 ERRORS [<T$CLUP>FTN-REV19.2] 
 0000 ERRORS [<T$ENTR>FTN-REV19.2] 
 0000 ERRORS [<T$EXIT>FTN-REV19.2] 
 0000 ERRORS [<T$TIME>FTN-REV19.2] 
 0000 ERRORS [<T$TRAC>FTN-REV19.2] 
 0000 ERRORS [<TCOOK$>FTN-REV19.2] 
 0000 ERRORS [<TGETL$>FTN-REV19.2] 
 0000 ERRORS [<TMARK$>FTN-REV19.2] 
 0000 ERRORS [<TPUTL$>FTN-REV19.2] 
 0000 ERRORS [<TQUIT$>FTN-REV19.2] 
 0000 ERRORS [<TREAD$>FTN-REV19.2] 
 0000 ERRORS [<TRUNC >FTN-REV19.2] 
 0000 ERRORS [<TSCAN$>FTN-REV19.2] 
 0000 ERRORS [<TSEEK$>FTN-REV19.2] 
 0000 ERRORS [<TTYP$F>FTN-REV19.2] 
 0000 ERRORS [<TTYP$L>FTN-REV19.2] 
 0000 ERRORS [<TTYP$Q>FTN-REV19.2] 
 0000 ERRORS [<TTYP$R>FTN-REV19.2] 
 0000 ERRORS [<TTYP$V>FTN-REV19.2] 
 0000 ERRORS [<TWRIT$>FTN-REV19.2] 
 0000 ERRORS [<TYPE  >FTN-REV19.2] 
 0000 ERRORS [<UPKFN$>FTN-REV19.2] 
 0000 ERRORS [<VFYUSR>FTN-REV19.2] 
 0000 ERRORS [<VT$ALC>FTN-REV19.2] 
 0000 ERRORS [<VT$CLR>FTN-REV19.2] 
 0000 ERRORS [<VT$DB >FTN-REV19.2] 
 0000 ERRORS [<VT$DB1>FTN-REV19.2] 
 0000 ERRORS [<VT$DB2>FTN-REV19.2] 
 0000 ERRORS [<VT$DB3>FTN-REV19.2] 
 0000 ERRORS [<VT$DEF>FTN-REV19.2] 
 0000 ERRORS [<VT$DEL>FTN-REV19.2] 
 0000 ERRORS [<VT$DSW>FTN-REV19.2] 
 0000 ERRORS [<VT$ERR>FTN-REV19.2] 
 0000 ERRORS [<VT$GET>FTN-REV19.2] 
 0000 ERRORS [<VT$GSQ>FTN-REV19.2] 
 0000 ERRORS [<VT$IDF>FTN-REV19.2] 
 0000 ERRORS [<VT$IER>FTN-REV19.2] 
 0000 ERRORS [<VT$NDF>FTN-REV19.2] 
 0000 ERRORS [<VT$OUT>FTN-REV19.2] 
 0000 ERRORS [<VT$POS>FTN-REV19.2] 
 0000 ERRORS [<VT$PUT>FTN-REV19.2] 
 0000 ERRORS [<VT$RDF>FTN-REV19.2] 
 0000 ERRORS [<VTCLR >FTN-REV19.2] 
 0000 ERRORS [<VTDLIN>FTN-REV19.2] 
 0000 ERRORS [<VTENB >FTN-REV19.2] 
 0000 ERRORS [<VTGETL>FTN-REV19.2] 
 0000 ERRORS [<VTILIN>FTN-REV19.2] 
 0000 ERRORS [<VTINFO>FTN-REV19.2] 
 0000 ERRORS [<VTINIT>FTN-REV19.2] 
 0000 ERRORS [<VTMOVE>FTN-REV19.2] 
 0000 ERRORS [<VTMSG >FTN-REV19.2] 
 0000 ERRORS [<VTOC  >FTN-REV19.2] 
 0000 ERRORS [<VTOPT >FTN-REV19.2] 
 0000 ERRORS [<VTPAD >FTN-REV19.2] 
 0000 ERRORS [<VTPRT >FTN-REV19.2] 
 0000 ERRORS [<VTPUTL>FTN-REV19.2] 
 0000 ERRORS [<VTREAD>FTN-REV19.2] 
 0000 ERRORS [<VTSTOP>FTN-REV19.2] 
 0000 ERRORS [<VTTERM>FTN-REV19.2] 
 0000 ERRORS [<VTUPD >FTN-REV19.2] 
 0000 ERRORS [<WIND  >FTN-REV19.2] 
 0000 ERRORS [<WKDAY >FTN-REV19.2] 
 0000 ERRORS [<WRITEF>FTN-REV19.2] 
 0000 ERRORS [<VT$CEL>FTN-REV19.2] 
 0000 ERRORS [<VT$DLN>FTN-REV19.2] 
 0000 ERRORS [<VT$ILN>FTN-REV19.2] 
 0000 ERRORS [<VTBAUD>FTN-REV19.2] 
 0000 ERRORS [<VT$REL>FTN-REV19.2] 
 [ 4:ex]    ar -t src.a | find .s$ | ar -p src.a -n | include >ssrc.s
 [ 4:ex]    pmac ssrc.s
 [ 5:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 6:ex] args
 [ 6:ex] pmac "ssrc.s"
[ 5:ex]    x "pma -i *>ssrc.s -b *>ssrc.b -l no"
 0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
[ 4:ex]    build_dynts
 [ 5:ex]    declare _search_rule = "^int,=bin=/&"
 [ 5:ex]    dynts> tlit a-z A-Z       | change ?* " SEG@n DYNT &@n END" >dynts.s
[ 5:ex]    pmac dynts.s
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] pmac "dynts.s"
 [ 6:ex]    x "pma -i *>dynts.s -b *>dynts.b -l no"
 0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
[ 4:ex]    build_unshared
[ 5:ex]    declare _search_rule = "^int,=bin=/&,&,^var,=ebin=/&"
 [ 5:ex]    cat -s rsrc.b ssrc.b csrc.b plgsrc.b plpsrc.b psrc.b >src.b
 [ 5:ex]    files .b$ -f obj | cat -n >obj.b
[ 6:ex]    declare _search_rule = "^int,^var,=bin=/&"
[ 7:ex] args 2
 [ 7:ex] arg 1 | quote
[ 6:ex]    lf -c -f obj | find ".b$"
 [ 6:ex] line
 [ 5:ex]    bnames obj.b src.b | sort | uniq | find . -x |$       cat shared unshared | sort | uniq | field 1-80 |          common -1 >lrb039
 [ 6:ex] line
 [ 6:ex] file -nz lrb039
[ 5:ex]    if 0
[ 6:ex] line
 [ 5:ex]    del lrb039
[ 5:ex]    ^cn/1       | bmerge obj.b src.b dynts.b =lib=/npftnlb.bin >nvswtlb.b
 [ 6:ex]  echo .rfl
 [ 6:ex]  cat unshared shared primos dynts
[ 6:ex]  echo .sfl 
[ 5:ex]    >> cto | x
[ 6:ex]    declare _search_rule = "^int,=bin=/&,^var"
[ 7:ex] nargs
[ 6:ex]    if 0
[ 6:ex]       slice -i % -x %-EOF$
 [ 6:ex]    fi
[LIBEDB rev 19.0]

 SOURCE FILE, DESTINATION FILE, PARAMETER
 WHERE: PARAMETER = 0 - DESTINATION FILE SAM
       PARAMETER = 2000 - DESTINATION FILE DAM
 $       nvswtlb.b nvswtlb 2000
 [ 4:ex]    build_shared
[ 5:ex]    declare _search_rule = "^int,=bin=/&,&,^var,=ebin=/&"
 [ 5:ex]    shared> tlit a-z A-Z       | change ?* " SEG@n DYNT &@n END" >sdynts.s
[ 5:ex]    pmac sdynts.s
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] pmac "sdynts.s"
[ 6:ex]    x "pma -i *>sdynts.s -b *>sdynts.b -l no"
 0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
[ 5:ex]    ^cn/1       | bmerge sdynts.b nvswtlb >vswtlb.b
 [ 6:ex]  echo .rfl
 [ 6:ex]  cat unshared shared primos dynts
[ 6:ex]  echo .sfl 
[ 5:ex]    >> cto | x
[ 6:ex]    declare _search_rule = "^int,=bin=/&,^var"
[ 7:ex] nargs
[ 6:ex]    if 0
[ 6:ex]       slice -i % -x %-EOF$
 [ 6:ex]    fi
[LIBEDB rev 19.0]

 SOURCE FILE, DESTINATION FILE, PARAMETER
 WHERE: PARAMETER = 0 - DESTINATION FILE SAM
       PARAMETER = 2000 - DESTINATION FILE DAM
 $       vswtlb.b vswtlb 2000
 [ 6:ex] shared> tc -l
[ 6:ex] eval 230*3/2
 [ 6:ex] cat hash_width
 [ 5:ex]    shared> tlit a-z A-Z       | hasher 345 50 >hash_table
entries: 230, table size: 378, search depth: 1.54348
 [ 5:ex]    link_shared
 [ 6:ex]    declare _search_rule = "^int,^var,=bin=/&,&"
[ 7:ex] cat segment
[ 6:ex]    declare SEG = 2035
[ 7:ex] template =cm_loc= | take 4
 [ 6:ex]    declare COM = 
[ 6:ex]    pfh.s> include >_pfh.s
[ 6:ex]    pmac _pfh.s
 [ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] pmac "_pfh.s"
[ 7:ex]    x "pma -i *>_pfh.s -b *>_pfh.b -l no"
 0000 ERRORS (PMA Rev. 19.2)
[ 6:ex]    pmac inst.s
 [ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] pmac "inst.s"
[ 7:ex]    x "pma -i *>inst.s -b *>inst.b -l no"
 0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
[ 7:ex] COM
[ 6:ex]    if 
 [ 6:ex]       set COM = 4040
 [ 6:ex]    fi
[ 7:ex] COM
[ 7:ex] SEG
[ 6:ex]    ld -un -c 4040 -e 2035 -g sw -o inst       -i       -s "sy sgsymt 4000 100"       _pfh.b       nvswtlb       -s "d/pl"       -m 6       -s "mix off"       -s "sp 100000"       -s "mix on"       -e 4000       inst.b       -m vswtlb.m
[ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 7:ex]    declare _quote_opt = YES
[ 8:ex] args
 [ 7:ex]    ld "-un" "-c" "4040" "-e" "2035" "-g" "sw" "-o" "inst" "-i" "-s" "sy sgsymt 4000 100" "_pfh.b" "nvswtlb" "-s" "d/pl" "-m" "6" "-s" "mix off" "-s" "sp 100000" "-s" "mix on" "-e" "4000" "inst.b" "-m" "vswtlb.m" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4040
 $ co ab 4040
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ sy sgsymt 4000 100
 $ s/lo _pfh.b 0 2035 2035
$ s/lo nvswtlb 0 2035 2035
 $ d/pl
 LOAD COMPLETE
$ ma 6
 
 $ mix off
$ sp 100000
$ mix on
 $ s/lo inst.b 0 4000 4000
LOAD COMPLETE
$ ma vswtlb.m
$ ma 6
 
 $ re
 # sh
 FILE ID: sw
Creating SW2035
Creating SW4000
# delete
 # q
[ 6:ex]    del _pfh.s _pfh.b inst.b
[ 3:ex] cd =src=/lib/c$main
[ 3:ex]  build
 [ 4:ex]    declare _search_rule = "^int,^var,=bin=/&"
[ 5:ex] files .s$
[ 6:ex]    declare _search_rule = "^int,^var,=bin=/&"
[ 7:ex] args 2
 [ 7:ex] arg 1 | quote
[ 6:ex]    lf -c  | find ".s$"
 [ 4:ex]    pmac c$main.s
 [ 5:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 6:ex] args
 [ 6:ex] pmac "c$main.s"
[ 5:ex]    x "pma -i *>c$main.s -b *>c$main.b -l no"
 0000 ERRORS (PMA Rev. 19.2)
[ 4:ex]    pmac nc$main.s
[ 5:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 6:ex] args
 [ 6:ex] pmac "nc$main.s"
 [ 5:ex]    x "pma -i *>nc$main.s -b *>nc$main.b -l no"
 0000 ERRORS (PMA Rev. 19.2)
[ 3:ex] cd =src=/lib/vcg
 [ 3:ex]  build
 [ 4:ex] pmac v$irc.s
 [ 5:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 6:ex] args
 [ 6:ex] pmac "v$irc.s"
 [ 5:ex]    x "pma -i *>v$irc.s -b *>v$irc.b -l no"
 0000 ERRORS (PMA Rev. 19.2)
[ 4:ex] pmac v$lrc.s
 [ 5:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 6:ex] args
 [ 6:ex] pmac "v$lrc.s"
 [ 5:ex]    x "pma -i *>v$lrc.s -b *>v$lrc.b -l no"
 0000 ERRORS (PMA Rev. 19.2)
[ 4:ex] pmac v$urc.s
 [ 5:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 6:ex] args
 [ 6:ex] pmac "v$urc.s"
 [ 5:ex]    x "pma -i *>v$urc.s -b *>v$urc.b -l no"
 0000 ERRORS (PMA Rev. 19.2)
[ 4:ex] pmac v$vrc.s
 [ 5:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 6:ex] args
 [ 6:ex] pmac "v$vrc.s"
 [ 5:ex]    x "pma -i *>v$vrc.s -b *>v$vrc.b -l no"
 0000 ERRORS (PMA Rev. 19.2)
[ 4:ex] pmac v$acmp.s
[ 5:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 6:ex] args
 [ 6:ex] pmac "v$acmp.s"
[ 5:ex]    x "pma -i *>v$acmp.s -b *>v$acmp.b -l no"
 0000 ERRORS (PMA Rev. 19.2)
[ 4:ex] pmac alloc.s
 [ 5:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 6:ex] args
 [ 6:ex] pmac "alloc.s"
 [ 5:ex]    x "pma -i *>alloc.s -b *>alloc.b -l no"
 0000 ERRORS (PMA Rev. 19.2)
[ 4:ex] pmac free.s
[ 5:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 6:ex] args
 [ 6:ex] pmac "free.s"
[ 5:ex]    x "pma -i *>free.s -b *>free.b -l no"
 0000 ERRORS (PMA Rev. 19.2)
[ 4:ex] pmac shifts.s
[ 5:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 6:ex] args
 [ 6:ex] pmac "shifts.s"
[ 5:ex]    x "pma -i *>shifts.s -b *>shifts.b -l no"
 0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
[ 4:ex] rp std_io.r
[ 4:ex]  fc std_io.f
 [ 5:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 6:ex] args
 [ 6:ex] fc "std_io.f"
[ 5:ex]    x "ftn -i *>std_io.f -b *>std_io.b -l no -64v -dc -dy -o"
 0000 ERRORS [<INP$I >FTN-REV19.2] 
 0000 ERRORS [<INP$R >FTN-REV19.2] 
 0000 ERRORS [<OUTP$I>FTN-REV19.2] 
 0000 ERRORS [<OUTP$R>FTN-REV19.2] 
 [ 4:ex] >> cto EOF | x
 [ 5:ex]    declare _search_rule = "^int,=bin=/&,^var"
[ 6:ex] nargs
[ 5:ex]    if 1
[ 6:ex] arg 1 | quote
[ 5:ex]       slice -i % -x %EOF$
[ 5:ex]    else
[EDB rev 19.0]
 ENTER, rfl
 ENTER, c all
 V$CIRNG  V$CIUPB  V$CILWB  V$VIRNG  V$VIUPB  V$VILWB  
 .BOTTOM.
 ENTER, newinf v$lrc.b
ENTER, c all
 V$CLRNG  V$CLUPB  V$CLLWB  V$VLRNG  V$VLUPB  V$VLLWB  
 .BOTTOM.
 ENTER, newinf v$urc.b
ENTER, c all
 V$CURNG  V$CUUPB  V$CULWB  V$VURNG  V$VUUPB  V$VULWB  
 .BOTTOM.
 ENTER, newinf v$vrc.b
ENTER, c all
 V$CVRNG  V$CVUPB  V$CVLWB  V$VVRNG  V$VVUPB  V$VVLWB  
 .BOTTOM.
 ENTER, newinf v$acmp.b
 ENTER, c all
 V$ACMP   
.BOTTOM.
 ENTER, newinf std_io.b
 ENTER, c all
 INP$I    INP$R    OUTP$I   OUTP$R   
 .BOTTOM.
 ENTER, newinf alloc.b
ENTER, c all
 ALLOC    
.BOTTOM.
 ENTER, newinf free.b
 ENTER, c all
 FREE     
.BOTTOM.
 ENTER, newinf shifts.b
 ENTER, c all
 C$LSHFS  C$LSHFL  C$RSHFUS C$RSHFUL C$RSHFSS C$RSHFSL 
 .BOTTOM.
 ENTER, sfl
 ENTER, q
 [ 3:ex] cd =src=/lib/vcg_main
[ 3:ex]  build
 [ 4:ex]    declare _search_rule = "^int,^var,=bin=/&"
[ 4:ex]    pmac vcg_main.s
 [ 5:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 6:ex] args
 [ 6:ex] pmac "vcg_main.s"
[ 5:ex]    x "pma -i *>vcg_main.s -b *>vcg_main.b -l no"
 0000 ERRORS (PMA Rev. 19.2)
[ 3:ex] cd =src=/lib/math
[ 3:ex]  build
 [ 4:ex]    declare _search_rule = "^int,^var,=bin=/&"
[ 4:ex]    del -s obj
[ 5:ex] files .s$ -f src
 [ 6:ex]    declare _search_rule = "^int,^var,=bin=/&"
[ 7:ex] args 2
 [ 7:ex] arg 1 | quote
[ 6:ex]    lf -c -f src | find ".s$"
 [ 5:ex] files .s$ src | basename
 [ 6:ex]    declare _search_rule = "^int,^var,=bin=/&"
[ 7:ex] args 2
 [ 7:ex] arg 1 | quote
[ 6:ex]    lf -c src | find ".s$"
[ 4:ex]    pmac src/asin$m.s -b obj/asin$m.b
 [ 5:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 6:ex] args
 [ 6:ex] pmac "src/asin$m.s" "-b" "obj/asin$m.b"
[ 5:ex]    x "pma -i *>src>asin$m.s -b *>obj>asin$m.b -l no"
 0000 ERRORS (PMA Rev. 19.2)
[ 4:ex]    pmac src/atan$m.s -b obj/atan$m.b
 [ 5:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 6:ex] args
 [ 6:ex] pmac "src/atan$m.s" "-b" "obj/atan$m.b"
[ 5:ex]    x "pma -i *>src>atan$m.s -b *>obj>atan$m.b -l no"
 0000 ERRORS (PMA Rev. 19.2)
[ 4:ex]    pmac src/dble$m.s -b obj/dble$m.b
 [ 5:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 6:ex] args
 [ 6:ex] pmac "src/dble$m.s" "-b" "obj/dble$m.b"
[ 5:ex]    x "pma -i *>src>dble$m.s -b *>obj>dble$m.b -l no"
 0000 ERRORS (PMA Rev. 19.2)
[ 4:ex]    pmac src/dint$m.s -b obj/dint$m.b
 [ 5:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 6:ex] args
 [ 6:ex] pmac "src/dint$m.s" "-b" "obj/dint$m.b"
[ 5:ex]    x "pma -i *>src>dint$m.s -b *>obj>dint$m.b -l no"
 0000 ERRORS (PMA Rev. 19.2)
[ 4:ex]    pmac src/err$m.s -b obj/err$m.b
 [ 5:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 6:ex] args
 [ 6:ex] pmac "src/err$m.s" "-b" "obj/err$m.b"
[ 5:ex]    x "pma -i *>src>err$m.s -b *>obj>err$m.b -l no"
 0000 ERRORS (PMA Rev. 19.2)
[ 4:ex]    pmac src/exp$m.s -b obj/exp$m.b
 [ 5:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 6:ex] args
 [ 6:ex] pmac "src/exp$m.s" "-b" "obj/exp$m.b"
[ 5:ex]    x "pma -i *>src>exp$m.s -b *>obj>exp$m.b -l no"
 0000 ERRORS (PMA Rev. 19.2)
[ 4:ex]    pmac src/ln$m.s -b obj/ln$m.b
 [ 5:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 6:ex] args
 [ 6:ex] pmac "src/ln$m.s" "-b" "obj/ln$m.b"
[ 5:ex]    x "pma -i *>src>ln$m.s -b *>obj>ln$m.b -l no"
 0000 ERRORS (PMA Rev. 19.2)
[ 4:ex]    pmac src/powr$m.s -b obj/powr$m.b
 [ 5:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 6:ex] args
 [ 6:ex] pmac "src/powr$m.s" "-b" "obj/powr$m.b"
[ 5:ex]    x "pma -i *>src>powr$m.s -b *>obj>powr$m.b -l no"
 0000 ERRORS (PMA Rev. 19.2)
[ 4:ex]    pmac src/rand$m.s -b obj/rand$m.b
 [ 5:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 6:ex] args
 [ 6:ex] pmac "src/rand$m.s" "-b" "obj/rand$m.b"
[ 5:ex]    x "pma -i *>src>rand$m.s -b *>obj>rand$m.b -l no"
 0000 ERRORS (PMA Rev. 19.2)
[ 4:ex]    pmac src/sin$m.s -b obj/sin$m.b
 [ 5:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 6:ex] args
 [ 6:ex] pmac "src/sin$m.s" "-b" "obj/sin$m.b"
[ 5:ex]    x "pma -i *>src>sin$m.s -b *>obj>sin$m.b -l no"
 0000 ERRORS (PMA Rev. 19.2)
[ 4:ex]    pmac src/sinh$m.s -b obj/sinh$m.b
 [ 5:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 6:ex] args
 [ 6:ex] pmac "src/sinh$m.s" "-b" "obj/sinh$m.b"
[ 5:ex]    x "pma -i *>src>sinh$m.s -b *>obj>sinh$m.b -l no"
 0000 ERRORS (PMA Rev. 19.2)
[ 4:ex]    pmac src/sqrt$m.s -b obj/sqrt$m.b
 [ 5:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 6:ex] args
 [ 6:ex] pmac "src/sqrt$m.s" "-b" "obj/sqrt$m.b"
[ 5:ex]    x "pma -i *>src>sqrt$m.s -b *>obj>sqrt$m.b -l no"
 0000 ERRORS (PMA Rev. 19.2)
[ 4:ex]    pmac src/tan$m.s -b obj/tan$m.b
 [ 5:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 6:ex] args
 [ 6:ex] pmac "src/tan$m.s" "-b" "obj/tan$m.b"
[ 5:ex]    x "pma -i *>src>tan$m.s -b *>obj>tan$m.b -l no"
 0000 ERRORS (PMA Rev. 19.2)
[ 4:ex]    pmac src/tanh$m.s -b obj/tanh$m.b
 [ 5:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 6:ex] args
 [ 6:ex] pmac "src/tanh$m.s" "-b" "obj/tanh$m.b"
[ 5:ex]    x "pma -i *>src>tanh$m.s -b *>obj>tanh$m.b -l no"
 0000 ERRORS (PMA Rev. 19.2)
[ 4:ex]    rp swtmlb.r -a
[ 4:ex]    fc swtmlb.f -h -b obj/swtmlb.b    
[ 5:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 6:ex] args
 [ 6:ex] fc "swtmlb.f" "-h" "-b" "obj/swtmlb.b"
 [ 5:ex]    x "ftn -i *>swtmlb.f -b *>obj>swtmlb.b -l no -64v -big -dc -dy -o"
0000 ERRORS [<PRIME >FTN-REV19.2] 
 0000 ERRORS [<INVMOD>FTN-REV19.2] 
 0000 ERRORS [<PWRMOD>FTN-REV19.2] 
 0000 ERRORS [<GCD   >FTN-REV19.2] 
 0000 ERRORS [<SETCR0>FTN-REV19.2] 
 0000 ERRORS [<SETRE0>FTN-REV19.2] 
 0000 ERRORS [<SETIN0>FTN-REV19.2] 
 0000 ERRORS [<SETCO0>FTN-REV19.2] 
 0000 ERRORS [<SETIO0>FTN-REV19.2] 
 0000 ERRORS [<SETUN0>FTN-REV19.2] 
 0000 ERRORS [<SETIP0>FTN-REV19.2] 
 0000 ERRORS [<SETDE0>FTN-REV19.2] 
 0000 ERRORS [<SETEL0>FTN-REV19.2] 
 0000 ERRORS [<SETEQ0>FTN-REV19.2] 
 0000 ERRORS [<SETSU0>FTN-REV19.2] 
 0000 ERRORS [<SETSV0>FTN-REV19.2] 
 [ 4:ex]    echo >vswtmath.b
[ 4:ex]    >> cto | x
[ 5:ex]    declare _search_rule = "^int,=bin=/&,^var"
[ 6:ex] nargs
[ 5:ex]    if 0
[ 5:ex]       slice -i % -x %-EOF$
 [ 5:ex]    fi
[EDB rev 19.0]
 ENTER,    BRIEF
ENTER,    RFL
ENTER,    INSERT *>obj>swtmlb.b
ENTER,    INSERT *>obj>asin$m.b
ENTER,    INSERT *>obj>atan$m.b
ENTER,    INSERT *>obj>powr$m.b
ENTER,    INSERT *>obj>rand$m.b
ENTER,    INSERT *>obj>sin$m.b
 ENTER,    INSERT *>obj>sinh$m.b
ENTER,    INSERT *>obj>tan$m.b
 ENTER,    INSERT *>obj>tanh$m.b
ENTER,    INSERT *>obj>exp$m.b
 ENTER,    INSERT *>obj>ln$m.b
ENTER,    INSERT *>obj>sqrt$m.b
ENTER,    INSERT *>obj>err$m.b
 ENTER,    INSERT *>obj>dble$m.b
ENTER,    INSERT *>obj>dint$m.b
ENTER,    SFL
ENTER,    QUIT
 [ 4:ex]    >> cto | x
[ 5:ex]    declare _search_rule = "^int,=bin=/&,^var"
[ 6:ex] nargs
[ 5:ex]    if 0
[ 5:ex]       slice -i % -x %-EOF$
 [ 5:ex]    fi
[LIBEDB rev 19.0]

 SOURCE FILE, DESTINATION FILE, PARAMETER
 WHERE: PARAMETER = 0 - DESTINATION FILE SAM
       PARAMETER = 2000 - DESTINATION FILE DAM
 $    _vswtmath vswtmath 0
[ 3:ex] cd =src=/lib/sh
[ 3:ex]  build
 [ 4:ex]    declare _search_rule = "^int,^var,&,=bin=/&"
[ 4:ex]    compile        
 [ 5:ex]    declare _search_rule = "^int,^var,&,=bin=/&"
[ 5:ex]    files .plp$ -f src | change ?* "plpc &" | sh
[ 6:ex]    declare _search_rule = "^int,^var,=bin=/&"
[ 7:ex] args 2
 [ 7:ex] arg 1 | quote
[ 6:ex]    lf -c -f src | find ".plp$"
 [ 6:ex] plpc src/gettim.plp
[ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] plpc "src/gettim.plp"
[ 7:ex]    x "plp -i *>src>gettim.plp -b *>src>gettim.b -l no"
 [PLP rev 19.2]
 BEGIN PHASE-1
BEGIN PHASE-2
BEGIN PHASE-3
0000 ERRORS  (PL/P  rev 19.2) 
 [ 6:ex] plpc src/onany.plp
 [ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] plpc "src/onany.plp"
 [ 7:ex]    x "plp -i *>src>onany.plp -b *>src>onany.b -l no"
 [PLP rev 19.2]
 BEGIN PHASE-1
BEGIN PHASE-2
BEGIN PHASE-3
0000 ERRORS  (PL/P  rev 19.2) 
 [ 6:ex] plpc src/shany.plp
 [ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] plpc "src/shany.plp"
 [ 7:ex]    x "plp -i *>src>shany.plp -b *>src>shany.b -l no"
 [PLP rev 19.2]
 BEGIN PHASE-1
BEGIN PHASE-2
BEGIN PHASE-3
0000 ERRORS  (PL/P  rev 19.2) 
 [ 5:ex]    files .r$ -f src | basename -f | change ?*       "rp src/def.r.i src/link.r.i &.r -ag -o &.f; fc -d0oq &.f" | sh
[ 6:ex]    declare _search_rule = "^int,^var,=bin=/&"
[ 7:ex] args 2
 [ 7:ex] arg 1 | quote
[ 6:ex]    lf -c -f src | find ".r$"
 [ 6:ex] rp src/def.r.i src/link.r.i src/args.r -ag -o src/args.f
 [ 6:ex]  fc -d0oq src/args.f
 [ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "-d0oq" "src/args.f"
[ 7:ex]    x "ftn -i *>src>args.f -b *>src>args.b -l no -64v -dc -dy -sp -u"
 0000 ERRORS [<CLRAR0>FTN-REV19.2] 
 0000 ERRORS [<PUTARG>FTN-REV19.2] 
 0000 ERRORS [<INITA0>FTN-REV19.2] 
 0000 ERRORS [<SETUP0>FTN-REV19.2] 
 0000 ERRORS [<ACCES0>FTN-REV19.2] 
 [ 6:ex] rp src/def.r.i src/link.r.i src/ci.r -ag -o src/ci.f
 [ 6:ex]  fc -d0oq src/ci.f
 [ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "-d0oq" "src/ci.f"
[ 7:ex]    x "ftn -i *>src>ci.f -b *>src>ci.b -l no -64v -dc -dy -sp -u"
 0000 ERRORS [<START0>FTN-REV19.2] 
 0000 ERRORS [<STOPL0>FTN-REV19.2] 
 0000 ERRORS [<LOGIN0>FTN-REV19.2] 
 0000 ERRORS [<PROCE0>FTN-REV19.2] 
 0000 ERRORS [<SHELL >FTN-REV19.2] 
 0000 ERRORS [<SINGL0>FTN-REV19.2] 
 0000 ERRORS [<NETTR0>FTN-REV19.2] 
 0000 ERRORS [<SEARC0>FTN-REV19.2] 
 0000 ERRORS [<NEXTU0>FTN-REV19.2] 
 0000 ERRORS [<GETCL >FTN-REV19.2] 
 0000 ERRORS [<PUTBA0>FTN-REV19.2] 
 0000 ERRORS [<EVALN0>FTN-REV19.2] 
 0000 ERRORS [<EVALFN>FTN-REV19.2] 
 0000 ERRORS [<EVALIT>FTN-REV19.2] 
 0000 ERRORS [<INITI0>FTN-REV19.2] 
 0000 ERRORS [<SAVES0>FTN-REV19.2] 
 0000 ERRORS [<RESTO0>FTN-REV19.2] 
 0000 ERRORS [<ERRMSG>FTN-REV19.2] 
 0000 ERRORS [<CONTE0>FTN-REV19.2] 
 0000 ERRORS [<GOSSIP>FTN-REV19.2] 
 0000 ERRORS [<EVALCN>FTN-REV19.2] 
 0000 ERRORS [<REMOV0>FTN-REV19.2] 
 0000 ERRORS [<MAILI0>FTN-REV19.2] 
 0000 ERRORS [<MAILC0>FTN-REV19.2] 
 [ 6:ex] rp src/def.r.i src/link.r.i src/common.r -ag -o src/common.f
 [ 6:ex]  fc -d0oq src/common.f
 [ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "-d0oq" "src/common.f"
[ 7:ex]    x "ftn -i *>src>common.f -b *>src>common.b -l no -64v -dc -dy -sp -u"
 0000 ERRORS [<.DATA.>FTN-REV19.2] 
 [ 6:ex] rp src/def.r.i src/link.r.i src/exec.r -ag -o src/exec.f
 [ 6:ex]  fc -d0oq src/exec.f
 [ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "-d0oq" "src/exec.f"
[ 7:ex]    x "ftn -i *>src>exec.f -b *>src>exec.b -l no -64v -dc -dy -sp -u"
 0000 ERRORS [<EXECU0>FTN-REV19.2] 
 0000 ERRORS [<INITC0>FTN-REV19.2] 
 0000 ERRORS [<EXECV0>FTN-REV19.2] 
 0000 ERRORS [<GETEL0>FTN-REV19.2] 
 0000 ERRORS [<INVOK0>FTN-REV19.2] 
 0000 ERRORS [<INVOM0>FTN-REV19.2] 
 0000 ERRORS [<FILET0>FTN-REV19.2] 
 [ 6:ex] rp src/def.r.i src/link.r.i src/hist.r -ag -o src/hist.f
 [ 6:ex]  fc -d0oq src/hist.f
 [ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "-d0oq" "src/hist.f"
[ 7:ex]    x "ftn -i *>src>hist.f -b *>src>hist.b -l no -64v -dc -dy -sp -u"
 0000 ERRORS [<HISTS0>FTN-REV19.2] 
 0000 ERRORS [<HISTI0>FTN-REV19.2] 
 0000 ERRORS [<HISTE0>FTN-REV19.2] 
 0000 ERRORS [<HISTQ0>FTN-REV19.2] 
 0000 ERRORS [<HISTG0>FTN-REV19.2] 
 0000 ERRORS [<HISTF0>FTN-REV19.2] 
 0000 ERRORS [<HISTL0>FTN-REV19.2] 
 0000 ERRORS [<HISTH0>FTN-REV19.2] 
 0000 ERRORS [<HISTA0>FTN-REV19.2] 
 0000 ERRORS [<HISTT0>FTN-REV19.2] 
 0000 ERRORS [<HISTR0>FTN-REV19.2] 
 [ 6:ex] rp src/def.r.i src/link.r.i src/intcmd.r -ag -o src/intcmd.f
 [ 6:ex]  fc -d0oq src/intcmd.f
 [ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "-d0oq" "src/intcmd.f"
[ 7:ex]    x "ftn -i *>src>intcmd.f -b *>src>intcmd.b -l no -64v -dc -dy -sp -u"
 0000 ERRORS [<INVOL0>FTN-REV19.2] 
 [ 6:ex] rp src/def.r.i src/link.r.i src/internals.r -ag -o src/internals.f
 [ 6:ex]  fc -d0oq src/internals.f
[ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "-d0oq" "src/internals.f"
 [ 7:ex]    x "ftn -i *>src>internals.f -b *>src>internals.b -l no -64v -dc -dy -sp -u"
 0000 ERRORS [<ARGCMD>FTN-REV19.2] 
 0000 ERRORS [<ARGSC0>FTN-REV19.2] 
 0000 ERRORS [<ARGST0>FTN-REV19.2] 
 0000 ERRORS [<CASEC0>FTN-REV19.2] 
 0000 ERRORS [<CDCMD >FTN-REV19.2] 
 0000 ERRORS [<DATEC0>FTN-REV19.2] 
 0000 ERRORS [<DAYCMD>FTN-REV19.2] 
 0000 ERRORS [<DBGCMD>FTN-REV19.2] 
 0000 ERRORS [<DECLA0>FTN-REV19.2] 
 0000 ERRORS [<DECLB0>FTN-REV19.2] 
 0000 ERRORS [<DROPC0>FTN-REV19.2] 
 0000 ERRORS [<DUMPC0>FTN-REV19.2] 
 0000 ERRORS [<ECHOC0>FTN-REV19.2] 
 0000 ERRORS [<ESC   >FTN-REV19.2] 
 0000 ERRORS [<ELSEC0>FTN-REV19.2] 
 0000 ERRORS [<EVALC0>FTN-REV19.2] 
 0000 ERRORS [<EXITD0>FTN-REV19.2] 
 0000 ERRORS [<FORGE0>FTN-REV19.2] 
 0000 ERRORS [<GOTOC0>FTN-REV19.2] 
 0000 ERRORS [<GETNF0>FTN-REV19.2] 
 0000 ERRORS [<HISTC0>FTN-REV19.2] 
 0000 ERRORS [<IFCMD >FTN-REV19.2] 
 0000 ERRORS [<GETNET>FTN-REV19.2] 
 0000 ERRORS [<GETNG0>FTN-REV19.2] 
 0000 ERRORS [<INDEX0>FTN-REV19.2] 
 0000 ERRORS [<INSTA0>FTN-REV19.2] 
 0000 ERRORS [<LINEC0>FTN-REV19.2] 
 0000 ERRORS [<LOGIO0>FTN-REV19.2] 
 0000 ERRORS [<NARGS0>FTN-REV19.2] 
 0000 ERRORS [<OUTCMD>FTN-REV19.2] 
 0000 ERRORS [<PRIMO0>FTN-REV19.2] 
 0000 ERRORS [<QUOTE0>FTN-REV19.2] 
 0000 ERRORS [<REPEA0>FTN-REV19.2] 
 0000 ERRORS [<GETNE0>FTN-REV19.2] 
 0000 ERRORS [<NEXTR0>FTN-REV19.2] 
 0000 ERRORS [<SETCMD>FTN-REV19.2] 
 0000 ERRORS [<SHCMD >FTN-REV19.2] 
 0000 ERRORS [<SHTRA0>FTN-REV19.2] 
 0000 ERRORS [<STOPC0>FTN-REV19.2] 
 0000 ERRORS [<SUBST0>FTN-REV19.2] 
 0000 ERRORS [<TAKEC0>FTN-REV19.2] 
 0000 ERRORS [<TIMEC0>FTN-REV19.2] 
 0000 ERRORS [<VARSC0>FTN-REV19.2] 
 0000 ERRORS [<VPSDC0>FTN-REV19.2] 
 0000 ERRORS [<WHENC0>FTN-REV19.2] 
 0000 ERRORS [<EXITC0>FTN-REV19.2] 
 0000 ERRORS [<XCMD  >FTN-REV19.2] 
 [ 6:ex] rp src/def.r.i src/link.r.i src/label.r -ag -o src/label.f
 [ 6:ex]  fc -d0oq src/label.f
[ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "-d0oq" "src/label.f"
 [ 7:ex]    x "ftn -i *>src>label.f -b *>src>label.b -l no -64v -dc -dy -sp -u"
 0000 ERRORS [<ENTER0>FTN-REV19.2] 
 0000 ERRORS [<LOOKU0>FTN-REV19.2] 
 0000 ERRORS [<FINDL0>FTN-REV19.2] 
 0000 ERRORS [<CREAT0>FTN-REV19.2] 
 0000 ERRORS [<FWDREF>FTN-REV19.2] 
 0000 ERRORS [<INITL0>FTN-REV19.2] 
 0000 ERRORS [<CLRLA0>FTN-REV19.2] 
 0000 ERRORS [<CHECK0>FTN-REV19.2] 
 [ 6:ex] rp src/def.r.i src/link.r.i src/ls.r -ag -o src/ls.f
 [ 6:ex]  fc -d0oq src/ls.f
 [ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "-d0oq" "src/ls.f"
[ 7:ex]    x "ftn -i *>src>ls.f -b *>src>ls.b -l no -64v -dc -dy -sp -u"
 0000 ERRORS [<LSGETF>FTN-REV19.2] 
 0000 ERRORS [<LSQUIT>FTN-REV19.2] 
 0000 ERRORS [<LSPUTF>FTN-REV19.2] 
 0000 ERRORS [<LSJOIN>FTN-REV19.2] 
 0000 ERRORS [<LSCMPK>FTN-REV19.2] 
 0000 ERRORS [<LSCOMP>FTN-REV19.2] 
 0000 ERRORS [<LSCUT >FTN-REV19.2] 
 0000 ERRORS [<LSINS >FTN-REV19.2] 
 0000 ERRORS [<LSTAKE>FTN-REV19.2] 
 0000 ERRORS [<LSDROP>FTN-REV19.2] 
 0000 ERRORS [<LSSUBS>FTN-REV19.2] 
 0000 ERRORS [<LSDEL >FTN-REV19.2] 
 0000 ERRORS [<LSCOPY>FTN-REV19.2] 
 0000 ERRORS [<LSPOS >FTN-REV19.2] 
 0000 ERRORS [<LSMAKE>FTN-REV19.2] 
 0000 ERRORS [<LSEXTR>FTN-REV19.2] 
 0000 ERRORS [<LSLEN >FTN-REV19.2] 
 0000 ERRORS [<LSGETC>FTN-REV19.2] 
 0000 ERRORS [<LSPUTC>FTN-REV19.2] 
 0000 ERRORS [<LSALLO>FTN-REV19.2] 
 0000 ERRORS [<LSFREE>FTN-REV19.2] 
 0000 ERRORS [<LSINIT>FTN-REV19.2] 
 0000 ERRORS [<LSDUMP>FTN-REV19.2] 
 [ 6:ex] rp src/def.r.i src/link.r.i src/main.r -ag -o src/main.f
 [ 6:ex]  fc -d0oq src/main.f
 [ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "-d0oq" "src/main.f"
[ 7:ex]    x "ftn -i *>src>main.f -b *>src>main.b -l no -64v -dc -dy -sp -u"
 0000 ERRORS [<CIMAIN>FTN-REV19.2] 
 [ 6:ex] rp src/def.r.i src/link.r.i src/misc.r -ag -o src/misc.f
 [ 6:ex]  fc -d0oq src/misc.f
 [ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "-d0oq" "src/misc.f"
[ 7:ex]    x "ftn -i *>src>misc.f -b *>src>misc.b -l no -64v -dc -dy -sp -u"
 0000 ERRORS [<SUBSYS>FTN-REV19.2] 
 [ 6:ex] rp src/def.r.i src/link.r.i src/onquit.r -ag -o src/onquit.f
 [ 6:ex]  fc -d0oq src/onquit.f
 [ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "-d0oq" "src/onquit.f"
[ 7:ex]    x "ftn -i *>src>onquit.f -b *>src>onquit.b -l no -64v -dc -dy -sp -u"
 0000 ERRORS [<ONQUIT>FTN-REV19.2] 
 [ 6:ex] rp src/def.r.i src/link.r.i src/order.r -ag -o src/order.f
 [ 6:ex]  fc -d0oq src/order.f
[ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "-d0oq" "src/order.f"
 [ 7:ex]    x "ftn -i *>src>order.f -b *>src>order.b -l no -64v -dc -dy -sp -u"
 0000 ERRORS [<ORDER >FTN-REV19.2] 
 0000 ERRORS [<CKEX  >FTN-REV19.2] 
 0000 ERRORS [<WARSH >FTN-REV19.2] 
 [ 6:ex] rp src/def.r.i src/link.r.i src/parse.r -ag -o src/parse.f
 [ 6:ex]  fc -d0oq src/parse.f
[ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "-d0oq" "src/parse.f"
 [ 7:ex]    x "ftn -i *>src>parse.f -b *>src>parse.b -l no -64v -dc -dy -sp -u"
 0000 ERRORS [<PARSE >FTN-REV19.2] 
 0000 ERRORS [<NET   >FTN-REV19.2] 
 0000 ERRORS [<NODES0>FTN-REV19.2] 
 0000 ERRORS [<NODE  >FTN-REV19.2] 
 0000 ERRORS [<ARGUM0>FTN-REV19.2] 
 0000 ERRORS [<REDIR0>FTN-REV19.2] 
 0000 ERRORS [<GETSYM>FTN-REV19.2] 
 0000 ERRORS [<CKNUM >FTN-REV19.2] 
 0000 ERRORS [<CKALF >FTN-REV19.2] 
 0000 ERRORS [<SYNERR>FTN-REV19.2] 
 0000 ERRORS [<SEMERR>FTN-REV19.2] 
 0000 ERRORS [<SYMBO0>FTN-REV19.2] 
 [ 6:ex] rp src/def.r.i src/link.r.i src/port.r -ag -o src/port.f
 [ 6:ex]  fc -d0oq src/port.f
 [ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "-d0oq" "src/port.f"
[ 7:ex]    x "ftn -i *>src>port.f -b *>src>port.b -l no -64v -dc -dy -sp -u"
 0000 ERRORS [<MAKEI0>FTN-REV19.2] 
 0000 ERRORS [<MAKEO0>FTN-REV19.2] 
 0000 ERRORS [<INITP0>FTN-REV19.2] 
 0000 ERRORS [<CLRPO0>FTN-REV19.2] 
 0000 ERRORS [<ASSII0>FTN-REV19.2] 
 0000 ERRORS [<ASSIH0>FTN-REV19.2] 
 0000 ERRORS [<ASSIG0>FTN-REV19.2] 
 0000 ERRORS [<MAKEP0>FTN-REV19.2] 
 0000 ERRORS [<RESER0>FTN-REV19.2] 
 0000 ERRORS [<SELEC0>FTN-REV19.2] 
 0000 ERRORS [<SETUQ0>FTN-REV19.2] 
 0000 ERRORS [<CLEAN0>FTN-REV19.2] 
 0000 ERRORS [<DUMPP0>FTN-REV19.2] 
 [ 6:ex] rp src/def.r.i src/link.r.i src/sv.r -ag -o src/sv.f
 [ 6:ex]  fc -d0oq src/sv.f
 [ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "-d0oq" "src/sv.f"
[ 7:ex]    x "ftn -i *>src>sv.f -b *>src>sv.b -l no -64v -dc -dy -sp -u"
 0000 ERRORS [<SVSAVE>FTN-REV19.2] 
 0000 ERRORS [<SVREST>FTN-REV19.2] 
 0000 ERRORS [<SVSCAN>FTN-REV19.2] 
 0000 ERRORS [<SVMAKE>FTN-REV19.2] 
 0000 ERRORS [<SVPUT >FTN-REV19.2] 
 0000 ERRORS [<SVDEL >FTN-REV19.2] 
 0000 ERRORS [<SVGET >FTN-REV19.2] 
 0000 ERRORS [<SVFIND>FTN-REV19.2] 
 0000 ERRORS [<SVHASH>FTN-REV19.2] 
 0000 ERRORS [<SVPOP >FTN-REV19.2] 
 0000 ERRORS [<SVPUSH>FTN-REV19.2] 
 0000 ERRORS [<SVINIT>FTN-REV19.2] 
 0000 ERRORS [<SVDUMP>FTN-REV19.2] 
 0000 ERRORS [<SVALLO>FTN-REV19.2] 
 0000 ERRORS [<SVFREE>FTN-REV19.2] 
 0000 ERRORS [<SVMNTC>FTN-REV19.2] 
 0000 ERRORS [<SVCTMN>FTN-REV19.2] 
 0000 ERRORS [<SVFIX >FTN-REV19.2] 
 0000 ERRORS [<SVGETL>FTN-REV19.2] 
 0000 ERRORS [<SVLEVL>FTN-REV19.2] 
 [ 4:ex]    maklib         
 [ 5:ex]    declare _search_rule = "^int,^var,&,=bin=/&"
[ 5:ex]    declare count
 [ 5:ex]    dynts> tlit a-z A-Z | change ?* " SEG@n DYNT &@n END" >vshlib.s
 [ 5:ex]    pmac vshlib.s
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] pmac "vshlib.s"
[ 6:ex]    x "pma -i *>vshlib.s -b *>vshlib.b -l no"
 0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
[ 5:ex]    >> cto | x
[ 6:ex]    declare _search_rule = "^int,=bin=/&,^var"
[ 7:ex] nargs
[ 6:ex]    if 0
[ 6:ex]       slice -i % -x %-EOF$
 [ 6:ex]    fi
[EDB rev 19.0]
 ENTER,       rfl
 ENTER,       copy all
SHELL    SVSAVE   SVREST   SVSCAN   SVMAKE   SVPUT    SVDEL    SVGET    
 SVDUMP   SVLEVL   SUBSYS   
.BOTTOM.
 ENTER,       sfl
 ENTER,       q
 [LIBEDB rev 19.0]

 SOURCE FILE, DESTINATION FILE, PARAMETER
 WHERE: PARAMETER = 0 - DESTINATION FILE SAM
       PARAMETER = 2000 - DESTINATION FILE DAM
 $       _vshlib vshlib 0
 [ 6:ex] line
 [ 5:ex]    dynts> tlit a-z A-Z | tee -2 >temp039 2| tc -l | set count =
[ 6:ex] line
 [ 6:ex] eval count*3/2
 [ 6:ex] count
[ 5:ex]    temp039> hasher 16 11 >hash_table
 entries: 11, table size: 17, search depth: 1.09091
 [ 6:ex] line
 [ 5:ex]    del vshlib.s vshlib.b _vshlib temp039
 [ 4:ex]    linklib        
 [ 5:ex]    declare _search_rule = "^int,^var,=bin=/&"
[ 5:ex]    pfh.s> include >_pfh.s
[ 5:ex]    pmac _pfh.s
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] pmac "_pfh.s"
[ 6:ex]    x "pma -i *>_pfh.s -b *>_pfh.b -l no"
 0000 ERRORS (PMA Rev. 19.2)
[ 5:ex]    pmac inst.s
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] pmac "inst.s"
[ 6:ex]    x "pma -i *>inst.s -b *>inst.b -l no"
 0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
[ 6:ex] cat segment
[ 6:ex] cat commseg
[ 5:ex]    ld -nu -i       -s "sy sgsymt 4000 100"       -e 2030       -c 4042       src/main.b       src/common.b       src/ci.b       src/sv.b       src/ls.b       src/hist.b       src/args.b       src/exec.b       src/gettim.b       src/intcmd.b       src/onquit.b       src/order.b       src/parse.b       src/port.b       src/label.b       src/internals.b       src/misc.b       src/onany.b       src/shany.b       _pfh.b       =src=/lib/swt/vswtlb       -s "d/pl"       -m 6       -s "mix off"       -s "sp 100000"       -s "mix on"       -e 4000       inst.b -s "d/li" -m vshlib.m -g sh -o sh
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "-nu" "-i" "-s" "sy sgsymt 4000 100" "-e" "2030" "-c" "4042" "src/main.b" "src/common.b" "src/ci.b" "src/sv.b" "src/ls.b" "src/hist.b" "src/args.b" "src/exec.b" "src/gettim.b" "src/intcmd.b" "src/onquit.b" "src/order.b" "src/parse.b" "src/port.b" "src/label.b" "src/internals.b" "src/misc.b" "src/onany.b" "src/shany.b" "_pfh.b" "=src=/lib/swt/vswtlb" "-s" "d/pl" "-m" "6" "-s" "mix off" "-s" "sp 100000" "-s" "mix on" "-e" "4000" "inst.b" "-s" "d/li" "-m" "vshlib.m" "-g" "sh" "-o" "sh" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ sy sgsymt 4000 100
 $ co ab 4042
 $ s/lo '*>src>main.b' 0 2030 2030
$ s/lo '*>src>common.b' 0 2030 2030
$ s/lo '*>src>ci.b' 0 2030 2030
$ s/lo '*>src>sv.b' 0 2030 2030
$ s/lo '*>src>ls.b' 0 2030 2030
$ s/lo '*>src>hist.b' 0 2030 2030
$ s/lo '*>src>args.b' 0 2030 2030
$ s/lo '*>src>exec.b' 0 2030 2030
$ s/lo '*>src>gettim.b' 0 2030 2030
$ s/lo '*>src>intcmd.b' 0 2030 2030
$ s/lo '*>src>onquit.b' 0 2030 2030
$ s/lo '*>src>order.b' 0 2030 2030
 $ s/lo '*>src>parse.b' 0 2030 2030
 $ s/lo '*>src>port.b' 0 2030 2030
$ s/lo '*>src>label.b' 0 2030 2030
 $ s/lo '*>src>internals.b' 0 2030 2030
 $ s/lo '*>src>misc.b' 0 2030 2030
$ s/lo '*>src>onany.b' 0 2030 2030
 $ s/lo '*>src>shany.b' 0 2030 2030
 $ s/lo _pfh.b 0 2030 2030
$ s/lo '<swt>src>lib>swt>vswtlb' 0 2030 2030
 $ d/pl
 LOAD COMPLETE
$ ma 6
 
 $ mix off
$ sp 100000
$ mix on
 $ s/lo inst.b 0 4000 4000
$ d/li
 LOAD COMPLETE
$ ma vshlib.m
$ ma 6
 
 $ re
 # sh
 FILE ID: sh
Creating SH2030
Creating SH4000
# delete
 # q
[ 5:ex]    del _pfh.s _pfh.b inst.b
[ 3:ex] cd =src=/lib/cio
 [ 3:ex]  build
 [ 4:ex]    declare _search_rule = '^int,^var,=bin=/&,=ebin=/&'
 [ 4:ex]    files .c$ |       change ?* "cc &" | sh
 [ 5:ex]    declare _search_rule = "^int,^var,=bin=/&"
[ 6:ex] args 2
 [ 6:ex] arg 1 | quote
[ 5:ex]    lf -c  | find ".c$"
 [ 5:ex] cc a64l.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "a64l.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 a64l.c
[ 7:ex] vcg -m a64l
[ 7:ex] del a64l.ct1 a64l.ct2 a64l.ct3
 [ 5:ex] cc abort.c
 [ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "abort.c" | sh
 [ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 abort.c
 [ 7:ex] vcg -m abort
 [ 7:ex] del abort.ct1 abort.ct2 abort.ct3
[ 5:ex] cc acos.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "acos.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 acos.c
[ 7:ex] vcg -m acos
[ 7:ex] del acos.ct1 acos.ct2 acos.ct3
 [ 5:ex] cc asin.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "asin.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 asin.c
[ 7:ex] vcg -m asin
[ 7:ex] del asin.ct1 asin.ct2 asin.ct3
 [ 5:ex] cc atan.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "atan.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 atan.c
[ 7:ex] vcg -m atan
[ 7:ex] del atan.ct1 atan.ct2 atan.ct3
 [ 5:ex] cc atan2.c
 [ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "atan2.c" | sh
 [ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 atan2.c
 [ 7:ex] vcg -m atan2
 [ 7:ex] del atan2.ct1 atan2.ct2 atan2.ct3
[ 5:ex] cc atof.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "atof.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 atof.c
[ 7:ex] vcg -m atof
[ 7:ex] del atof.ct1 atof.ct2 atof.ct3
 [ 5:ex] cc atoi.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "atoi.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 atoi.c
[ 7:ex] vcg -m atoi
[ 7:ex] del atoi.ct1 atoi.ct2 atoi.ct3
 [ 5:ex] cc atol.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "atol.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 atol.c
[ 7:ex] vcg -m atol
[ 7:ex] del atol.ct1 atol.ct2 atol.ct3
 [ 5:ex] cc basename.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "basename.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 basename.c
[ 7:ex] vcg -m basename
[ 7:ex] del basename.ct1 basename.ct2 basename.ct3
 [ 5:ex] cc c$clos.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "c$clos.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 c$clos.c
[ 7:ex] vcg -m c$clos
[ 7:ex] del c$clos.ct1 c$clos.ct2 c$clos.ct3
 [ 5:ex] cc c$ctov.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "c$ctov.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 c$ctov.c
[ 7:ex] vcg -m c$ctov
[ 7:ex] del c$ctov.ct1 c$ctov.ct2 c$ctov.ct3
 [ 5:ex] cc c$mktemp.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "c$mktemp.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 c$mktemp.c
[ 7:ex] vcg -m c$mktemp
[ 7:ex] del c$mktemp.ct1 c$mktemp.ct2 c$mktemp.ct3
 [ 5:ex] cc c$open.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "c$open.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 c$open.c
[ 7:ex] vcg -m c$open
[ 7:ex] del c$open.ct1 c$open.ct2 c$open.ct3
 [ 5:ex] cc c$vtoc.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "c$vtoc.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 c$vtoc.c
[ 7:ex] vcg -m c$vtoc
[ 7:ex] del c$vtoc.ct1 c$vtoc.ct2 c$vtoc.ct3
 [ 5:ex] cc ceil.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "ceil.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 ceil.c
[ 7:ex] vcg -m ceil
[ 7:ex] del ceil.ct1 ceil.ct2 ceil.ct3
 [ 5:ex] cc chdir.c
 [ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "chdir.c" | sh
 [ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 chdir.c
 [ 7:ex] vcg -m chdir
 [ 7:ex] del chdir.ct1 chdir.ct2 chdir.ct3
[ 5:ex] cc cos.c
 [ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "cos.c" | sh
 [ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 cos.c
 [ 7:ex] vcg -m cos
 [ 7:ex] del cos.ct1 cos.ct2 cos.ct3
[ 5:ex] cc cosh.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "cosh.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 cosh.c
[ 7:ex] vcg -m cosh
[ 7:ex] del cosh.ct1 cosh.ct2 cosh.ct3
 [ 5:ex] cc creat.c
 [ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "creat.c" | sh
 [ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 creat.c
 [ 7:ex] vcg -m creat
 [ 7:ex] del creat.ct1 creat.ct2 creat.ct3
[ 5:ex] cc ctermid.c
 [ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "ctermid.c" | sh
 [ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 ctermid.c
 [ 7:ex] vcg -m ctermid
 [ 7:ex] del ctermid.ct1 ctermid.ct2 ctermid.ct3
[ 5:ex] cc ctype.c
 [ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "ctype.c" | sh
 [ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 ctype.c
 [ 7:ex] vcg -m ctype
 [ 7:ex] del ctype.ct1 ctype.ct2 ctype.ct3
[ 5:ex] cc cuserid.c
 [ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "cuserid.c" | sh
 [ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 cuserid.c
 [ 7:ex] vcg -m cuserid
 [ 7:ex] del cuserid.ct1 cuserid.ct2 cuserid.ct3
[ 5:ex] cc data.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "data.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 data.c
[ 7:ex] vcg -m data
[ 7:ex] del data.ct1 data.ct2 data.ct3
 [ 5:ex] cc dirname.c
 [ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "dirname.c" | sh
 [ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 dirname.c
 [ 7:ex] vcg -m dirname
 [ 7:ex] del dirname.ct1 dirname.ct2 dirname.ct3
[ 5:ex] cc envinit.c
 [ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "envinit.c" | sh
 [ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 envinit.c
 [ 7:ex] vcg -m envinit
 [ 7:ex] del envinit.ct1 envinit.ct2 envinit.ct3
[ 5:ex] cc exit.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "exit.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 exit.c
[ 7:ex] vcg -m exit
[ 7:ex] del exit.ct1 exit.ct2 exit.ct3
 [ 5:ex] cc exp.c
 [ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "exp.c" | sh
 [ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 exp.c
 [ 7:ex] vcg -m exp
 [ 7:ex] del exp.ct1 exp.ct2 exp.ct3
[ 5:ex] cc fclose.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "fclose.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 fclose.c
[ 7:ex] vcg -m fclose
[ 7:ex] del fclose.ct1 fclose.ct2 fclose.ct3
 [ 5:ex] cc fdopen.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "fdopen.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 fdopen.c
[ 7:ex] vcg -m fdopen
[ 7:ex] del fdopen.ct1 fdopen.ct2 fdopen.ct3
 [ 5:ex] cc fflush.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "fflush.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 fflush.c
[ 7:ex] vcg -m fflush
[ 7:ex] del fflush.ct1 fflush.ct2 fflush.ct3
 [ 5:ex] cc fgetc.c
 [ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "fgetc.c" | sh
 [ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 fgetc.c
 [ 7:ex] vcg -m fgetc
 [ 7:ex] del fgetc.ct1 fgetc.ct2 fgetc.ct3
[ 5:ex] cc fgets.c
 [ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "fgets.c" | sh
 [ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 fgets.c
 [ 7:ex] vcg -m fgets
 [ 7:ex] del fgets.ct1 fgets.ct2 fgets.ct3
[ 5:ex] cc floor.c
 [ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "floor.c" | sh
 [ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 floor.c
 [ 7:ex] vcg -m floor
 [ 7:ex] del floor.ct1 floor.ct2 floor.ct3
[ 5:ex] cc fmod.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "fmod.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 fmod.c
[ 7:ex] vcg -m fmod
[ 7:ex] del fmod.ct1 fmod.ct2 fmod.ct3
 [ 5:ex] cc fopen.c
 [ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "fopen.c" | sh
 [ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 fopen.c
 [ 7:ex] vcg -m fopen
 [ 7:ex] del fopen.ct1 fopen.ct2 fopen.ct3
[ 5:ex] cc fprintf.c
 [ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "fprintf.c" | sh
 [ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 fprintf.c
 [ 7:ex] vcg -m fprintf
 [ 7:ex] del fprintf.ct1 fprintf.ct2 fprintf.ct3
[ 5:ex] cc fputc.c
 [ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "fputc.c" | sh
 [ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 fputc.c
 [ 7:ex] vcg -m fputc
 [ 7:ex] del fputc.ct1 fputc.ct2 fputc.ct3
[ 5:ex] cc fputs.c
 [ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "fputs.c" | sh
 [ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 fputs.c
 [ 7:ex] vcg -m fputs
 [ 7:ex] del fputs.ct1 fputs.ct2 fputs.ct3
[ 5:ex] cc fread.c
 [ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "fread.c" | sh
 [ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 fread.c
 [ 7:ex] vcg -m fread
 [ 7:ex] del fread.ct1 fread.ct2 fread.ct3
[ 5:ex] cc freopen.c
 [ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "freopen.c" | sh
 [ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 freopen.c
 [ 7:ex] vcg -m freopen
 [ 7:ex] del freopen.ct1 freopen.ct2 freopen.ct3
[ 5:ex] cc fscanf.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "fscanf.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 fscanf.c
[ 7:ex] vcg -m fscanf
[ 7:ex] del fscanf.ct1 fscanf.ct2 fscanf.ct3
 [ 5:ex] cc fseek.c
 [ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "fseek.c" | sh
 [ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 fseek.c
 [ 7:ex] vcg -m fseek
 [ 7:ex] del fseek.ct1 fseek.ct2 fseek.ct3
[ 5:ex] cc ftell.c
 [ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "ftell.c" | sh
 [ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 ftell.c
 [ 7:ex] vcg -m ftell
 [ 7:ex] del ftell.ct1 ftell.ct2 ftell.ct3
[ 5:ex] cc ftrunc.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "ftrunc.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 ftrunc.c
[ 7:ex] vcg -m ftrunc
[ 7:ex] del ftrunc.ct1 ftrunc.ct2 ftrunc.ct3
 [ 5:ex] cc fwrite.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "fwrite.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 fwrite.c
[ 7:ex] vcg -m fwrite
[ 7:ex] del fwrite.ct1 fwrite.ct2 fwrite.ct3
 [ 5:ex] cc getc.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "getc.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 getc.c
[ 7:ex] vcg -m getc
[ 7:ex] del getc.ct1 getc.ct2 getc.ct3
 [ 5:ex] cc getcwd.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "getcwd.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 getcwd.c
[ 7:ex] vcg -m getcwd
[ 7:ex] del getcwd.ct1 getcwd.ct2 getcwd.ct3
 [ 5:ex] cc getlogin.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "getlogin.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 getlogin.c
[ 7:ex] vcg -m getlogin
[ 7:ex] del getlogin.ct1 getlogin.ct2 getlogin.ct3
 [ 5:ex] cc getopt.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "getopt.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 getopt.c
[ 7:ex] vcg -m getopt
[ 7:ex] del getopt.ct1 getopt.ct2 getopt.ct3
 [ 5:ex] cc getpass.c
 [ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "getpass.c" | sh
 [ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 getpass.c
 [ 7:ex] vcg -m getpass
 [ 7:ex] del getpass.ct1 getpass.ct2 getpass.ct3
[ 5:ex] cc getpid.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "getpid.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 getpid.c
[ 7:ex] vcg -m getpid
[ 7:ex] del getpid.ct1 getpid.ct2 getpid.ct3
 [ 5:ex] cc gets.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "gets.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 gets.c
[ 7:ex] vcg -m gets
[ 7:ex] del gets.ct1 gets.ct2 gets.ct3
 [ 5:ex] cc getw.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "getw.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 getw.c
[ 7:ex] vcg -m getw
[ 7:ex] del getw.ct1 getw.ct2 getw.ct3
 [ 5:ex] cc hypot.c
 [ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "hypot.c" | sh
 [ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 hypot.c
 [ 7:ex] vcg -m hypot
 [ 7:ex] del hypot.ct1 hypot.ct2 hypot.ct3
[ 5:ex] cc index.c
 [ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "index.c" | sh
 [ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 index.c
 [ 7:ex] vcg -m index
 [ 7:ex] del index.ct1 index.ct2 index.ct3
[ 5:ex] cc l64a.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "l64a.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 l64a.c
[ 7:ex] vcg -m l64a
[ 7:ex] del l64a.ct1 l64a.ct2 l64a.ct3
 [ 5:ex] cc log.c
 [ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "log.c" | sh
 [ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 log.c
 [ 7:ex] vcg -m log
 [ 7:ex] del log.ct1 log.ct2 log.ct3
[ 5:ex] cc log10.c
 [ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "log10.c" | sh
 [ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 log10.c
 [ 7:ex] vcg -m log10
 [ 7:ex] del log10.ct1 log10.ct2 log10.ct3
[ 5:ex] cc logname.c
 [ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "logname.c" | sh
 [ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 logname.c
 [ 7:ex] vcg -m logname
 [ 7:ex] del logname.ct1 logname.ct2 logname.ct3
[ 5:ex] cc lseek.c
 [ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "lseek.c" | sh
 [ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 lseek.c
 [ 7:ex] vcg -m lseek
 [ 7:ex] del lseek.ct1 lseek.ct2 lseek.ct3
[ 5:ex] cc memccpy.c
 [ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "memccpy.c" | sh
 [ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 memccpy.c
 [ 7:ex] vcg -m memccpy
 [ 7:ex] del memccpy.ct1 memccpy.ct2 memccpy.ct3
[ 5:ex] cc memchr.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "memchr.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 memchr.c
[ 7:ex] vcg -m memchr
[ 7:ex] del memchr.ct1 memchr.ct2 memchr.ct3
 [ 5:ex] cc memcmp.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "memcmp.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 memcmp.c
[ 7:ex] vcg -m memcmp
[ 7:ex] del memcmp.ct1 memcmp.ct2 memcmp.ct3
 [ 5:ex] cc memcpy.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "memcpy.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 memcpy.c
[ 7:ex] vcg -m memcpy
[ 7:ex] del memcpy.ct1 memcpy.ct2 memcpy.ct3
 [ 5:ex] cc memset.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "memset.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 memset.c
[ 7:ex] vcg -m memset
[ 7:ex] del memset.ct1 memset.ct2 memset.ct3
 [ 5:ex] cc popen.c
 [ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "popen.c" | sh
 [ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 popen.c
 [ 7:ex] vcg -m popen
 [ 7:ex] del popen.ct1 popen.ct2 popen.ct3
[ 5:ex] cc pow.c
 [ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "pow.c" | sh
 [ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 pow.c
 [ 7:ex] vcg -m pow
 [ 7:ex] del pow.ct1 pow.ct2 pow.ct3
[ 5:ex] cc printf.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "printf.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 printf.c
[ 7:ex] vcg -m printf
[ 7:ex] del printf.ct1 printf.ct2 printf.ct3
 [ 5:ex] cc putc.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "putc.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 putc.c
[ 7:ex] vcg -m putc
[ 7:ex] del putc.ct1 putc.ct2 putc.ct3
 [ 5:ex] cc puts.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "puts.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 puts.c
[ 7:ex] vcg -m puts
[ 7:ex] del puts.ct1 puts.ct2 puts.ct3
 [ 5:ex] cc putw.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "putw.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 putw.c
[ 7:ex] vcg -m putw
[ 7:ex] del putw.ct1 putw.ct2 putw.ct3
 [ 5:ex] cc rand.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "rand.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 rand.c
[ 7:ex] vcg -m rand
[ 7:ex] del rand.ct1 rand.ct2 rand.ct3
 [ 5:ex] cc read.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "read.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 read.c
[ 7:ex] vcg -m read
[ 7:ex] del read.ct1 read.ct2 read.ct3
 [ 5:ex] cc rewind.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "rewind.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 rewind.c
[ 7:ex] vcg -m rewind
[ 7:ex] del rewind.ct1 rewind.ct2 rewind.ct3
 [ 5:ex] cc rindex.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "rindex.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 rindex.c
[ 7:ex] vcg -m rindex
[ 7:ex] del rindex.ct1 rindex.ct2 rindex.ct3
 [ 5:ex] cc scanf.c
 [ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "scanf.c" | sh
 [ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 scanf.c
 [ 7:ex] vcg -m scanf
 [ 7:ex] del scanf.ct1 scanf.ct2 scanf.ct3
[ 5:ex] cc setbuf.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "setbuf.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 setbuf.c
[ 7:ex] vcg -m setbuf
[ 7:ex] del setbuf.ct1 setbuf.ct2 setbuf.ct3
 [ 5:ex] cc sin.c
 [ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "sin.c" | sh
 [ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 sin.c
 [ 7:ex] vcg -m sin
 [ 7:ex] del sin.ct1 sin.ct2 sin.ct3
[ 5:ex] cc sinh.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "sinh.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 sinh.c
[ 7:ex] vcg -m sinh
[ 7:ex] del sinh.ct1 sinh.ct2 sinh.ct3
 [ 5:ex] cc sleep.c
 [ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "sleep.c" | sh
 [ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 sleep.c
 [ 7:ex] vcg -m sleep
 [ 7:ex] del sleep.ct1 sleep.ct2 sleep.ct3
[ 5:ex] cc sprintf.c
 [ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "sprintf.c" | sh
 [ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 sprintf.c
 [ 7:ex] vcg -m sprintf
 [ 7:ex] del sprintf.ct1 sprintf.ct2 sprintf.ct3
[ 5:ex] cc sqrt.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "sqrt.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 sqrt.c
[ 7:ex] vcg -m sqrt
[ 7:ex] del sqrt.ct1 sqrt.ct2 sqrt.ct3
 [ 5:ex] cc sscanf.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "sscanf.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 sscanf.c
[ 7:ex] vcg -m sscanf
[ 7:ex] del sscanf.ct1 sscanf.ct2 sscanf.ct3
 [ 5:ex] cc strcat.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "strcat.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 strcat.c
[ 7:ex] vcg -m strcat
[ 7:ex] del strcat.ct1 strcat.ct2 strcat.ct3
 [ 5:ex] cc strchr.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "strchr.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 strchr.c
[ 7:ex] vcg -m strchr
[ 7:ex] del strchr.ct1 strchr.ct2 strchr.ct3
 [ 5:ex] cc strcmp.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "strcmp.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 strcmp.c
[ 7:ex] vcg -m strcmp
[ 7:ex] del strcmp.ct1 strcmp.ct2 strcmp.ct3
 [ 5:ex] cc strcpy.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "strcpy.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 strcpy.c
[ 7:ex] vcg -m strcpy
[ 7:ex] del strcpy.ct1 strcpy.ct2 strcpy.ct3
 [ 5:ex] cc strcspn.c
 [ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "strcspn.c" | sh
 [ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 strcspn.c
 [ 7:ex] vcg -m strcspn
 [ 7:ex] del strcspn.ct1 strcspn.ct2 strcspn.ct3
[ 5:ex] cc strlen.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "strlen.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 strlen.c
[ 7:ex] vcg -m strlen
[ 7:ex] del strlen.ct1 strlen.ct2 strlen.ct3
 [ 5:ex] cc strncat.c
 [ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "strncat.c" | sh
 [ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 strncat.c
 [ 7:ex] vcg -m strncat
 [ 7:ex] del strncat.ct1 strncat.ct2 strncat.ct3
[ 5:ex] cc strncmp.c
 [ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "strncmp.c" | sh
 [ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 strncmp.c
 [ 7:ex] vcg -m strncmp
 [ 7:ex] del strncmp.ct1 strncmp.ct2 strncmp.ct3
[ 5:ex] cc strncpy.c
 [ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "strncpy.c" | sh
 [ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 strncpy.c
 [ 7:ex] vcg -m strncpy
 [ 7:ex] del strncpy.ct1 strncpy.ct2 strncpy.ct3
[ 5:ex] cc strpbrk.c
 [ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "strpbrk.c" | sh
 [ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 strpbrk.c
 [ 7:ex] vcg -m strpbrk
 [ 7:ex] del strpbrk.ct1 strpbrk.ct2 strpbrk.ct3
[ 5:ex] cc strrchr.c
 [ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "strrchr.c" | sh
 [ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 strrchr.c
 [ 7:ex] vcg -m strrchr
 [ 7:ex] del strrchr.ct1 strrchr.ct2 strrchr.ct3
[ 5:ex] cc strspn.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "strspn.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 strspn.c
[ 7:ex] vcg -m strspn
[ 7:ex] del strspn.ct1 strspn.ct2 strspn.ct3
 [ 5:ex] cc strtok.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "strtok.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 strtok.c
[ 7:ex] vcg -m strtok
[ 7:ex] del strtok.ct1 strtok.ct2 strtok.ct3
 [ 5:ex] cc strtol.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "strtol.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 strtol.c
[ 7:ex] vcg -m strtol
[ 7:ex] del strtol.ct1 strtol.ct2 strtol.ct3
 [ 5:ex] cc system.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "system.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 system.c
[ 7:ex] vcg -m system
[ 7:ex] del system.ct1 system.ct2 system.ct3
 [ 5:ex] cc tan.c
 [ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "tan.c" | sh
 [ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 tan.c
 [ 7:ex] vcg -m tan
 [ 7:ex] del tan.ct1 tan.ct2 tan.ct3
[ 5:ex] cc tanh.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "tanh.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 tanh.c
[ 7:ex] vcg -m tanh
[ 7:ex] del tanh.ct1 tanh.ct2 tanh.ct3
 [ 5:ex] cc tempnam.c
 [ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "tempnam.c" | sh
 [ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 tempnam.c
 [ 7:ex] vcg -m tempnam
 [ 7:ex] del tempnam.ct1 tempnam.ct2 tempnam.ct3
[ 5:ex] cc tmpfile.c
 [ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "tmpfile.c" | sh
 [ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 tmpfile.c
 [ 7:ex] vcg -m tmpfile
 [ 7:ex] del tmpfile.ct1 tmpfile.ct2 tmpfile.ct3
[ 5:ex] cc tmpnam.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "tmpnam.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 tmpnam.c
[ 7:ex] vcg -m tmpnam
[ 7:ex] del tmpnam.ct1 tmpnam.ct2 tmpnam.ct3
 [ 5:ex] cc ttyname.c
 [ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "ttyname.c" | sh
 [ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 ttyname.c
 [ 7:ex] vcg -m ttyname
 [ 7:ex] del ttyname.ct1 ttyname.ct2 ttyname.ct3
[ 5:ex] cc ungetc.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "ungetc.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 ungetc.c
[ 7:ex] vcg -m ungetc
[ 7:ex] del ungetc.ct1 ungetc.ct2 ungetc.ct3
 [ 5:ex] cc unlink.c
[ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "unlink.c" | sh
[ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 unlink.c
[ 7:ex] vcg -m unlink
[ 7:ex] del unlink.ct1 unlink.ct2 unlink.ct3
 [ 5:ex] cc write.c
 [ 6:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 7:ex] args
 [ 6:ex]    cc "write.c" | sh
 [ 7:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 7:ex] c1 write.c
 [ 7:ex] vcg -m write
 [ 7:ex] del write.ct1 write.ct2 write.ct3
[ 4:ex]    files .s$ | change ?* "pmac &" | sh
 [ 5:ex]    declare _search_rule = "^int,^var,=bin=/&"
[ 6:ex] args 2
 [ 6:ex] arg 1 | quote
[ 5:ex]    lf -c  | find ".s$"
 [ 5:ex] pmac abs.s
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] pmac "abs.s"
 [ 6:ex]    x "pma -i *>abs.s -b *>abs.b -l no"
 0000 ERRORS (PMA Rev. 19.2)
[ 5:ex] pmac calloc.s
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] pmac "calloc.s"
[ 6:ex]    x "pma -i *>calloc.s -b *>calloc.b -l no"
 0000 ERRORS (PMA Rev. 19.2)
[ 5:ex] pmac fabs.s
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] pmac "fabs.s"
[ 6:ex]    x "pma -i *>fabs.s -b *>fabs.b -l no"
 0000 ERRORS (PMA Rev. 19.2)
[ 5:ex] pmac free.s
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] pmac "free.s"
[ 6:ex]    x "pma -i *>free.s -b *>free.b -l no"
 0000 ERRORS (PMA Rev. 19.2)
[ 5:ex] pmac longjmp.s
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] pmac "longjmp.s"
 [ 6:ex]    x "pma -i *>longjmp.s -b *>longjmp.b -l no"
 0000 ERRORS (PMA Rev. 19.2)
[ 5:ex] pmac malloc.s
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] pmac "malloc.s"
[ 6:ex]    x "pma -i *>malloc.s -b *>malloc.b -l no"
 0000 ERRORS (PMA Rev. 19.2)
[ 5:ex] pmac realloc.s
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] pmac "realloc.s"
 [ 6:ex]    x "pma -i *>realloc.s -b *>realloc.b -l no"
 0000 ERRORS (PMA Rev. 19.2)
[ 5:ex] pmac setjmp.s
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] pmac "setjmp.s"
[ 6:ex]    x "pma -i *>setjmp.s -b *>setjmp.b -l no"
 0000 ERRORS (PMA Rev. 19.2)
[ 5:ex] pmac shifts.s
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] pmac "shifts.s"
[ 6:ex]    x "pma -i *>shifts.s -b *>shifts.b -l no"
 0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
[ 5:ex] pmac tolower.s
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] pmac "tolower.s"
 [ 6:ex]    x "pma -i *>tolower.s -b *>tolower.b -l no"
 0000 ERRORS (PMA Rev. 19.2)
[ 5:ex] pmac toupper.s
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] pmac "toupper.s"
 [ 6:ex]    x "pma -i *>toupper.s -b *>toupper.b -l no"
 0000 ERRORS (PMA Rev. 19.2)
[ 4:ex]    echo >ciolib.b
[ 4:ex]    file_list> find '%#' -x |         change "?*" "INSERT &.b" |            ^cn/1 | x
 [ 5:ex]  echo edb ciolib.b _ciolib
 [ 5:ex]               echo BRIEF
 [ 5:ex]  echo RFL
[ 5:ex]               cto
[ 6:ex]    declare _search_rule = "^int,=bin=/&,^var"
[ 7:ex] nargs
[ 6:ex]    if 0
[ 6:ex]       slice -i % -x %-EOF$
 [ 6:ex]    fi
[ 5:ex]               echo SFL
 [ 5:ex]  echo QUIT 
[EDB rev 19.0]
 ENTER, BRIEF
 ENTER, RFL
 ENTER, INSERT a64l.b
 ENTER, INSERT abort.b
ENTER, INSERT abs.b
ENTER, INSERT acos.b
 ENTER, INSERT asin.b
 ENTER, INSERT atan.b
 ENTER, INSERT atan2.b
ENTER, INSERT atof.b
 ENTER, INSERT atoi.b
 ENTER, INSERT atol.b
 ENTER, INSERT c$clos.b
 ENTER, INSERT c$ctov.b
 ENTER, INSERT c$open.b
 ENTER, INSERT c$vtoc.b
 ENTER, INSERT calloc.b
 ENTER, INSERT ceil.b
 ENTER, INSERT chdir.b
ENTER, INSERT cos.b
ENTER, INSERT cosh.b
 ENTER, INSERT creat.b
ENTER, INSERT exit.b
 ENTER, INSERT exp.b
ENTER, INSERT fdopen.b
 ENTER, INSERT fgets.b
ENTER, INSERT floor.b
ENTER, INSERT fread.b
ENTER, INSERT fwrite.b
 ENTER, INSERT getpid.b
 ENTER, INSERT getw.b
 ENTER, INSERT hypot.b
ENTER, INSERT l64a.b
 ENTER, INSERT log.b
ENTER, INSERT log10.b
ENTER, INSERT longjmp.b
ENTER, INSERT memccpy.b
ENTER, INSERT memchr.b
 ENTER, INSERT memcmp.b
 ENTER, INSERT memcpy.b
 ENTER, INSERT memset.b
 ENTER, INSERT pow.b
ENTER, INSERT putw.b
 ENTER, INSERT rand.b
 ENTER, INSERT read.b
 ENTER, INSERT realloc.b
ENTER, INSERT setbuf.b
 ENTER, INSERT setjmp.b
 ENTER, INSERT sin.b
ENTER, INSERT sinh.b
 ENTER, INSERT sleep.b
ENTER, INSERT sqrt.b
 ENTER, INSERT strcat.b
 ENTER, INSERT strcmp.b
 ENTER, INSERT strpbrk.b
ENTER, INSERT system.b
 ENTER, INSERT tan.b
ENTER, INSERT tanh.b
 ENTER, INSERT tmpfile.b
ENTER, INSERT toupper.b
ENTER, INSERT ttyname.b
ENTER, INSERT unlink.b
 ENTER, INSERT write.b
ENTER, INSERT basename.b
 ENTER, INSERT c$mktemp.b
 ENTER, INSERT ctermid.b
ENTER, INSERT dirname.b
ENTER, INSERT fgetc.b
ENTER, INSERT fmod.b
 ENTER, INSERT fputc.b
ENTER, INSERT freopen.b
ENTER, INSERT fscanf.b
 ENTER, INSERT ftrunc.b
 ENTER, INSERT getcwd.b
 ENTER, INSERT getlogin.b
 ENTER, INSERT getopt.b
 ENTER, INSERT getpass.b
ENTER, INSERT gets.b
 ENTER, INSERT index.b
ENTER, INSERT logname.b
ENTER, INSERT popen.b
ENTER, INSERT printf.b
 ENTER, INSERT putc.b
 ENTER, INSERT puts.b
 ENTER, INSERT rewind.b
 ENTER, INSERT rindex.b
 ENTER, INSERT scanf.b
ENTER, INSERT sscanf.b
 ENTER, INSERT strcspn.b
ENTER, INSERT strncat.b
ENTER, INSERT strspn.b
 ENTER, INSERT strtok.b
 ENTER, INSERT strtol.b
 ENTER, INSERT tempnam.b
ENTER, INSERT cuserid.b
ENTER, INSERT envinit.b
ENTER, INSERT fclose.b
 ENTER, INSERT fprintf.b
ENTER, INSERT fseek.b
ENTER, INSERT strrchr.b
ENTER, INSERT tmpnam.b
 ENTER, INSERT fabs.b
 ENTER, INSERT fflush.b
 ENTER, INSERT fopen.b
ENTER, INSERT fputs.b
ENTER, INSERT free.b
 ENTER, INSERT ftell.b
ENTER, INSERT getc.b
 ENTER, INSERT lseek.b
ENTER, INSERT malloc.b
 ENTER, INSERT sprintf.b
ENTER, INSERT strchr.b
 ENTER, INSERT strcpy.b
 ENTER, INSERT strlen.b
 ENTER, INSERT strncmp.b
ENTER, INSERT strncpy.b
ENTER, INSERT tolower.b
ENTER, INSERT ungetc.b
 ENTER, INSERT shifts.b
 ENTER, INSERT ctype.b
ENTER, INSERT data.b
 ENTER, SFL
 ENTER, QUIT
[ 4:ex]    >> cto | x
[ 5:ex]    declare _search_rule = "^int,=bin=/&,^var"
[ 6:ex] nargs
[ 5:ex]    if 0
[ 5:ex]       slice -i % -x %-EOF$
 [ 5:ex]    fi
[LIBEDB rev 19.0]

 SOURCE FILE, DESTINATION FILE, PARAMETER
 WHERE: PARAMETER = 0 - DESTINATION FILE SAM
       PARAMETER = 2000 - DESTINATION FILE DAM
 $    _ciolib ciolib 0
[ 5:ex] cat _standalone
[ 4:ex]    cc -DSTAND_ALONE envinit.c
[ 5:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 6:ex] args
 [ 5:ex]    cc "-DSTAND_ALONE" "envinit.c" | sh
 [ 6:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 6:ex] c1 -DSTAND_ALONE envinit.c
 [ 6:ex] vcg -m envinit
 [ 6:ex] del envinit.ct1 envinit.ct2 envinit.ct3
[ 4:ex]    cc -DSTAND_ALONE popen.c
[ 5:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 6:ex] args
 [ 5:ex]    cc "-DSTAND_ALONE" "popen.c" | sh
 [ 6:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 6:ex] c1 -DSTAND_ALONE popen.c
 [ 6:ex] vcg -m popen
 [ 6:ex] del popen.ct1 popen.ct2 popen.ct3
[ 4:ex]    cc -DSTAND_ALONE system.c
 [ 5:ex]    declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"            _quote_opt = YES
 [ 6:ex] args
 [ 5:ex]    cc "-DSTAND_ALONE" "system.c" | sh
[ 6:ex] declare _search_rule = "^int,^var,=ebin=/&,=bin=/&"
[ 6:ex] c1 -DSTAND_ALONE system.c
[ 6:ex] vcg -m system
[ 6:ex] del system.ct1 system.ct2 system.ct3
 [ 4:ex]    rfc getarg.r -a
 [ 5:ex]    declare src _search_rule = "^int,=bin=/&,^var"
[ 6:ex] nargs
[ 5:ex]    if 2
[ 6:ex] arg 1
[ 5:ex]       set src = getarg.r
 [ 5:ex]    else
[ 6:ex] src
[ 6:ex] basename -s getarg.r
 [ 6:ex] cmp r = ""r
[ 5:ex]    if 1
[ 6:ex] src
[ 6:ex] basename -f getarg.r
 [ 5:ex]       set src = ""getarg
 [ 5:ex]    fi
[ 6:ex] src
[ 6:ex] file -ne getarg.r
[ 5:ex]    if 0
[ 6:ex] src
[ 6:ex] argsto / 0 2
 [ 5:ex]    rp -a getarg.r -a
 [ 6:ex] src
[ 6:ex] argsto / 1
 [ 5:ex]    fc getarg.f 
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "getarg.f"
[ 6:ex]    x "ftn -i *>getarg.f -b *>getarg.b -l no -64v -dc -dy -o"
 0000 ERRORS [<GETARG>FTN-REV19.2] 
 [ 4:ex]    echo >nciolib.b
 [ 4:ex]    _standalone> change "?*" "INSERT &.b" |         ^cn/1 | x
 [ 5:ex]  echo edb nciolib.b _nciolib
 [ 5:ex]            echo BRIEF
[ 5:ex]  echo RFL
[ 5:ex]            cto
 [ 6:ex]    declare _search_rule = "^int,=bin=/&,^var"
[ 7:ex] nargs
[ 6:ex]    if 0
[ 6:ex]       slice -i % -x %-EOF$
 [ 6:ex]    fi
[ 5:ex]            echo INSERT getarg.b
[ 5:ex]            echo SFL
[ 5:ex]  echo QUIT 
[EDB rev 19.0]
 ENTER, BRIEF
 ENTER, RFL
 ENTER, INSERT envinit.b
ENTER, INSERT popen.b
ENTER, INSERT system.b
 ENTER, INSERT getarg.b
 ENTER, SFL
 ENTER, QUIT
[ 4:ex]    >> cto | x
[ 5:ex]    declare _search_rule = "^int,=bin=/&,^var"
[ 6:ex] nargs
[ 5:ex]    if 0
[ 5:ex]       slice -i % -x %-EOF$
 [ 5:ex]    fi
[LIBEDB rev 19.0]

 SOURCE FILE, DESTINATION FILE, PARAMETER
 WHERE: PARAMETER = 0 - DESTINATION FILE SAM
       PARAMETER = 2000 - DESTINATION FILE DAM
 $    _nciolib nciolib 0
[ 4:ex]    del _ciolib _nciolib
[ 3:ex] cd =src=/lcl/lib/lslib.u
 [ 3:ex]  build
 [ 4:ex]    declare _search_rule = "^int,^var,=bin=/&"
[ 4:ex]    rp -a lslib.r
 [ 4:ex]    fc lslib.f
[ 5:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 6:ex] args
 [ 6:ex] fc "lslib.f"
 [ 5:ex]    x "ftn -i *>lslib.f -b *>lslib.b -l no -64v -dc -dy -o"
 0000 ERRORS [<LSGETF>FTN-REV19.2] 
 0000 ERRORS [<LSPUTF>FTN-REV19.2] 
 0000 ERRORS [<LSJOIN>FTN-REV19.2] 
 0000 ERRORS [<LSCMPK>FTN-REV19.2] 
 0000 ERRORS [<LSCOMP>FTN-REV19.2] 
 0000 ERRORS [<LSCUT >FTN-REV19.2] 
 0000 ERRORS [<LSINS >FTN-REV19.2] 
 0000 ERRORS [<LSTAKE>FTN-REV19.2] 
 0000 ERRORS [<LSDROP>FTN-REV19.2] 
 0000 ERRORS [<LSSUBS>FTN-REV19.2] 
 0000 ERRORS [<LSDEL >FTN-REV19.2] 
 0000 ERRORS [<LSCOPY>FTN-REV19.2] 
 0000 ERRORS [<LSPOS >FTN-REV19.2] 
 0000 ERRORS [<LSMAKE>FTN-REV19.2] 
 0000 ERRORS [<LSEXTR>FTN-REV19.2] 
 0000 ERRORS [<LSLEN >FTN-REV19.2] 
 0000 ERRORS [<LSGETC>FTN-REV19.2] 
 0000 ERRORS [<LSPUTC>FTN-REV19.2] 
 0000 ERRORS [<LSALLO>FTN-REV19.2] 
 0000 ERRORS [<LSFREE>FTN-REV19.2] 
 0000 ERRORS [<LSINIT>FTN-REV19.2] 
 0000 ERRORS [<LSDUMP>FTN-REV19.2] 
 [ 4:ex]    >> cto | x
[ 5:ex]    declare _search_rule = "^int,=bin=/&,^var"
[ 6:ex] nargs
[ 5:ex]    if 0
[ 5:ex]       slice -i % -x %-EOF$
 [ 5:ex]    fi
[EDB rev 19.0]
 ENTER,    BRIEF
ENTER,    RFL
ENTER,    COPY ALL
 
 .BOTTOM.
 ENTER,    SFL
ENTER,    ET
 ENTER,    QUIT
 [ 4:ex]    >> cto | x
[ 5:ex]    declare _search_rule = "^int,=bin=/&,^var"
[ 6:ex] nargs
[ 5:ex]    if 0
[ 5:ex]       slice -i % -x %-EOF$
 [ 5:ex]    fi
[LIBEDB rev 19.0]

 SOURCE FILE, DESTINATION FILE, PARAMETER
 WHERE: PARAMETER = 0 - DESTINATION FILE SAM
       PARAMETER = 2000 - DESTINATION FILE DAM
 $    _vlslb vlslb 0
[ 3:ex] cd =src=/lcl/lib/p4clib.u
[ 3:ex]  build
 [ 4:ex]    declare _search_rule = "^int,=bin=/&"
 [ 4:ex]    rp -ag p4clib.r
 [ 4:ex]    fc -d0o p4clib.f -b b1
[ 5:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 6:ex] args
 [ 6:ex] fc "-d0o" "p4clib.f" "-b" "b1"
 [ 5:ex]    x "ftn -i *>p4clib.f -b *>b1 -l no -64v -dc -dy -u"
 0000 ERRORS [<P$ABI >FTN-REV19.2] 
 0000 ERRORS [<P$ABR >FTN-REV19.2] 
 0000 ERRORS [<P$ADI >FTN-REV19.2] 
 0000 ERRORS [<P$ADR >FTN-REV19.2] 
 0000 ERRORS [<P$AND >FTN-REV19.2] 
 0000 ERRORS [<P$ATN >FTN-REV19.2] 
 0000 ERRORS [<P$BRD >FTN-REV19.2] 
 0000 ERRORS [<P$BWR >FTN-REV19.2] 
 0000 ERRORS [<P$CFP >FTN-REV19.2] 
 0000 ERRORS [<P$CPF >FTN-REV19.2] 
 0000 ERRORS [<P$CHK >FTN-REV19.2] 
 0000 ERRORS [<P$CHKA>FTN-REV19.2] 
 0000 ERRORS [<P$CHR >FTN-REV19.2] 
 0000 ERRORS [<P$CLS >FTN-REV19.2] 
 0000 ERRORS [<P$COS >FTN-REV19.2] 
 0000 ERRORS [<P$DAT >FTN-REV19.2] 
 0000 ERRORS [<P$DEC >FTN-REV19.2] 
 0000 ERRORS [<P$DIF >FTN-REV19.2] 
 0000 ERRORS [<P$DVI >FTN-REV19.2] 
 0000 ERRORS [<P$DVR >FTN-REV19.2] 
 0000 ERRORS [<P$ELN >FTN-REV19.2] 
 0000 ERRORS [<P$ENT >FTN-REV19.2] 
 0000 ERRORS [<P$EOF >FTN-REV19.2] 
 0000 ERRORS [<P$EQU >FTN-REV19.2] 
 0000 ERRORS [<P$EXP >FTN-REV19.2] 
 0000 ERRORS [<P$FLO >FTN-REV19.2] 
 0000 ERRORS [<P$FLT >FTN-REV19.2] 
 0000 ERRORS [<P$FMS >FTN-REV19.2] 
 0000 ERRORS [<P$GEQ >FTN-REV19.2] 
 0000 ERRORS [<P$GET >FTN-REV19.2] 
 0000 ERRORS [<P$GRT >FTN-REV19.2] 
 0000 ERRORS [<P$INC >FTN-REV19.2] 
 0000 ERRORS [<P$IND >FTN-REV19.2] 
 0000 ERRORS [<P$INF >FTN-REV19.2] 
 0000 ERRORS [<P$INN >FTN-REV19.2] 
 0000 ERRORS [<P$INT >FTN-REV19.2] 
 0000 ERRORS [<P$IOR >FTN-REV19.2] 
 0000 ERRORS [<P$IXA >FTN-REV19.2] 
 0000 ERRORS [<P$LAO >FTN-REV19.2] 
 0000 ERRORS [<P$LCA >FTN-REV19.2] 
 0000 ERRORS [<P$LDA >FTN-REV19.2] 
 0000 ERRORS [<P$LDC >FTN-REV19.2] 
 0000 ERRORS [<P$LDO >FTN-REV19.2] 
 0000 ERRORS [<P$LDOS>FTN-REV19.2] 
 0000 ERRORS [<P$LEQ >FTN-REV19.2] 
 0000 ERRORS [<P$LES >FTN-REV19.2] 
 0000 ERRORS [<P$LOD >FTN-REV19.2] 
 0000 ERRORS [<P$LODA>FTN-REV19.2] 
 0000 ERRORS [<P$LODS>FTN-REV19.2] 
 0000 ERRORS [<P$LOG >FTN-REV19.2] 
 0000 ERRORS [<P$MOD >FTN-REV19.2] 
 0000 ERRORS [<P$MOV >FTN-REV19.2] 
 0000 ERRORS [<P$MPI >FTN-REV19.2] 
 0000 ERRORS [<P$MPR >FTN-REV19.2] 
 0000 ERRORS [<P$MST >FTN-REV19.2] 
 0000 ERRORS [<P$MTS >FTN-REV19.2] 
 0000 ERRORS [<P$NEQ >FTN-REV19.2] 
 0000 ERRORS [<P$NEW >FTN-REV19.2] 
 0000 ERRORS [<P$NGI >FTN-REV19.2] 
 0000 ERRORS [<P$NGR >FTN-REV19.2] 
 0000 ERRORS [<P$NOT >FTN-REV19.2] 
 0000 ERRORS [<P$ODD >FTN-REV19.2] 
 0000 ERRORS [<P$ORD >FTN-REV19.2] 
 0000 ERRORS [<P$PAG >FTN-REV19.2] 
 0000 ERRORS [<P$PUT >FTN-REV19.2] 
 0000 ERRORS [<P$RDC >FTN-REV19.2] 
 0000 ERRORS [<P$RDI >FTN-REV19.2] 
 0000 ERRORS [<P$RDR >FTN-REV19.2] 
 0000 ERRORS [<P$REM >FTN-REV19.2] 
 0000 ERRORS [<P$RES >FTN-REV19.2] 
 0000 ERRORS [<P$RLN >FTN-REV19.2] 
 0000 ERRORS [<P$RST >FTN-REV19.2] 
 0000 ERRORS [<P$RWR >FTN-REV19.2] 
 0000 ERRORS [<P$SAV >FTN-REV19.2] 
 0000 ERRORS [<P$SBI >FTN-REV19.2] 
 0000 ERRORS [<P$SBR >FTN-REV19.2] 
 0000 ERRORS [<P$SGS >FTN-REV19.2] 
 0000 ERRORS [<P$SIN >FTN-REV19.2] 
 0000 ERRORS [<P$SQI >FTN-REV19.2] 
 0000 ERRORS [<P$SQR >FTN-REV19.2] 
 0000 ERRORS [<P$SQT >FTN-REV19.2] 
 0000 ERRORS [<P$SRO >FTN-REV19.2] 
 0000 ERRORS [<P$SROS>FTN-REV19.2] 
 0000 ERRORS [<P$STO >FTN-REV19.2] 
 0000 ERRORS [<P$STP >FTN-REV19.2] 
 0000 ERRORS [<P$STR >FTN-REV19.2] 
 0000 ERRORS [<P$STRA>FTN-REV19.2] 
 0000 ERRORS [<P$STRS>FTN-REV19.2] 
 0000 ERRORS [<P$TRC >FTN-REV19.2] 
 0000 ERRORS [<P$UJC >FTN-REV19.2] 
 0000 ERRORS [<P$UNI >FTN-REV19.2] 
 0000 ERRORS [<P$WLN >FTN-REV19.2] 
 0000 ERRORS [<P$WRC >FTN-REV19.2] 
 0000 ERRORS [<P$WRI >FTN-REV19.2] 
 0000 ERRORS [<P$WRR >FTN-REV19.2] 
 0000 ERRORS [<P$WRS >FTN-REV19.2] 
 0000 ERRORS [<P$BASE>FTN-REV19.2] 
 0000 ERRORS [<P$COMP>FTN-REV19.2] 
 0000 ERRORS [<P$DBUG>FTN-REV19.2] 
 0000 ERRORS [<P$INIT>FTN-REV19.2] 
 0000 ERRORS [<P$MKPN>FTN-REV19.2] 
 [ 4:ex]    pmac p4clib.s -b b2
 [ 5:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 6:ex] args
 [ 6:ex] pmac "p4clib.s" "-b" "b2"
[ 5:ex]    x "pma -i *>p4clib.s -b *>b2 -l no"
 0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
[ 4:ex]    >> cto | x
[ 5:ex]    declare _search_rule = "^int,=bin=/&,^var"
[ 6:ex] nargs
[ 5:ex]    if 0
[ 5:ex]       slice -i % -x %-EOF$
 [ 5:ex]    fi
[EDB rev 19.0]
 ENTER,    brief
ENTER,    rfl
ENTER,    copy all
 
 .BOTTOM.
 ENTER,    newinf b2
ENTER,    copy all
 
 .BOTTOM.
 ENTER,    sfl
ENTER,    et
 ENTER,    quit
 [ 4:ex]    >> cto | x
[ 5:ex]    declare _search_rule = "^int,=bin=/&,^var"
[ 6:ex] nargs
[ 5:ex]    if 0
[ 5:ex]       slice -i % -x %-EOF$
 [ 5:ex]    fi
[LIBEDB rev 19.0]

 SOURCE FILE, DESTINATION FILE, PARAMETER
 WHERE: PARAMETER = 0 - DESTINATION FILE SAM
       PARAMETER = 2000 - DESTINATION FILE DAM
 $    _p4clib p4clib 0
[ 3:ex] cd =src=/lcl/lib/shortlb.u
 [ 3:ex]  build
 [ 4:ex]    declare _search_rule = "^int,^var,=bin=/&"
[ 4:ex]    pmac shortlb.s
[ 5:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 6:ex] args
 [ 6:ex] pmac "shortlb.s"
 [ 5:ex]    x "pma -i *>shortlb.s -b *>shortlb.b -l no"
 0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
0000 ERRORS (PMA Rev. 19.2)
[ 4:ex]    >> cto | x
[ 5:ex]    declare _search_rule = "^int,=bin=/&,^var"
[ 6:ex] nargs
[ 5:ex]    if 0
[ 5:ex]       slice -i % -x %-EOF$
 [ 5:ex]    fi
[EDB rev 19.0]
 ENTER,    BRIEF
ENTER,    RFL
ENTER,    COPY ALL
 
 .BOTTOM.
 ENTER,    SFL
ENTER,    ET
 ENTER,    QUIT
 [ 2:ex]    =src=/ba$=pid=> change build$ install >=src=/bb$=pid=
 [ 2:ex]    =src=/bb$=pid=
[ 3:ex] cd =src=/lib/edt
 [ 3:ex]  install
 [ 4:ex]    declare _search_rule = "^int,^var,=bin=/&"
[ 4:ex]    cp vedtlb =newlib=/vedtlb
 [ 4:ex]    chat =newlib=/vedtlb
[ 3:ex] cd =src=/lib/swt
 [ 3:ex]  install
 [ 4:ex]    declare _search_rule = "^int,^var,&,=bin=/&"
[ 4:ex]    cp nvswtlb =newlib=
 [ 4:ex]    chat =newlib=/nvswtlb
 [ 4:ex]    install_shared
[ 5:ex]    declare _search_rule = "^int,^var,=bin=/&"
[ 5:ex]    cp vswtlb =newlib=
[ 6:ex] cat segment
[ 5:ex]    cp sw2035 =newsystem=
 [ 5:ex]    cp inst =newsystem=/sw4000
[ 5:ex]    chat =newlib=/vswtlb
[ 3:ex] cd =src=/lib/c$main
[ 3:ex]  install
 [ 4:ex]    declare _search_rule = "^int,^var,=bin=/&"
[ 4:ex]    cp c$main.b =newlib=/c$main
 [ 4:ex]    chat =newlib=/c$main
[ 4:ex]    cp nc$main.b =newlib=/nc$main
 [ 4:ex]    chat =newlib=/nc$main
 [ 3:ex] cd =src=/lib/vcg
 [ 3:ex]  install
 [ 4:ex]    declare _search_rule = "^int,^var,=bin=/&"
[ 4:ex]    cp vcglib =newlib=/vcglib
 [ 4:ex]    chat =newlib=/vcglib
[ 3:ex] cd =src=/lib/vcg_main
[ 3:ex]  install
 [ 4:ex]    declare _search_rule = "^int,^var,=bin=/&"
[ 4:ex]    cp vcg_main.b =newlib=/vcg_main
 [ 4:ex]    chat =newlib=/vcg_main
[ 3:ex] cd =src=/lib/math
[ 3:ex]  install
 [ 4:ex]    declare _search_rule = "^int,^var,=bin=/&"
[ 4:ex]    cp vswtmath =newlib=/vswtmath
 [ 4:ex]    chat =newlib=/vswtmath
[ 3:ex] cd =src=/lib/sh
[ 3:ex]  install
 [ 4:ex]    declare _search_rule = "^int,=bin=/&"
 [ 5:ex] cat segment
[ 5:ex] cat segment
[ 4:ex]    cp sh2030 =newsystem=/sh2030
[ 4:ex]    cp vshlib =newlib=/vshlib
 [ 4:ex]    cp sh =newsystem=/sh4000
[ 4:ex]    cp sh =newbin=/sh
 [ 3:ex] cd =src=/lib/cio
 [ 3:ex]  install
 [ 4:ex]    declare _search_rule = '^int,^var,=bin=/&'
[ 4:ex]    cp ciolib =newlib=
[ 4:ex]    chat =newlib=/ciolib
[ 4:ex]    cp nciolib =newlib=
 [ 4:ex]    chat =newlib=/nciolib
 [ 3:ex] cd =src=/lcl/lib/lslib.u
 [ 3:ex]  install
 [ 4:ex]    declare _search_rule = "^int,^var,=lbin=/&,=bin=/&"
 [ 4:ex]    cp vlslb =newlib=/vlslb
 [ 4:ex]    chat =newlib=/vlslb
 [ 3:ex] cd =src=/lcl/lib/p4clib.u
[ 3:ex]  install
 [ 4:ex]    declare _search_rule = "^int,=bin=/&"
 [ 4:ex]    cp p4clib =newlib=/p4clib
 [ 4:ex]    chat =newlib=/p4clib
[ 3:ex] cd =src=/lcl/lib/shortlb.u
 [ 3:ex]  install
 [ 4:ex]    declare _search_rule = "^int,^var,=bin=/&"
[ 4:ex]    chat shortlb
[ 4:ex]    cp shortlb =newlib=/shortlb
 [ 4:ex]    chat shortlb.r.i
[ 4:ex]    cp shortlb.r.i =incl=/shortlb.r.i
 [ 2:ex]    del =src=/ba$=pid= =src=/bb$=pid=
 [ 2:ex]    =src=/bc$=pid=
[ 3:ex] cd =src=/std.sh
[ 3:ex]  build
 [ 3:ex] cd =src=/std.r
 [ 3:ex]  build
 [ 4:ex]    declare _search_rule = "^int,^var,=bin=/&"
[ 5:ex] nargs
[ 4:ex]    if 0
[ 4:ex]       files .r$ | change "%{?*}.r$" "rp -a @1.r; fc @1.f; ld @1.b" | sh
[ 5:ex]    declare _search_rule = "^int,^var,=bin=/&"
[ 6:ex] args 2
 [ 6:ex] arg 1 | quote
[ 5:ex]    lf -c  | find ".r$"
 [ 5:ex] rp -a alarm.r
[ 5:ex]  fc alarm.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "alarm.f"
 [ 6:ex]    x "ftn -i *>alarm.f -b *>alarm.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<USAGE >FTN-REV19.2] 
 0000 ERRORS [<TIMEO0>FTN-REV19.2] 
 0000 ERRORS [<CLOCK >FTN-REV19.2] 
 0000 ERRORS [<EQUIS >FTN-REV19.2] 
 [ 5:ex]  ld alarm.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "alarm.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo alarm.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a ar.r
 [ 5:ex]  fc ar.f
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "ar.f"
[ 6:ex]    x "ftn -i *>ar.f -b *>ar.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<ACOPY >FTN-REV19.2] 
 0000 ERRORS [<ADDFIL>FTN-REV19.2] 
 0000 ERRORS [<AMOVE >FTN-REV19.2] 
 0000 ERRORS [<APPEND>FTN-REV19.2] 
 0000 ERRORS [<DELETE>FTN-REV19.2] 
 0000 ERRORS [<EXTRA0>FTN-REV19.2] 
 0000 ERRORS [<FILARG>FTN-REV19.2] 
 0000 ERRORS [<FSIZE >FTN-REV19.2] 
 0000 ERRORS [<FSKIP >FTN-REV19.2] 
 0000 ERRORS [<GETFNS>FTN-REV19.2] 
 0000 ERRORS [<GETHDR>FTN-REV19.2] 
 0000 ERRORS [<GETWRD>FTN-REV19.2] 
 0000 ERRORS [<GETDA0>FTN-REV19.2] 
 0000 ERRORS [<MAKHDR>FTN-REV19.2] 
 0000 ERRORS [<NOTFO0>FTN-REV19.2] 
 0000 ERRORS [<REPLA0>FTN-REV19.2] 
 0000 ERRORS [<TABLE >FTN-REV19.2] 
 0000 ERRORS [<TPRINT>FTN-REV19.2] 
 0000 ERRORS [<UPDATE>FTN-REV19.2] 
 0000 ERRORS [<CONVE0>FTN-REV19.2] 
 [ 5:ex]  ld ar.b
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "ar.b" | x
 [SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo ar.b 0 4000 4000
$ s/lo 'newlib>vswtlb' 0 4000 4000
 LOAD COMPLETE
$ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a basename.r
 [ 5:ex]  fc basename.f
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "basename.f"
[ 6:ex]    x "ftn -i *>basename.f -b *>basename.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 [ 5:ex]  ld basename.b
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "basename.b" | x
 [SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo basename.b 0 4000 4000
$ s/lo 'newlib>vswtlb' 0 4000 4000
 LOAD COMPLETE
$ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a cat.r
[ 5:ex]  fc cat.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "cat.f"
 [ 6:ex]    x "ftn -i *>cat.f -b *>cat.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 [ 5:ex]  ld cat.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "cat.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo cat.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 LOAD COMPLETE
$ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a change.r
 [ 5:ex]  fc change.f
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "change.f"
[ 6:ex]    x "ftn -i *>change.f -b *>change.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<GETPAT>FTN-REV19.2] 
 0000 ERRORS [<GETSUB>FTN-REV19.2] 
 0000 ERRORS [<ARGLIN>FTN-REV19.2] 
 [ 5:ex]  ld change.b
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "change.b" | x
 [SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo change.b 0 4000 4000
$ s/lo 'newlib>vswtlb' 0 4000 4000
 LOAD COMPLETE
$ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a chat.r
 [ 5:ex]  fc chat.f
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "chat.f"
[ 6:ex]    x "ftn -i *>chat.f -b *>chat.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<ERRMSG>FTN-REV19.2] 
 [ 5:ex]  ld chat.b
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "chat.b" | x
 [SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo chat.b 0 4000 4000
$ s/lo 'newlib>vswtlb' 0 4000 4000
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a clear.r
[ 5:ex]  fc clear.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "clear.f"
 [ 6:ex]    x "ftn -i *>clear.f -b *>clear.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 [ 5:ex]  ld clear.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "clear.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo clear.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 LOAD COMPLETE
$ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a clock.r
[ 5:ex]  fc clock.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "clock.f"
 [ 6:ex]    x "ftn -i *>clock.f -b *>clock.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 [ 5:ex]  ld clock.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "clock.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo clock.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a cmp.r
[ 5:ex]  fc cmp.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "cmp.f"
 [ 6:ex]    x "ftn -i *>cmp.f -b *>cmp.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 [ 5:ex]  ld cmp.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "cmp.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo cmp.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 LOAD COMPLETE
$ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a cn.r
 [ 5:ex]  fc cn.f
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "cn.f"
[ 6:ex]    x "ftn -i *>cn.f -b *>cn.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 [ 5:ex]  ld cn.b
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "cn.b" | x
 [SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo cn.b 0 4000 4000
$ s/lo 'newlib>vswtlb' 0 4000 4000
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a col.r
[ 5:ex]  fc col.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "col.f"
 [ 6:ex]    x "ftn -i *>col.f -b *>col.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<WIDTH >FTN-REV19.2] 
 [ 5:ex]  ld col.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "col.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo col.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a common.r
 [ 5:ex]  fc common.f
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "common.f"
[ 6:ex]    x "ftn -i *>common.f -b *>common.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<COMPA0>FTN-REV19.2] 
 0000 ERRORS [<GETPA0>FTN-REV19.2] 
 0000 ERRORS [<OUTPUT>FTN-REV19.2] 
 [ 5:ex]  ld common.b
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "common.b" | x
 [SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo common.b 0 4000 4000
$ s/lo 'newlib>vswtlb' 0 4000 4000
 LOAD COMPLETE
$ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a como.r
 [ 5:ex]  fc como.f
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "como.f"
[ 6:ex]    x "ftn -i *>como.f -b *>como.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 [ 5:ex]  ld como.b
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "como.b" | x
 [SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo como.b 0 4000 4000
$ s/lo 'newlib>vswtlb' 0 4000 4000
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a copy.r
 [ 5:ex]  fc copy.f
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "copy.f"
[ 6:ex]    x "ftn -i *>copy.f -b *>copy.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 [ 5:ex]  ld copy.b
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "copy.b" | x
 [SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo copy.b 0 4000 4000
$ s/lo 'newlib>vswtlb' 0 4000 4000
 LOAD COMPLETE
$ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a cp.r
 [ 5:ex]  fc cp.f
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "cp.f"
[ 6:ex]    x "ftn -i *>cp.f -b *>cp.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 [ 5:ex]  ld cp.b
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "cp.b" | x
 [SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo cp.b 0 4000 4000
$ s/lo 'newlib>vswtlb' 0 4000 4000
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a crypt.r
[ 5:ex]  fc crypt.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "crypt.f"
 [ 6:ex]    x "ftn -i *>crypt.f -b *>crypt.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<PRMPTQ>FTN-REV19.2] 
 [ 5:ex]  ld crypt.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "crypt.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo crypt.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a cset.r
 [ 5:ex]  fc cset.f
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "cset.f"
[ 6:ex]    x "ftn -i *>cset.f -b *>cset.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 [ 5:ex]  ld cset.b
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "cset.b" | x
 [SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo cset.b 0 4000 4000
$ s/lo 'newlib>vswtlb' 0 4000 4000
 LOAD COMPLETE
$ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a ctime.r
[ 5:ex]  fc ctime.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "ctime.f"
 [ 6:ex]    x "ftn -i *>ctime.f -b *>ctime.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 [ 5:ex]  ld ctime.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "ctime.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo ctime.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a define.r
 [ 5:ex]  fc define.f
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "define.f"
[ 6:ex]    x "ftn -i *>define.f -b *>define.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<ADDARG>FTN-REV19.2] 
 0000 ERRORS [<CLEAR0>FTN-REV19.2] 
 0000 ERRORS [<ENTER0>FTN-REV19.2] 
 0000 ERRORS [<EXPAND>FTN-REV19.2] 
 0000 ERRORS [<GETAR0>FTN-REV19.2] 
 0000 ERRORS [<GETPA0>FTN-REV19.2] 
 0000 ERRORS [<GETTO0>FTN-REV19.2] 
 0000 ERRORS [<INCLV0>FTN-REV19.2] 
 0000 ERRORS [<INITI0>FTN-REV19.2] 
 0000 ERRORS [<MOVEF0>FTN-REV19.2] 
 0000 ERRORS [<MOVET0>FTN-REV19.2] 
 0000 ERRORS [<READD0>FTN-REV19.2] 
 0000 ERRORS [<READL0>FTN-REV19.2] 
 0000 ERRORS [<REMOV0>FTN-REV19.2] 
 0000 ERRORS [<SAVEI0>FTN-REV19.2] 
 0000 ERRORS [<SKIP  >FTN-REV19.2] 
 0000 ERRORS [<SYNERR>FTN-REV19.2] 
 [ 5:ex]  ld define.b
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "define.b" | x
 [SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo define.b 0 4000 4000
$ s/lo 'newlib>vswtlb' 0 4000 4000
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 LOAD COMPLETE
$ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a del.r
[ 5:ex]  fc del.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "del.f"
 [ 6:ex]    x "ftn -i *>del.f -b *>del.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<VERIFY>FTN-REV19.2] 
 0000 ERRORS [<ERRMSG>FTN-REV19.2] 
 [ 5:ex]  ld del.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "del.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo del.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a detab.r
[ 5:ex]  fc detab.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "detab.f"
 [ 6:ex]    x "ftn -i *>detab.f -b *>detab.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<TABPOS>FTN-REV19.2] 
 0000 ERRORS [<SETTAB>FTN-REV19.2] 
 0000 ERRORS [<GETRC >FTN-REV19.2] 
 0000 ERRORS [<USAGE >FTN-REV19.2] 
 [ 5:ex]  ld detab.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "detab.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo detab.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a diff.r
 [ 5:ex]  fc diff.f
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "diff.f"
[ 6:ex]    x "ftn -i *>diff.f -b *>diff.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<ENTER >FTN-REV19.2] 
 0000 ERRORS [<GENLI0>FTN-REV19.2] 
 0000 ERRORS [<GENRE0>FTN-REV19.2] 
 0000 ERRORS [<GENSC0>FTN-REV19.2] 
 0000 ERRORS [<GROW  >FTN-REV19.2] 
 0000 ERRORS [<HASH  >FTN-REV19.2] 
 0000 ERRORS [<INITI0>FTN-REV19.2] 
 0000 ERRORS [<LABEL >FTN-REV19.2] 
 0000 ERRORS [<LOAD  >FTN-REV19.2] 
 0000 ERRORS [<PAIR  >FTN-REV19.2] 
 0000 ERRORS [<REPORT>FTN-REV19.2] 
 0000 ERRORS [<SIMPL0>FTN-REV19.2] 
 0000 ERRORS [<BINAR0>FTN-REV19.2] 
 0000 ERRORS [<USAGE >FTN-REV19.2] 
 [ 5:ex]  ld diff.b
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "diff.b" | x
 [SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo diff.b 0 4000 4000
$ s/lo 'newlib>vswtlb' 0 4000 4000
 LOAD COMPLETE
$ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a dnum.r
 [ 5:ex]  fc dnum.f
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "dnum.f"
[ 6:ex]    x "ftn -i *>dnum.f -b *>dnum.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<GENER0>FTN-REV19.2] 
 0000 ERRORS [<INTER0>FTN-REV19.2] 
 [ 5:ex]  ld dnum.b
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "dnum.b" | x
 [SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo dnum.b 0 4000 4000
$ s/lo 'newlib>vswtlb' 0 4000 4000
 LOAD COMPLETE
$ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a entab.r
[ 5:ex]  fc entab.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "entab.f"
 [ 6:ex]    x "ftn -i *>entab.f -b *>entab.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<TABPOS>FTN-REV19.2] 
 0000 ERRORS [<SETTAB>FTN-REV19.2] 
 0000 ERRORS [<USAGE >FTN-REV19.2] 
 [ 5:ex]  ld entab.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "entab.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo entab.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a error.r
[ 5:ex]  fc error.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "error.f"
 [ 6:ex]    x "ftn -i *>error.f -b *>error.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 [ 5:ex]  ld error.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "error.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo error.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 LOAD COMPLETE
$ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a fdmp.r
 [ 5:ex]  fc fdmp.f
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "fdmp.f"
[ 6:ex]    x "ftn -i *>fdmp.f -b *>fdmp.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<GETOP0>FTN-REV19.2] 
 0000 ERRORS [<PUT   >FTN-REV19.2] 
 [ 5:ex]  ld fdmp.b
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "fdmp.b" | x
 [SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo fdmp.b 0 4000 4000
$ s/lo 'newlib>vswtlb' 0 4000 4000
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a ffind.r
[ 5:ex]  fc ffind.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "ffind.f"
 [ 6:ex]    x "ftn -i *>ffind.f -b *>ffind.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 [ 5:ex]  ld ffind.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "ffind.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo ffind.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 LOAD COMPLETE
$ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a field.r
[ 5:ex]  fc field.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "field.f"
 [ 6:ex]    x "ftn -i *>field.f -b *>field.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<GETFLD>FTN-REV19.2] 
 0000 ERRORS [<MOVFLD>FTN-REV19.2] 
 0000 ERRORS [<GETOPT>FTN-REV19.2] 
 [ 5:ex]  ld field.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "field.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo field.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 LOAD COMPLETE
$ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a file.r
 [ 5:ex]  fc file.f
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "file.f"
[ 6:ex]    x "ftn -i *>file.f -b *>file.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<USAGE >FTN-REV19.2] 
 [ 5:ex]  ld file.b
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "file.b" | x
 [SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo file.b 0 4000 4000
$ s/lo 'newlib>vswtlb' 0 4000 4000
 LOAD COMPLETE
$ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a find.r
 [ 5:ex]  fc find.f
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "find.f"
[ 6:ex]    x "ftn -i *>find.f -b *>find.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<GETPAT>FTN-REV19.2] 
 [ 5:ex]  ld find.b
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "find.b" | x
 [SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo find.b 0 4000 4000
$ s/lo 'newlib>vswtlb' 0 4000 4000
 LOAD COMPLETE
$ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a fsize.r
[ 5:ex]  fc fsize.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "fsize.f"
 [ 6:ex]    x "ftn -i *>fsize.f -b *>fsize.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<FSIZE$>FTN-REV19.2] 
 0000 ERRORS [<SZFIL$>FTN-REV19.2] 
 0000 ERRORS [<SZSEG$>FTN-REV19.2] 
 0000 ERRORS [<GTRCSZ>FTN-REV19.2] 
 [ 5:ex]  ld fsize.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "fsize.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo fsize.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a group.r
[ 5:ex]  fc group.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "group.f"
 [ 6:ex]    x "ftn -i *>group.f -b *>group.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 [ 5:ex]  ld group.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "group.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo group.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a gtod.r
 [ 5:ex]  fc gtod.f
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "gtod.f"
[ 6:ex]    x "ftn -i *>gtod.f -b *>gtod.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 [ 5:ex]  ld gtod.b
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "gtod.b" | x
 [SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo gtod.b 0 4000 4000
$ s/lo 'newlib>vswtlb' 0 4000 4000
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a guide.r
[ 5:ex]  fc guide.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "guide.f"
 [ 6:ex]    x "ftn -i *>guide.f -b *>guide.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<LOCATE>FTN-REV19.2] 
 0000 ERRORS [<SUBST0>FTN-REV19.2] 
 0000 ERRORS [<DISPL0>FTN-REV19.2] 
 0000 ERRORS [<DISPM0>FTN-REV19.2] 
 [ 5:ex]  ld guide.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "guide.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo guide.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 LOAD COMPLETE
$ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a hd.r
 [ 5:ex]  fc hd.f
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "hd.f"
[ 6:ex]    x "ftn -i *>hd.f -b *>hd.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<BITCO0>FTN-REV19.2] 
 0000 ERRORS [<OPENR0>FTN-REV19.2] 
 0000 ERRORS [<READR0>FTN-REV19.2] 
 [ 5:ex]  ld hd.b
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "hd.b" | x
 [SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo hd.b 0 4000 4000
$ s/lo 'newlib>vswtlb' 0 4000 4000
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a help.r
 [ 5:ex]  fc help.f
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "help.f"
[ 6:ex]    x "ftn -i *>help.f -b *>help.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<LOOKUP>FTN-REV19.2] 
 0000 ERRORS [<LOCAU0>FTN-REV19.2] 
 0000 ERRORS [<LOCAV0>FTN-REV19.2] 
 0000 ERRORS [<LOCAW0>FTN-REV19.2] 
 0000 ERRORS [<LOCAT0>FTN-REV19.2] 
 0000 ERRORS [<SUBST0>FTN-REV19.2] 
 0000 ERRORS [<DISPL0>FTN-REV19.2] 
 0000 ERRORS [<DISPM0>FTN-REV19.2] 
 [ 5:ex]  ld help.b
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "help.b" | x
 [SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo help.b 0 4000 4000
$ s/lo 'newlib>vswtlb' 0 4000 4000
 LOAD COMPLETE
$ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a include.r
[ 5:ex]  fc include.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "include.f"
 [ 6:ex]    x "ftn -i *>include.f -b *>include.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 [ 5:ex]  ld include.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "include.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo include.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 LOAD COMPLETE
$ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a iota.r
 [ 5:ex]  fc iota.f
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "iota.f"
[ 6:ex]    x "ftn -i *>iota.f -b *>iota.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 [ 5:ex]  ld iota.b
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "iota.b" | x
 [SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo iota.b 0 4000 4000
$ s/lo 'newlib>vswtlb' 0 4000 4000
 LOAD COMPLETE
$ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a isph.r
 [ 5:ex]  fc isph.f
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "isph.f"
[ 6:ex]    x "ftn -i *>isph.f -b *>isph.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 [ 5:ex]  ld isph.b
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "isph.b" | x
 [SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo isph.b 0 4000 4000
$ s/lo 'newlib>vswtlb' 0 4000 4000
 LOAD COMPLETE
$ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a join.r
 [ 5:ex]  fc join.f
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "join.f"
[ 6:ex]    x "ftn -i *>join.f -b *>join.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 [ 5:ex]  ld join.b
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "join.b" | x
 [SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo join.b 0 4000 4000
$ s/lo 'newlib>vswtlb' 0 4000 4000
 LOAD COMPLETE
$ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a kwic.r
 [ 5:ex]  fc kwic.f
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "kwic.f"
[ 6:ex]    x "ftn -i *>kwic.f -b *>kwic.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<PUTROT>FTN-REV19.2] 
 0000 ERRORS [<ROTATE>FTN-REV19.2] 
 0000 ERRORS [<DISCA0>FTN-REV19.2] 
 0000 ERRORS [<SEARCH>FTN-REV19.2] 
 0000 ERRORS [<COMPA0>FTN-REV19.2] 
 0000 ERRORS [<READD0>FTN-REV19.2] 
 0000 ERRORS [<GETLI0>FTN-REV19.2] 
 [ 5:ex]  ld kwic.b
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "kwic.b" | x
 [SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo kwic.b 0 4000 4000
$ s/lo 'newlib>vswtlb' 0 4000 4000
 LOAD COMPLETE
$ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a lacl.r
 [ 5:ex]  fc lacl.f
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "lacl.f"
[ 6:ex]    x "ftn -i *>lacl.f -b *>lacl.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 [ 5:ex]  ld lacl.b
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "lacl.b" | x
 [SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo lacl.b 0 4000 4000
$ s/lo 'newlib>vswtlb' 0 4000 4000
 LOAD COMPLETE
$ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a lam.r
[ 5:ex]  fc lam.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "lam.f"
 [ 6:ex]    x "ftn -i *>lam.f -b *>lam.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 [ 5:ex]  ld lam.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "lam.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo lam.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 LOAD COMPLETE
$ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a length.r
 [ 5:ex]  fc length.f
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "length.f"
[ 6:ex]    x "ftn -i *>length.f -b *>length.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 [ 5:ex]  ld length.b
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "length.b" | x
 [SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo length.b 0 4000 4000
$ s/lo 'newlib>vswtlb' 0 4000 4000
 LOAD COMPLETE
$ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a lf.r
 [ 5:ex]  fc lf.f
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "lf.f"
[ 6:ex]    x "ftn -i *>lf.f -b *>lf.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<COMPA0>FTN-REV19.2] 
 0000 ERRORS [<FSIZE >FTN-REV19.2] 
 0000 ERRORS [<PRINU0>FTN-REV19.2] 
 0000 ERRORS [<PUTEN0>FTN-REV19.2] 
 [ 5:ex]  ld lf.b
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "lf.b" | x
 [SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo lf.b 0 4000 4000
$ s/lo 'newlib>vswtlb' 0 4000 4000
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a log.r
[ 5:ex]  fc log.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "log.f"
 [ 6:ex]    x "ftn -i *>log.f -b *>log.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 [ 5:ex]  ld log.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "log.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo log.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 LOAD COMPLETE
$ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a lps.r
[ 5:ex]  fc lps.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "lps.f"
 [ 6:ex]    x "ftn -i *>lps.f -b *>lps.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<READQ0>FTN-REV19.2] 
 0000 ERRORS [<Q$OFFC>FTN-REV19.2] 
 [ 5:ex]  ld lps.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "lps.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo lps.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a macro.r
[ 5:ex]  fc macro.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "macro.f"
 [ 6:ex]    x "ftn -i *>macro.f -b *>macro.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<GETTOK>FTN-REV19.2] 
 0000 ERRORS [<LOOKUP>FTN-REV19.2] 
 0000 ERRORS [<INSTAL>FTN-REV19.2] 
 0000 ERRORS [<PUSH  >FTN-REV19.2] 
 0000 ERRORS [<PUTTOK>FTN-REV19.2] 
 0000 ERRORS [<PUTCHR>FTN-REV19.2] 
 0000 ERRORS [<EVAL  >FTN-REV19.2] 
 0000 ERRORS [<DODEF >FTN-REV19.2] 
 0000 ERRORS [<DOINCR>FTN-REV19.2] 
 0000 ERRORS [<PBNUM >FTN-REV19.2] 
 0000 ERRORS [<DOSUB >FTN-REV19.2] 
 0000 ERRORS [<DOIF  >FTN-REV19.2] 
 0000 ERRORS [<NGETC >FTN-REV19.2] 
 0000 ERRORS [<PBSTR >FTN-REV19.2] 
 0000 ERRORS [<PUTBAK>FTN-REV19.2] 
 0000 ERRORS [<DOINC0>FTN-REV19.2] 
 0000 ERRORS [<DODIV0>FTN-REV19.2] 
 0000 ERRORS [<DODNL >FTN-REV19.2] 
 0000 ERRORS [<UNINS0>FTN-REV19.2] 
 0000 ERRORS [<DOUND0>FTN-REV19.2] 
 [ 5:ex]  ld macro.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "macro.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo macro.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a mail.r
 [ 5:ex]  fc mail.f
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "mail.f"
[ 6:ex]    x "ftn -i *>mail.f -b *>mail.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<RECEI0>FTN-REV19.2] 
 0000 ERRORS [<SENDM0>FTN-REV19.2] 
 [ 5:ex]  ld mail.b
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "mail.b" | x
 [SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo mail.b 0 4000 4000
$ s/lo 'newlib>vswtlb' 0 4000 4000
 LOAD COMPLETE
$ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a mkdir.r
[ 5:ex]  fc mkdir.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "mkdir.f"
 [ 6:ex]    x "ftn -i *>mkdir.f -b *>mkdir.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 [ 5:ex]  ld mkdir.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "mkdir.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo mkdir.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 LOAD COMPLETE
$ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a mktree.r
 [ 5:ex]  fc mktree.f
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "mktree.f"
[ 6:ex]    x "ftn -i *>mktree.f -b *>mktree.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 [ 5:ex]  ld mktree.b
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "mktree.b" | x
 [SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo mktree.b 0 4000 4000
$ s/lo 'newlib>vswtlb' 0 4000 4000
 LOAD COMPLETE
$ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a mt.r
 [ 5:ex]  fc mt.f
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "mt.f"
[ 6:ex]    x "ftn -i *>mt.f -b *>mt.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<ASCII0>FTN-REV19.2] 
 0000 ERRORS [<BLKSP0>FTN-REV19.2] 
 0000 ERRORS [<CHECK0>FTN-REV19.2] 
 0000 ERRORS [<POSSP0>FTN-REV19.2] 
 0000 ERRORS [<CHECL0>FTN-REV19.2] 
 0000 ERRORS [<CONVS0>FTN-REV19.2] 
 0000 ERRORS [<EBCDI0>FTN-REV19.2] 
 0000 ERRORS [<GETBUF>FTN-REV19.2] 
 0000 ERRORS [<MTSCH0>FTN-REV19.2] 
 0000 ERRORS [<MTCHE0>FTN-REV19.2] 
 0000 ERRORS [<MTIO  >FTN-REV19.2] 
 0000 ERRORS [<MTREAD>FTN-REV19.2] 
 0000 ERRORS [<MTREW0>FTN-REV19.2] 
 0000 ERRORS [<MTSKJ0>FTN-REV19.2] 
 0000 ERRORS [<MTSKI0>FTN-REV19.2] 
 0000 ERRORS [<MTSTAT>FTN-REV19.2] 
 0000 ERRORS [<MTWAIT>FTN-REV19.2] 
 0000 ERRORS [<MTWRI0>FTN-REV19.2] 
 0000 ERRORS [<MTFMA0>FTN-REV19.2] 
 0000 ERRORS [<NEWRE0>FTN-REV19.2] 
 0000 ERRORS [<ONEOFR>FTN-REV19.2] 
 0000 ERRORS [<ONEOFW>FTN-REV19.2] 
 0000 ERRORS [<ONEOVR>FTN-REV19.2] 
 0000 ERRORS [<ONEOVW>FTN-REV19.2] 
 0000 ERRORS [<POSIT0>FTN-REV19.2] 
 0000 ERRORS [<PUTBUF>FTN-REV19.2] 
 0000 ERRORS [<READW0>FTN-REV19.2] 
 0000 ERRORS [<READLN>FTN-REV19.2] 
 0000 ERRORS [<UNITS0>FTN-REV19.2] 
 0000 ERRORS [<WRITE0>FTN-REV19.2] 
 [ 5:ex]  ld mt.b
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "mt.b" | x
 [SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo mt.b 0 4000 4000
$ s/lo 'newlib>vswtlb' 0 4000 4000
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a news.r
 [ 5:ex]  fc news.f
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "news.f"
[ 6:ex]    x "ftn -i *>news.f -b *>news.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 [ 5:ex]  ld news.b
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "news.b" | x
 [SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo news.b 0 4000 4000
$ s/lo 'newlib>vswtlb' 0 4000 4000
 LOAD COMPLETE
$ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a os.r
 [ 5:ex]  fc os.f
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "os.f"
[ 6:ex]    x "ftn -i *>os.f -b *>os.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 [ 5:ex]  ld os.b
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "os.b" | x
 [SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo os.b 0 4000 4000
$ s/lo 'newlib>vswtlb' 0 4000 4000
 LOAD COMPLETE
$ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a pause.r
[ 5:ex]  fc pause.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "pause.f"
 [ 6:ex]    x "ftn -i *>pause.f -b *>pause.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<USAGE >FTN-REV19.2] 
 0000 ERRORS [<TIMEO0>FTN-REV19.2] 
 0000 ERRORS [<EQUIS >FTN-REV19.2] 
 [ 5:ex]  ld pause.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "pause.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo pause.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a pg.r
 [ 5:ex]  fc pg.f
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "pg.f"
[ 6:ex]    x "ftn -i *>pg.f -b *>pg.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 [ 5:ex]  ld pg.b
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "pg.b" | x
 [SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo pg.b 0 4000 4000
$ s/lo 'newlib>vswtlb' 0 4000 4000
 LOAD COMPLETE
$ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a ph.r
 [ 5:ex]  fc ph.f
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "ph.f"
[ 6:ex]    x "ftn -i *>ph.f -b *>ph.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 [ 5:ex]  ld ph.b
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "ph.b" | x
 [SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo ph.b 0 4000 4000
$ s/lo 'newlib>vswtlb' 0 4000 4000
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a phist.r
[ 5:ex]  fc phist.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "phist.f"
 [ 6:ex]    x "ftn -i *>phist.f -b *>phist.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<READB0>FTN-REV19.2] 
 0000 ERRORS [<SKIPE0>FTN-REV19.2] 
 0000 ERRORS [<PRECE0>FTN-REV19.2] 
 [ 5:ex]  ld phist.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "phist.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo phist.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 LOAD COMPLETE
$ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a print.r
[ 5:ex]  fc print.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "print.f"
 [ 6:ex]    x "ftn -i *>print.f -b *>print.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<FPRINT>FTN-REV19.2] 
 0000 ERRORS [<SKIP  >FTN-REV19.2] 
 0000 ERRORS [<GETDA0>FTN-REV19.2] 
 0000 ERRORS [<GETTI0>FTN-REV19.2] 
 [ 5:ex]  ld print.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "print.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo print.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a profile.r
[ 5:ex]  fc profile.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "profile.f"
 [ 6:ex]    x "ftn -i *>profile.f -b *>profile.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<OPTARG>FTN-REV19.2] 
 [ 5:ex]  ld profile.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "profile.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo profile.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a publish.r
[ 5:ex]  fc publish.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "publish.f"
 [ 6:ex]    x "ftn -i *>publish.f -b *>publish.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<ARCHI0>FTN-REV19.2] 
 0000 ERRORS [<DELIV0>FTN-REV19.2] 
 0000 ERRORS [<INDEX0>FTN-REV19.2] 
 0000 ERRORS [<REFOR0>FTN-REV19.2] 
 0000 ERRORS [<ALLBL0>FTN-REV19.2] 
 [ 5:ex]  ld publish.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "publish.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo publish.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 LOAD COMPLETE
$ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a pword.r
[ 5:ex]  fc pword.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "pword.f"
 [ 6:ex]    x "ftn -i *>pword.f -b *>pword.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 [ 5:ex]  ld pword.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "pword.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo pword.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a quota.r
[ 5:ex]  fc quota.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "quota.f"
 [ 6:ex]    x "ftn -i *>quota.f -b *>quota.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 [ 5:ex]  ld quota.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "quota.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo quota.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 LOAD COMPLETE
$ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a radix.r
[ 5:ex]  fc radix.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "radix.f"
 [ 6:ex]    x "ftn -i *>radix.f -b *>radix.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 [ 5:ex]  ld radix.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "radix.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo radix.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 LOAD COMPLETE
$ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a rdatt.r
[ 5:ex]  fc rdatt.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "rdatt.f"
 [ 6:ex]    x "ftn -i *>rdatt.f -b *>rdatt.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<LOADRD>FTN-REV19.2] 
 0000 ERRORS [<SAVERD>FTN-REV19.2] 
 0000 ERRORS [<PRINT0>FTN-REV19.2] 
 0000 ERRORS [<ADDFI0>FTN-REV19.2] 
 0000 ERRORS [<FINDF0>FTN-REV19.2] 
 0000 ERRORS [<COMPA0>FTN-REV19.2] 
 0000 ERRORS [<COMPB0>FTN-REV19.2] 
 0000 ERRORS [<COMPC0>FTN-REV19.2] 
 0000 ERRORS [<COMPD0>FTN-REV19.2] 
 0000 ERRORS [<PRINU0>FTN-REV19.2] 
 0000 ERRORS [<PRINV0>FTN-REV19.2] 
 0000 ERRORS [<PRINW0>FTN-REV19.2] 
 0000 ERRORS [<GETROW>FTN-REV19.2] 
 0000 ERRORS [<PUTROW>FTN-REV19.2] 
 0000 ERRORS [<GETDA0>FTN-REV19.2] 
 0000 ERRORS [<PUTDA0>FTN-REV19.2] 
 0000 ERRORS [<COMPE0>FTN-REV19.2] 
 [ 5:ex]  ld rdatt.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "rdatt.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo rdatt.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a rdavg.r
[ 5:ex]  fc rdavg.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "rdavg.f"
 [ 6:ex]    x "ftn -i *>rdavg.f -b *>rdavg.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<PARSE >FTN-REV19.2] 
 0000 ERRORS [<EXPR  >FTN-REV19.2] 
 0000 ERRORS [<TERM  >FTN-REV19.2] 
 0000 ERRORS [<FACTOR>FTN-REV19.2] 
 0000 ERRORS [<PRIMA0>FTN-REV19.2] 
 0000 ERRORS [<FIELD >FTN-REV19.2] 
 0000 ERRORS [<GETQU0>FTN-REV19.2] 
 0000 ERRORS [<FINDQ0>FTN-REV19.2] 
 0000 ERRORS [<CONVE0>FTN-REV19.2] 
 0000 ERRORS [<GETSYM>FTN-REV19.2] 
 0000 ERRORS [<PUSH  >FTN-REV19.2] 
 0000 ERRORS [<PSYNER>FTN-REV19.2] 
 0000 ERRORS [<EVAL  >FTN-REV19.2] 
 0000 ERRORS [<EVALR0>FTN-REV19.2] 
 0000 ERRORS [<LOADRD>FTN-REV19.2] 
 0000 ERRORS [<SAVERD>FTN-REV19.2] 
 0000 ERRORS [<PRINT0>FTN-REV19.2] 
 0000 ERRORS [<ADDFI0>FTN-REV19.2] 
 0000 ERRORS [<FINDF0>FTN-REV19.2] 
 0000 ERRORS [<COMPA0>FTN-REV19.2] 
 0000 ERRORS [<COMPB0>FTN-REV19.2] 
 0000 ERRORS [<COMPC0>FTN-REV19.2] 
 0000 ERRORS [<COMPD0>FTN-REV19.2] 
 0000 ERRORS [<PRINU0>FTN-REV19.2] 
 0000 ERRORS [<PRINV0>FTN-REV19.2] 
 0000 ERRORS [<PRINW0>FTN-REV19.2] 
 0000 ERRORS [<GETROW>FTN-REV19.2] 
 0000 ERRORS [<PUTROW>FTN-REV19.2] 
 0000 ERRORS [<GETDA0>FTN-REV19.2] 
 0000 ERRORS [<PUTDA0>FTN-REV19.2] 
 0000 ERRORS [<COMPE0>FTN-REV19.2] 
 [ 5:ex]  ld rdavg.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "rdavg.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo rdavg.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a rdcat.r
[ 5:ex]  fc rdcat.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "rdcat.f"
 [ 6:ex]    x "ftn -i *>rdcat.f -b *>rdcat.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<LOADRD>FTN-REV19.2] 
 0000 ERRORS [<SAVERD>FTN-REV19.2] 
 0000 ERRORS [<PRINV0>FTN-REV19.2] 
 0000 ERRORS [<ADDFI0>FTN-REV19.2] 
 0000 ERRORS [<FINDF0>FTN-REV19.2] 
 0000 ERRORS [<COMPA0>FTN-REV19.2] 
 0000 ERRORS [<COMPB0>FTN-REV19.2] 
 0000 ERRORS [<COMPC0>FTN-REV19.2] 
 0000 ERRORS [<COMPD0>FTN-REV19.2] 
 0000 ERRORS [<PRINT0>FTN-REV19.2] 
 0000 ERRORS [<PRINU0>FTN-REV19.2] 
 0000 ERRORS [<PRINW0>FTN-REV19.2] 
 0000 ERRORS [<GETROW>FTN-REV19.2] 
 0000 ERRORS [<PUTROW>FTN-REV19.2] 
 0000 ERRORS [<GETDA0>FTN-REV19.2] 
 0000 ERRORS [<PUTDA0>FTN-REV19.2] 
 0000 ERRORS [<COMPE0>FTN-REV19.2] 
 [ 5:ex]  ld rdcat.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "rdcat.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo rdcat.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a rdcount.r
[ 5:ex]  fc rdcount.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "rdcount.f"
 [ 6:ex]    x "ftn -i *>rdcount.f -b *>rdcount.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<PARSE >FTN-REV19.2] 
 0000 ERRORS [<EXPR  >FTN-REV19.2] 
 0000 ERRORS [<TERM  >FTN-REV19.2] 
 0000 ERRORS [<FACTOR>FTN-REV19.2] 
 0000 ERRORS [<PRIMA0>FTN-REV19.2] 
 0000 ERRORS [<FIELD >FTN-REV19.2] 
 0000 ERRORS [<GETQU0>FTN-REV19.2] 
 0000 ERRORS [<FINDQ0>FTN-REV19.2] 
 0000 ERRORS [<CONVE0>FTN-REV19.2] 
 0000 ERRORS [<GETSYM>FTN-REV19.2] 
 0000 ERRORS [<PUSH  >FTN-REV19.2] 
 0000 ERRORS [<PSYNER>FTN-REV19.2] 
 0000 ERRORS [<EVAL  >FTN-REV19.2] 
 0000 ERRORS [<EVALR0>FTN-REV19.2] 
 0000 ERRORS [<LOADRD>FTN-REV19.2] 
 0000 ERRORS [<SAVERD>FTN-REV19.2] 
 0000 ERRORS [<PRINT0>FTN-REV19.2] 
 0000 ERRORS [<ADDFI0>FTN-REV19.2] 
 0000 ERRORS [<FINDF0>FTN-REV19.2] 
 0000 ERRORS [<COMPA0>FTN-REV19.2] 
 0000 ERRORS [<COMPB0>FTN-REV19.2] 
 0000 ERRORS [<COMPC0>FTN-REV19.2] 
 0000 ERRORS [<COMPD0>FTN-REV19.2] 
 0000 ERRORS [<PRINU0>FTN-REV19.2] 
 0000 ERRORS [<PRINV0>FTN-REV19.2] 
 0000 ERRORS [<PRINW0>FTN-REV19.2] 
 0000 ERRORS [<GETROW>FTN-REV19.2] 
 0000 ERRORS [<PUTROW>FTN-REV19.2] 
 0000 ERRORS [<GETDA0>FTN-REV19.2] 
 0000 ERRORS [<PUTDA0>FTN-REV19.2] 
 0000 ERRORS [<COMPE0>FTN-REV19.2] 
 [ 5:ex]  ld rdcount.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "rdcount.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo rdcount.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a rddiff.r
 [ 5:ex]  fc rddiff.f
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "rddiff.f"
[ 6:ex]    x "ftn -i *>rddiff.f -b *>rddiff.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<LOADRD>FTN-REV19.2] 
 0000 ERRORS [<SAVERD>FTN-REV19.2] 
 0000 ERRORS [<PRINV0>FTN-REV19.2] 
 0000 ERRORS [<ADDFI0>FTN-REV19.2] 
 0000 ERRORS [<FINDF0>FTN-REV19.2] 
 0000 ERRORS [<COMPA0>FTN-REV19.2] 
 0000 ERRORS [<COMPB0>FTN-REV19.2] 
 0000 ERRORS [<COMPC0>FTN-REV19.2] 
 0000 ERRORS [<COMPD0>FTN-REV19.2] 
 0000 ERRORS [<PRINT0>FTN-REV19.2] 
 0000 ERRORS [<PRINU0>FTN-REV19.2] 
 0000 ERRORS [<PRINW0>FTN-REV19.2] 
 0000 ERRORS [<GETROW>FTN-REV19.2] 
 0000 ERRORS [<PUTROW>FTN-REV19.2] 
 0000 ERRORS [<GETDA0>FTN-REV19.2] 
 0000 ERRORS [<PUTDA0>FTN-REV19.2] 
 0000 ERRORS [<COMPE0>FTN-REV19.2] 
 [ 5:ex]  ld rddiff.b
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "rddiff.b" | x
 [SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo rddiff.b 0 4000 4000
$ s/lo 'newlib>vswtlb' 0 4000 4000
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a rddiv.r
[ 5:ex]  fc rddiv.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "rddiv.f"
 [ 6:ex]    x "ftn -i *>rddiv.f -b *>rddiv.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<SORT  >FTN-REV19.2] 
 0000 ERRORS [<GNAME >FTN-REV19.2] 
 0000 ERRORS [<MAKFIL>FTN-REV19.2] 
 0000 ERRORS [<GOPEN >FTN-REV19.2] 
 0000 ERRORS [<GREMOV>FTN-REV19.2] 
 0000 ERRORS [<MERGE >FTN-REV19.2] 
 0000 ERRORS [<REHEAP>FTN-REV19.2] 
 0000 ERRORS [<GTEXT >FTN-REV19.2] 
 0000 ERRORS [<PTEXT >FTN-REV19.2] 
 0000 ERRORS [<COMPB0>FTN-REV19.2] 
 0000 ERRORS [<EXCHAN>FTN-REV19.2] 
 0000 ERRORS [<QUICK >FTN-REV19.2] 
 0000 ERRORS [<LOADRD>FTN-REV19.2] 
 0000 ERRORS [<SAVERD>FTN-REV19.2] 
 0000 ERRORS [<PRINV0>FTN-REV19.2] 
 0000 ERRORS [<ADDFI0>FTN-REV19.2] 
 0000 ERRORS [<FINDF0>FTN-REV19.2] 
 0000 ERRORS [<COMPC0>FTN-REV19.2] 
 0000 ERRORS [<COMPD0>FTN-REV19.2] 
 0000 ERRORS [<COMPE0>FTN-REV19.2] 
 0000 ERRORS [<COMPF0>FTN-REV19.2] 
 0000 ERRORS [<PRINT0>FTN-REV19.2] 
 0000 ERRORS [<PRINU0>FTN-REV19.2] 
 0000 ERRORS [<PRINW0>FTN-REV19.2] 
 0000 ERRORS [<GETROW>FTN-REV19.2] 
 0000 ERRORS [<PUTROW>FTN-REV19.2] 
 0000 ERRORS [<GETDA0>FTN-REV19.2] 
 0000 ERRORS [<PUTDA0>FTN-REV19.2] 
 0000 ERRORS [<COMPA0>FTN-REV19.2] 
 [ 5:ex]  ld rddiv.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "rddiv.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo rddiv.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a rdextr.r
 [ 5:ex]  fc rdextr.f
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "rdextr.f"
[ 6:ex]    x "ftn -i *>rdextr.f -b *>rdextr.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<GETWO0>FTN-REV19.2] 
 0000 ERRORS [<LOADRD>FTN-REV19.2] 
 0000 ERRORS [<SAVERD>FTN-REV19.2] 
 0000 ERRORS [<PRINT0>FTN-REV19.2] 
 0000 ERRORS [<ADDFI0>FTN-REV19.2] 
 0000 ERRORS [<FINDF0>FTN-REV19.2] 
 0000 ERRORS [<COMPA0>FTN-REV19.2] 
 0000 ERRORS [<COMPB0>FTN-REV19.2] 
 0000 ERRORS [<COMPC0>FTN-REV19.2] 
 0000 ERRORS [<COMPD0>FTN-REV19.2] 
 0000 ERRORS [<PRINU0>FTN-REV19.2] 
 0000 ERRORS [<PRINV0>FTN-REV19.2] 
 0000 ERRORS [<PRINW0>FTN-REV19.2] 
 0000 ERRORS [<GETROW>FTN-REV19.2] 
 0000 ERRORS [<PUTROW>FTN-REV19.2] 
 0000 ERRORS [<GETDA0>FTN-REV19.2] 
 0000 ERRORS [<PUTDA0>FTN-REV19.2] 
 0000 ERRORS [<COMPE0>FTN-REV19.2] 
 [ 5:ex]  ld rdextr.b
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "rdextr.b" | x
 [SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo rdextr.b 0 4000 4000
$ s/lo 'newlib>vswtlb' 0 4000 4000
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a rdint.r
[ 5:ex]  fc rdint.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "rdint.f"
 [ 6:ex]    x "ftn -i *>rdint.f -b *>rdint.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<LOADRD>FTN-REV19.2] 
 0000 ERRORS [<SAVERD>FTN-REV19.2] 
 0000 ERRORS [<PRINV0>FTN-REV19.2] 
 0000 ERRORS [<ADDFI0>FTN-REV19.2] 
 0000 ERRORS [<FINDF0>FTN-REV19.2] 
 0000 ERRORS [<COMPA0>FTN-REV19.2] 
 0000 ERRORS [<COMPB0>FTN-REV19.2] 
 0000 ERRORS [<COMPC0>FTN-REV19.2] 
 0000 ERRORS [<COMPD0>FTN-REV19.2] 
 0000 ERRORS [<PRINT0>FTN-REV19.2] 
 0000 ERRORS [<PRINU0>FTN-REV19.2] 
 0000 ERRORS [<PRINW0>FTN-REV19.2] 
 0000 ERRORS [<GETROW>FTN-REV19.2] 
 0000 ERRORS [<PUTROW>FTN-REV19.2] 
 0000 ERRORS [<GETDA0>FTN-REV19.2] 
 0000 ERRORS [<PUTDA0>FTN-REV19.2] 
 0000 ERRORS [<COMPE0>FTN-REV19.2] 
 [ 5:ex]  ld rdint.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "rdint.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo rdint.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a rdjoin.r
 [ 5:ex]  fc rdjoin.f
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "rdjoin.f"
[ 6:ex]    x "ftn -i *>rdjoin.f -b *>rdjoin.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<GETNA0>FTN-REV19.2] 
 0000 ERRORS [<PARSE >FTN-REV19.2] 
 0000 ERRORS [<EXPR  >FTN-REV19.2] 
 0000 ERRORS [<TERM  >FTN-REV19.2] 
 0000 ERRORS [<FACTOR>FTN-REV19.2] 
 0000 ERRORS [<PRIMA0>FTN-REV19.2] 
 0000 ERRORS [<FIELD >FTN-REV19.2] 
 0000 ERRORS [<GETQU0>FTN-REV19.2] 
 0000 ERRORS [<FINDQ0>FTN-REV19.2] 
 0000 ERRORS [<CONVE0>FTN-REV19.2] 
 0000 ERRORS [<GETSYM>FTN-REV19.2] 
 0000 ERRORS [<PUSH  >FTN-REV19.2] 
 0000 ERRORS [<PSYNER>FTN-REV19.2] 
 0000 ERRORS [<EVAL  >FTN-REV19.2] 
 0000 ERRORS [<EVALR0>FTN-REV19.2] 
 0000 ERRORS [<LOADRD>FTN-REV19.2] 
 0000 ERRORS [<SAVERD>FTN-REV19.2] 
 0000 ERRORS [<PRINV0>FTN-REV19.2] 
 0000 ERRORS [<ADDFI0>FTN-REV19.2] 
 0000 ERRORS [<FINDF0>FTN-REV19.2] 
 0000 ERRORS [<COMPA0>FTN-REV19.2] 
 0000 ERRORS [<COMPB0>FTN-REV19.2] 
 0000 ERRORS [<COMPC0>FTN-REV19.2] 
 0000 ERRORS [<COMPD0>FTN-REV19.2] 
 0000 ERRORS [<PRINT0>FTN-REV19.2] 
 0000 ERRORS [<PRINU0>FTN-REV19.2] 
 0000 ERRORS [<PRINW0>FTN-REV19.2] 
 0000 ERRORS [<GETROW>FTN-REV19.2] 
 0000 ERRORS [<PUTROW>FTN-REV19.2] 
 0000 ERRORS [<GETDA0>FTN-REV19.2] 
 0000 ERRORS [<PUTDA0>FTN-REV19.2] 
 0000 ERRORS [<COMPE0>FTN-REV19.2] 
 [ 5:ex]  ld rdjoin.b
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "rdjoin.b" | x
 [SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo rdjoin.b 0 4000 4000
$ s/lo 'newlib>vswtlb' 0 4000 4000
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a rdmake.r
 [ 5:ex]  fc rdmake.f
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "rdmake.f"
[ 6:ex]    x "ftn -i *>rdmake.f -b *>rdmake.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<GETWO0>FTN-REV19.2] 
 0000 ERRORS [<LOADRD>FTN-REV19.2] 
 0000 ERRORS [<SAVERD>FTN-REV19.2] 
 0000 ERRORS [<PRINV0>FTN-REV19.2] 
 0000 ERRORS [<ADDFI0>FTN-REV19.2] 
 0000 ERRORS [<FINDF0>FTN-REV19.2] 
 0000 ERRORS [<COMPA0>FTN-REV19.2] 
 0000 ERRORS [<COMPB0>FTN-REV19.2] 
 0000 ERRORS [<COMPC0>FTN-REV19.2] 
 0000 ERRORS [<COMPD0>FTN-REV19.2] 
 0000 ERRORS [<PRINT0>FTN-REV19.2] 
 0000 ERRORS [<PRINU0>FTN-REV19.2] 
 0000 ERRORS [<PRINW0>FTN-REV19.2] 
 0000 ERRORS [<GETROW>FTN-REV19.2] 
 0000 ERRORS [<PUTROW>FTN-REV19.2] 
 0000 ERRORS [<GETDA0>FTN-REV19.2] 
 0000 ERRORS [<PUTDA0>FTN-REV19.2] 
 0000 ERRORS [<COMPE0>FTN-REV19.2] 
 [ 5:ex]  ld rdmake.b
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "rdmake.b" | x
 [SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo rdmake.b 0 4000 4000
$ s/lo 'newlib>vswtlb' 0 4000 4000
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a rdmax.r
[ 5:ex]  fc rdmax.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "rdmax.f"
 [ 6:ex]    x "ftn -i *>rdmax.f -b *>rdmax.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<PARSE >FTN-REV19.2] 
 0000 ERRORS [<EXPR  >FTN-REV19.2] 
 0000 ERRORS [<TERM  >FTN-REV19.2] 
 0000 ERRORS [<FACTOR>FTN-REV19.2] 
 0000 ERRORS [<PRIMA0>FTN-REV19.2] 
 0000 ERRORS [<FIELD >FTN-REV19.2] 
 0000 ERRORS [<GETQU0>FTN-REV19.2] 
 0000 ERRORS [<FINDQ0>FTN-REV19.2] 
 0000 ERRORS [<CONVE0>FTN-REV19.2] 
 0000 ERRORS [<GETSYM>FTN-REV19.2] 
 0000 ERRORS [<PUSH  >FTN-REV19.2] 
 0000 ERRORS [<PSYNER>FTN-REV19.2] 
 0000 ERRORS [<EVAL  >FTN-REV19.2] 
 0000 ERRORS [<EVALR0>FTN-REV19.2] 
 0000 ERRORS [<LOADRD>FTN-REV19.2] 
 0000 ERRORS [<SAVERD>FTN-REV19.2] 
 0000 ERRORS [<PRINT0>FTN-REV19.2] 
 0000 ERRORS [<ADDFI0>FTN-REV19.2] 
 0000 ERRORS [<FINDF0>FTN-REV19.2] 
 0000 ERRORS [<COMPA0>FTN-REV19.2] 
 0000 ERRORS [<COMPB0>FTN-REV19.2] 
 0000 ERRORS [<COMPC0>FTN-REV19.2] 
 0000 ERRORS [<COMPD0>FTN-REV19.2] 
 0000 ERRORS [<PRINU0>FTN-REV19.2] 
 0000 ERRORS [<PRINV0>FTN-REV19.2] 
 0000 ERRORS [<PRINW0>FTN-REV19.2] 
 0000 ERRORS [<GETROW>FTN-REV19.2] 
 0000 ERRORS [<PUTROW>FTN-REV19.2] 
 0000 ERRORS [<GETDA0>FTN-REV19.2] 
 0000 ERRORS [<PUTDA0>FTN-REV19.2] 
 0000 ERRORS [<COMPE0>FTN-REV19.2] 
 [ 5:ex]  ld rdmax.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "rdmax.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo rdmax.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a rdmin.r
[ 5:ex]  fc rdmin.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "rdmin.f"
 [ 6:ex]    x "ftn -i *>rdmin.f -b *>rdmin.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<PARSE >FTN-REV19.2] 
 0000 ERRORS [<EXPR  >FTN-REV19.2] 
 0000 ERRORS [<TERM  >FTN-REV19.2] 
 0000 ERRORS [<FACTOR>FTN-REV19.2] 
 0000 ERRORS [<PRIMA0>FTN-REV19.2] 
 0000 ERRORS [<FIELD >FTN-REV19.2] 
 0000 ERRORS [<GETQU0>FTN-REV19.2] 
 0000 ERRORS [<FINDQ0>FTN-REV19.2] 
 0000 ERRORS [<CONVE0>FTN-REV19.2] 
 0000 ERRORS [<GETSYM>FTN-REV19.2] 
 0000 ERRORS [<PUSH  >FTN-REV19.2] 
 0000 ERRORS [<PSYNER>FTN-REV19.2] 
 0000 ERRORS [<EVAL  >FTN-REV19.2] 
 0000 ERRORS [<EVALR0>FTN-REV19.2] 
 0000 ERRORS [<LOADRD>FTN-REV19.2] 
 0000 ERRORS [<SAVERD>FTN-REV19.2] 
 0000 ERRORS [<PRINT0>FTN-REV19.2] 
 0000 ERRORS [<ADDFI0>FTN-REV19.2] 
 0000 ERRORS [<FINDF0>FTN-REV19.2] 
 0000 ERRORS [<COMPA0>FTN-REV19.2] 
 0000 ERRORS [<COMPB0>FTN-REV19.2] 
 0000 ERRORS [<COMPC0>FTN-REV19.2] 
 0000 ERRORS [<COMPD0>FTN-REV19.2] 
 0000 ERRORS [<PRINU0>FTN-REV19.2] 
 0000 ERRORS [<PRINV0>FTN-REV19.2] 
 0000 ERRORS [<PRINW0>FTN-REV19.2] 
 0000 ERRORS [<GETROW>FTN-REV19.2] 
 0000 ERRORS [<PUTROW>FTN-REV19.2] 
 0000 ERRORS [<GETDA0>FTN-REV19.2] 
 0000 ERRORS [<PUTDA0>FTN-REV19.2] 
 0000 ERRORS [<COMPE0>FTN-REV19.2] 
 [ 5:ex]  ld rdmin.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "rdmin.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo rdmin.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a rdnat.r
[ 5:ex]  fc rdnat.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "rdnat.f"
 [ 6:ex]    x "ftn -i *>rdnat.f -b *>rdnat.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<GETNA0>FTN-REV19.2] 
 0000 ERRORS [<LOADRD>FTN-REV19.2] 
 0000 ERRORS [<SAVERD>FTN-REV19.2] 
 0000 ERRORS [<PRINV0>FTN-REV19.2] 
 0000 ERRORS [<ADDFI0>FTN-REV19.2] 
 0000 ERRORS [<FINDF0>FTN-REV19.2] 
 0000 ERRORS [<COMPA0>FTN-REV19.2] 
 0000 ERRORS [<COMPB0>FTN-REV19.2] 
 0000 ERRORS [<COMPC0>FTN-REV19.2] 
 0000 ERRORS [<COMPD0>FTN-REV19.2] 
 0000 ERRORS [<PRINT0>FTN-REV19.2] 
 0000 ERRORS [<PRINU0>FTN-REV19.2] 
 0000 ERRORS [<PRINW0>FTN-REV19.2] 
 0000 ERRORS [<GETROW>FTN-REV19.2] 
 0000 ERRORS [<PUTROW>FTN-REV19.2] 
 0000 ERRORS [<GETDA0>FTN-REV19.2] 
 0000 ERRORS [<PUTDA0>FTN-REV19.2] 
 0000 ERRORS [<COMPE0>FTN-REV19.2] 
 [ 5:ex]  ld rdnat.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "rdnat.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo rdnat.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a rdprint.r
[ 5:ex]  fc rdprint.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "rdprint.f"
 [ 6:ex]    x "ftn -i *>rdprint.f -b *>rdprint.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<LOADRD>FTN-REV19.2] 
 0000 ERRORS [<SAVERD>FTN-REV19.2] 
 0000 ERRORS [<PRINT0>FTN-REV19.2] 
 0000 ERRORS [<ADDFI0>FTN-REV19.2] 
 0000 ERRORS [<FINDF0>FTN-REV19.2] 
 0000 ERRORS [<COMPA0>FTN-REV19.2] 
 0000 ERRORS [<COMPB0>FTN-REV19.2] 
 0000 ERRORS [<COMPC0>FTN-REV19.2] 
 0000 ERRORS [<COMPD0>FTN-REV19.2] 
 0000 ERRORS [<PRINU0>FTN-REV19.2] 
 0000 ERRORS [<PRINW0>FTN-REV19.2] 
 0000 ERRORS [<PRINV0>FTN-REV19.2] 
 0000 ERRORS [<GETROW>FTN-REV19.2] 
 0000 ERRORS [<PUTROW>FTN-REV19.2] 
 0000 ERRORS [<GETDA0>FTN-REV19.2] 
 0000 ERRORS [<PUTDA0>FTN-REV19.2] 
 0000 ERRORS [<COMPE0>FTN-REV19.2] 
 [ 5:ex]  ld rdprint.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "rdprint.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo rdprint.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a rdproj.r
 [ 5:ex]  fc rdproj.f
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "rdproj.f"
[ 6:ex]    x "ftn -i *>rdproj.f -b *>rdproj.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<GETNA0>FTN-REV19.2] 
 0000 ERRORS [<LOADRD>FTN-REV19.2] 
 0000 ERRORS [<SAVERD>FTN-REV19.2] 
 0000 ERRORS [<PRINV0>FTN-REV19.2] 
 0000 ERRORS [<ADDFI0>FTN-REV19.2] 
 0000 ERRORS [<FINDF0>FTN-REV19.2] 
 0000 ERRORS [<COMPA0>FTN-REV19.2] 
 0000 ERRORS [<COMPB0>FTN-REV19.2] 
 0000 ERRORS [<COMPC0>FTN-REV19.2] 
 0000 ERRORS [<COMPD0>FTN-REV19.2] 
 0000 ERRORS [<PRINT0>FTN-REV19.2] 
 0000 ERRORS [<PRINU0>FTN-REV19.2] 
 0000 ERRORS [<PRINW0>FTN-REV19.2] 
 0000 ERRORS [<GETROW>FTN-REV19.2] 
 0000 ERRORS [<PUTROW>FTN-REV19.2] 
 0000 ERRORS [<GETDA0>FTN-REV19.2] 
 0000 ERRORS [<PUTDA0>FTN-REV19.2] 
 0000 ERRORS [<COMPE0>FTN-REV19.2] 
 [ 5:ex]  ld rdproj.b
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "rdproj.b" | x
 [SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo rdproj.b 0 4000 4000
$ s/lo 'newlib>vswtlb' 0 4000 4000
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a rdsel.r
[ 5:ex]  fc rdsel.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "rdsel.f"
 [ 6:ex]    x "ftn -i *>rdsel.f -b *>rdsel.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<PARSE >FTN-REV19.2] 
 0000 ERRORS [<EXPR  >FTN-REV19.2] 
 0000 ERRORS [<TERM  >FTN-REV19.2] 
 0000 ERRORS [<FACTOR>FTN-REV19.2] 
 0000 ERRORS [<PRIMA0>FTN-REV19.2] 
 0000 ERRORS [<FIELD >FTN-REV19.2] 
 0000 ERRORS [<GETQU0>FTN-REV19.2] 
 0000 ERRORS [<FINDQ0>FTN-REV19.2] 
 0000 ERRORS [<CONVE0>FTN-REV19.2] 
 0000 ERRORS [<GETSYM>FTN-REV19.2] 
 0000 ERRORS [<PUSH  >FTN-REV19.2] 
 0000 ERRORS [<PSYNER>FTN-REV19.2] 
 0000 ERRORS [<EVAL  >FTN-REV19.2] 
 0000 ERRORS [<EVALR0>FTN-REV19.2] 
 0000 ERRORS [<LOADRD>FTN-REV19.2] 
 0000 ERRORS [<SAVERD>FTN-REV19.2] 
 0000 ERRORS [<PRINV0>FTN-REV19.2] 
 0000 ERRORS [<ADDFI0>FTN-REV19.2] 
 0000 ERRORS [<FINDF0>FTN-REV19.2] 
 0000 ERRORS [<COMPA0>FTN-REV19.2] 
 0000 ERRORS [<COMPB0>FTN-REV19.2] 
 0000 ERRORS [<COMPC0>FTN-REV19.2] 
 0000 ERRORS [<COMPD0>FTN-REV19.2] 
 0000 ERRORS [<PRINT0>FTN-REV19.2] 
 0000 ERRORS [<PRINU0>FTN-REV19.2] 
 0000 ERRORS [<PRINW0>FTN-REV19.2] 
 0000 ERRORS [<GETROW>FTN-REV19.2] 
 0000 ERRORS [<PUTROW>FTN-REV19.2] 
 0000 ERRORS [<GETDA0>FTN-REV19.2] 
 0000 ERRORS [<PUTDA0>FTN-REV19.2] 
 0000 ERRORS [<COMPE0>FTN-REV19.2] 
 [ 5:ex]  ld rdsel.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "rdsel.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo rdsel.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a rdsort.r
 [ 5:ex]  fc rdsort.f
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "rdsort.f"
[ 6:ex]    x "ftn -i *>rdsort.f -b *>rdsort.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<SORT  >FTN-REV19.2] 
 0000 ERRORS [<GNAME >FTN-REV19.2] 
 0000 ERRORS [<MAKFIL>FTN-REV19.2] 
 0000 ERRORS [<GOPEN >FTN-REV19.2] 
 0000 ERRORS [<GREMOV>FTN-REV19.2] 
 0000 ERRORS [<MERGE >FTN-REV19.2] 
 0000 ERRORS [<REHEAP>FTN-REV19.2] 
 0000 ERRORS [<GTEXT >FTN-REV19.2] 
 0000 ERRORS [<PTEXT >FTN-REV19.2] 
 0000 ERRORS [<COMPA0>FTN-REV19.2] 
 0000 ERRORS [<EXCHAN>FTN-REV19.2] 
 0000 ERRORS [<QUICK >FTN-REV19.2] 
 0000 ERRORS [<LOADRD>FTN-REV19.2] 
 0000 ERRORS [<SAVERD>FTN-REV19.2] 
 0000 ERRORS [<PRINV0>FTN-REV19.2] 
 0000 ERRORS [<ADDFI0>FTN-REV19.2] 
 0000 ERRORS [<FINDF0>FTN-REV19.2] 
 0000 ERRORS [<COMPB0>FTN-REV19.2] 
 0000 ERRORS [<COMPC0>FTN-REV19.2] 
 0000 ERRORS [<COMPD0>FTN-REV19.2] 
 0000 ERRORS [<COMPE0>FTN-REV19.2] 
 0000 ERRORS [<PRINT0>FTN-REV19.2] 
 0000 ERRORS [<PRINU0>FTN-REV19.2] 
 0000 ERRORS [<PRINW0>FTN-REV19.2] 
 0000 ERRORS [<GETROW>FTN-REV19.2] 
 0000 ERRORS [<PUTROW>FTN-REV19.2] 
 0000 ERRORS [<GETDA0>FTN-REV19.2] 
 0000 ERRORS [<PUTDA0>FTN-REV19.2] 
 0000 ERRORS [<COMPF0>FTN-REV19.2] 
 [ 5:ex]  ld rdsort.b
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "rdsort.b" | x
 [SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo rdsort.b 0 4000 4000
$ s/lo 'newlib>vswtlb' 0 4000 4000
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a rdsum.r
[ 5:ex]  fc rdsum.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "rdsum.f"
 [ 6:ex]    x "ftn -i *>rdsum.f -b *>rdsum.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<PARSE >FTN-REV19.2] 
 0000 ERRORS [<EXPR  >FTN-REV19.2] 
 0000 ERRORS [<TERM  >FTN-REV19.2] 
 0000 ERRORS [<FACTOR>FTN-REV19.2] 
 0000 ERRORS [<PRIMA0>FTN-REV19.2] 
 0000 ERRORS [<FIELD >FTN-REV19.2] 
 0000 ERRORS [<GETQU0>FTN-REV19.2] 
 0000 ERRORS [<FINDQ0>FTN-REV19.2] 
 0000 ERRORS [<CONVE0>FTN-REV19.2] 
 0000 ERRORS [<GETSYM>FTN-REV19.2] 
 0000 ERRORS [<PUSH  >FTN-REV19.2] 
 0000 ERRORS [<PSYNER>FTN-REV19.2] 
 0000 ERRORS [<EVAL  >FTN-REV19.2] 
 0000 ERRORS [<EVALR0>FTN-REV19.2] 
 0000 ERRORS [<LOADRD>FTN-REV19.2] 
 0000 ERRORS [<SAVERD>FTN-REV19.2] 
 0000 ERRORS [<PRINT0>FTN-REV19.2] 
 0000 ERRORS [<ADDFI0>FTN-REV19.2] 
 0000 ERRORS [<FINDF0>FTN-REV19.2] 
 0000 ERRORS [<COMPA0>FTN-REV19.2] 
 0000 ERRORS [<COMPB0>FTN-REV19.2] 
 0000 ERRORS [<COMPC0>FTN-REV19.2] 
 0000 ERRORS [<COMPD0>FTN-REV19.2] 
 0000 ERRORS [<PRINU0>FTN-REV19.2] 
 0000 ERRORS [<PRINV0>FTN-REV19.2] 
 0000 ERRORS [<PRINW0>FTN-REV19.2] 
 0000 ERRORS [<GETROW>FTN-REV19.2] 
 0000 ERRORS [<PUTROW>FTN-REV19.2] 
 0000 ERRORS [<GETDA0>FTN-REV19.2] 
 0000 ERRORS [<PUTDA0>FTN-REV19.2] 
 0000 ERRORS [<COMPE0>FTN-REV19.2] 
 [ 5:ex]  ld rdsum.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "rdsum.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo rdsum.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a rduniq.r
 [ 5:ex]  fc rduniq.f
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "rduniq.f"
[ 6:ex]    x "ftn -i *>rduniq.f -b *>rduniq.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<CMPROW>FTN-REV19.2] 
 0000 ERRORS [<LOADRD>FTN-REV19.2] 
 0000 ERRORS [<SAVERD>FTN-REV19.2] 
 0000 ERRORS [<PRINV0>FTN-REV19.2] 
 0000 ERRORS [<ADDFI0>FTN-REV19.2] 
 0000 ERRORS [<FINDF0>FTN-REV19.2] 
 0000 ERRORS [<COMPA0>FTN-REV19.2] 
 0000 ERRORS [<COMPB0>FTN-REV19.2] 
 0000 ERRORS [<COMPC0>FTN-REV19.2] 
 0000 ERRORS [<COMPD0>FTN-REV19.2] 
 0000 ERRORS [<PRINT0>FTN-REV19.2] 
 0000 ERRORS [<PRINU0>FTN-REV19.2] 
 0000 ERRORS [<PRINW0>FTN-REV19.2] 
 0000 ERRORS [<GETROW>FTN-REV19.2] 
 0000 ERRORS [<PUTROW>FTN-REV19.2] 
 0000 ERRORS [<GETDA0>FTN-REV19.2] 
 0000 ERRORS [<PUTDA0>FTN-REV19.2] 
 0000 ERRORS [<COMPE0>FTN-REV19.2] 
 [ 5:ex]  ld rduniq.b
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "rduniq.b" | x
 [SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo rduniq.b 0 4000 4000
$ s/lo 'newlib>vswtlb' 0 4000 4000
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a retract.r
[ 5:ex]  fc retract.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "retract.f"
 [ 6:ex]    x "ftn -i *>retract.f -b *>retract.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<REMOW0>FTN-REV19.2] 
 0000 ERRORS [<REMOX0>FTN-REV19.2] 
 0000 ERRORS [<REMOV0>FTN-REV19.2] 
 [ 5:ex]  ld retract.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "retract.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo retract.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 LOAD COMPLETE
$ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a rnd.r
[ 5:ex]  fc rnd.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "rnd.f"
 [ 6:ex]    x "ftn -i *>rnd.f -b *>rnd.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 [ 5:ex]  ld rnd.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "rnd.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo rnd.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a rot.r
[ 5:ex]  fc rot.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "rot.f"
 [ 6:ex]    x "ftn -i *>rot.f -b *>rot.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 [ 5:ex]  ld rot.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "rot.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo rot.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a sacl.r
 [ 5:ex]  fc sacl.f
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "sacl.f"
[ 6:ex]    x "ftn -i *>sacl.f -b *>sacl.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 [ 5:ex]  ld sacl.b
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "sacl.b" | x
 [SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo sacl.b 0 4000 4000
$ s/lo 'newlib>vswtlb' 0 4000 4000
 LOAD COMPLETE
$ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a sema.r
 [ 5:ex]  fc sema.f
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "sema.f"
[ 6:ex]    x "ftn -i *>sema.f -b *>sema.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 [ 5:ex]  ld sema.b
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "sema.b" | x
 [SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo sema.b 0 4000 4000
$ s/lo 'newlib>vswtlb' 0 4000 4000
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a slice.r
[ 5:ex]  fc slice.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "slice.f"
 [ 6:ex]    x "ftn -i *>slice.f -b *>slice.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<USAGE >FTN-REV19.2] 
 [ 5:ex]  ld slice.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "slice.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo slice.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 LOAD COMPLETE
$ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a sort.r
 [ 5:ex]  fc sort.f
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "sort.f"
[ 6:ex]    x "ftn -i *>sort.f -b *>sort.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<GNAME >FTN-REV19.2] 
 0000 ERRORS [<MAKFIL>FTN-REV19.2] 
 0000 ERRORS [<GOPEN >FTN-REV19.2] 
 0000 ERRORS [<GREMOV>FTN-REV19.2] 
 0000 ERRORS [<MERGE >FTN-REV19.2] 
 0000 ERRORS [<REHEAP>FTN-REV19.2] 
 0000 ERRORS [<GTEXT >FTN-REV19.2] 
 0000 ERRORS [<PTEXT >FTN-REV19.2] 
 0000 ERRORS [<COMPA0>FTN-REV19.2] 
 0000 ERRORS [<EXCHAN>FTN-REV19.2] 
 0000 ERRORS [<QUICK >FTN-REV19.2] 
 0000 ERRORS [<OPTARG>FTN-REV19.2] 
 0000 ERRORS [<NEXTF0>FTN-REV19.2] 
 0000 ERRORS [<MAKEK0>FTN-REV19.2] 
 [ 5:ex]  ld sort.b
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "sort.b" | x
 [SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo sort.b 0 4000 4000
$ s/lo 'newlib>vswtlb' 0 4000 4000
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a spell.r
[ 5:ex]  fc spell.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "spell.f"
 [ 6:ex]    x "ftn -i *>spell.f -b *>spell.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<SEPAR0>FTN-REV19.2] 
 0000 ERRORS [<GETWO0>FTN-REV19.2] 
 0000 ERRORS [<FINDM0>FTN-REV19.2] 
 0000 ERRORS [<HIGHL0>FTN-REV19.2] 
 0000 ERRORS [<REPOR0>FTN-REV19.2] 
 0000 ERRORS [<SORT  >FTN-REV19.2] 
 0000 ERRORS [<GNAME >FTN-REV19.2] 
 0000 ERRORS [<MAKFIL>FTN-REV19.2] 
 0000 ERRORS [<GOPEN >FTN-REV19.2] 
 0000 ERRORS [<GREMOV>FTN-REV19.2] 
 0000 ERRORS [<MERGE >FTN-REV19.2] 
 0000 ERRORS [<REHEAP>FTN-REV19.2] 
 0000 ERRORS [<GTEXT >FTN-REV19.2] 
 0000 ERRORS [<PTEXT >FTN-REV19.2] 
 0000 ERRORS [<COMPA0>FTN-REV19.2] 
 0000 ERRORS [<EXCHAN>FTN-REV19.2] 
 0000 ERRORS [<QUICK >FTN-REV19.2] 
 [ 5:ex]  ld spell.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "spell.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo spell.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a stats.r
[ 5:ex]  fc stats.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "stats.f"
 [ 6:ex]    x "ftn -i *>stats.f -b *>stats.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<OPTIO0>FTN-REV19.2] 
 0000 ERRORS [<SADIS0>FTN-REV19.2] 
 0000 ERRORS [<LABEL >FTN-REV19.2] 
 0000 ERRORS [<SORT  >FTN-REV19.2] 
 [ 5:ex]  ld stats.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "stats.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo stats.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a st_profile.r
 [ 5:ex]  fc st_profile.f
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "st_profile.f"
[ 6:ex]    x "ftn -i *>st_profile.f -b *>st_profile.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 [ 5:ex]  ld st_profile.b
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "st_profile.b" | x
 [SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo st_profile.b 0 4000 4000
$ s/lo 'newlib>vswtlb' 0 4000 4000
 LOAD COMPLETE
$ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a tail.r
 [ 5:ex]  fc tail.f
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "tail.f"
[ 6:ex]    x "ftn -i *>tail.f -b *>tail.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 [ 5:ex]  ld tail.b
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "tail.b" | x
 [SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo tail.b 0 4000 4000
$ s/lo 'newlib>vswtlb' 0 4000 4000
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a tc.r
 [ 5:ex]  fc tc.f
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "tc.f"
[ 6:ex]    x "ftn -i *>tc.f -b *>tc.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 [ 5:ex]  ld tc.b
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "tc.b" | x
 [SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo tc.b 0 4000 4000
$ s/lo 'newlib>vswtlb' 0 4000 4000
 LOAD COMPLETE
$ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a tee.r
[ 5:ex]  fc tee.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "tee.f"
 [ 6:ex]    x "ftn -i *>tee.f -b *>tee.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 [ 5:ex]  ld tee.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "tee.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo tee.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 LOAD COMPLETE
$ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a template.r
 [ 5:ex]  fc template.f
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "template.f"
[ 6:ex]    x "ftn -i *>template.f -b *>template.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<PRINT0>FTN-REV19.2] 
 0000 ERRORS [<PTEMP >FTN-REV19.2] 
 0000 ERRORS [<TARG  >FTN-REV19.2] 
 [ 5:ex]  ld template.b
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "template.b" | x
 [SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo template.b 0 4000 4000
$ s/lo 'newlib>vswtlb' 0 4000 4000
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a term.r
 [ 5:ex]  fc term.f
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "term.f"
[ 6:ex]    x "ftn -i *>term.f -b *>term.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<DOTERM>FTN-REV19.2] 
 0000 ERRORS [<DOOPT >FTN-REV19.2] 
 0000 ERRORS [<DISPL0>FTN-REV19.2] 
 0000 ERRORS [<USAGE >FTN-REV19.2] 
 [ 5:ex]  ld term.b
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "term.b" | x
 [SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo term.b 0 4000 4000
$ s/lo 'newlib>vswtlb' 0 4000 4000
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a term_type.r
[ 5:ex]  fc term_type.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "term_type.f"
 [ 6:ex]    x "ftn -i *>term_type.f -b *>term_type.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 [ 5:ex]  ld term_type.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "term_type.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo term_type.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 LOAD COMPLETE
$ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a tip.r
[ 5:ex]  fc tip.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "tip.f"
 [ 6:ex]    x "ftn -i *>tip.f -b *>tip.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 [ 5:ex]  ld tip.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "tip.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo tip.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 LOAD COMPLETE
$ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a tlit.r
 [ 5:ex]  fc tlit.f
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "tlit.f"
[ 6:ex]    x "ftn -i *>tlit.f -b *>tlit.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<ARGLIN>FTN-REV19.2] 
 0000 ERRORS [<MAKSET>FTN-REV19.2] 
 0000 ERRORS [<XINDEX>FTN-REV19.2] 
 [ 5:ex]  ld tlit.b
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "tlit.b" | x
 [SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo tlit.b 0 4000 4000
$ s/lo 'newlib>vswtlb' 0 4000 4000
 LOAD COMPLETE
$ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a to.r
 [ 5:ex]  fc to.f
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "to.f"
[ 6:ex]    x "ftn -i *>to.f -b *>to.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 [ 5:ex]  ld to.b
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "to.b" | x
 [SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo to.b 0 4000 4000
$ s/lo 'newlib>vswtlb' 0 4000 4000
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a touch.r
[ 5:ex]  fc touch.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "touch.f"
 [ 6:ex]    x "ftn -i *>touch.f -b *>touch.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 [ 5:ex]  ld touch.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "touch.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo touch.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 LOAD COMPLETE
$ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a tsort.r
[ 5:ex]  fc tsort.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "tsort.f"
 [ 6:ex]    x "ftn -i *>tsort.f -b *>tsort.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<PRESE0>FTN-REV19.2] 
 0000 ERRORS [<ANYPR0>FTN-REV19.2] 
 0000 ERRORS [<INDEX >FTN-REV19.2] 
 0000 ERRORS [<FINDL0>FTN-REV19.2] 
 [ 5:ex]  ld tsort.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "tsort.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo tsort.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 LOAD COMPLETE
$ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a uniq.r
 [ 5:ex]  fc uniq.f
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "uniq.f"
[ 6:ex]    x "ftn -i *>uniq.f -b *>uniq.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 [ 5:ex]  ld uniq.b
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "uniq.b" | x
 [SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo uniq.b 0 4000 4000
$ s/lo 'newlib>vswtlb' 0 4000 4000
 LOAD COMPLETE
$ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a unrot.r
[ 5:ex]  fc unrot.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "unrot.f"
 [ 6:ex]    x "ftn -i *>unrot.f -b *>unrot.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<UNROT0>FTN-REV19.2] 
 [ 5:ex]  ld unrot.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "unrot.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo unrot.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a vcgdump.r
[ 5:ex]  fc vcgdump.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "vcgdump.f"
 [ 6:ex]    x "ftn -i *>vcgdump.f -b *>vcgdump.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<DISPL0>FTN-REV19.2] 
 0000 ERRORS [<DISPN0>FTN-REV19.2] 
 0000 ERRORS [<DISPO0>FTN-REV19.2] 
 0000 ERRORS [<DISPM0>FTN-REV19.2] 
 0000 ERRORS [<DISPR0>FTN-REV19.2] 
 0000 ERRORS [<DISPQ0>FTN-REV19.2] 
 0000 ERRORS [<DISPP0>FTN-REV19.2] 
 0000 ERRORS [<DISPS0>FTN-REV19.2] 
 0000 ERRORS [<ERRMSG>FTN-REV19.2] 
 0000 ERRORS [<GET   >FTN-REV19.2] 
 0000 ERRORS [<GETST0>FTN-REV19.2] 
 0000 ERRORS [<SKIPTO>FTN-REV19.2] 
 0000 ERRORS [<STEP  >FTN-REV19.2] 
 [ 5:ex]  ld vcgdump.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "vcgdump.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo vcgdump.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a whois.r
[ 5:ex]  fc whois.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "whois.f"
 [ 6:ex]    x "ftn -i *>whois.f -b *>whois.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 [ 5:ex]  ld whois.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "whois.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo whois.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 LOAD COMPLETE
$ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex] rp -a yesno.r
[ 5:ex]  fc yesno.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "yesno.f"
 [ 6:ex]    x "ftn -i *>yesno.f -b *>yesno.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 [ 5:ex]  ld yesno.b
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "yesno.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo yesno.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 LOAD COMPLETE
$ s/li 0 4000 4000
 LOAD COMPLETE
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 4:ex]    fi
[ 3:ex] cd =src=/spc/se.u
[ 3:ex]  build
 [ 4:ex]    declare _search_rule = "^int,^var,=bin=/&"
[ 4:ex]    sep se -all    
 [ 5:ex]    declare _search_rule = "^int,=bin=/&,=lbin=/&,^var,&"
 [ 6:ex] arg 1
[ 5:ex]    if se
 [ 5:ex]    else
[ 6:ex] arg 1
[ 5:ex]    declare pn = se
 [ 6:ex] arg 2
[ 5:ex]    case -all
 [ 6:ex] pn
 [ 6:ex] file se.stacc
[ 5:ex]          if 0
[ 6:ex] pn
 [ 6:ex] pn
 [ 6:ex]   echo se
[ 6:ex]                    lf -c | find %se_?*.r$ | change .r$                    
 [ 5:ex]          ^cn/1  se se_mod1 se_mod2 se_mod3 se_mod4 se_mod5 se_mod6 se_mod7 se_mod8
 [ 7:ex] args
 [ 7:ex] pn
 [ 7:ex] pn
 [ 7:ex] args
 [ 7:ex] pn
 [ 7:ex] cat -s se.rpopts
 [ 6:ex]              rp -o se.f se_link.i se_def.i se.r                   -ag
[ 6:ex]              rp -o se_mod1.f se_link.i se_def.i se_mod1.r                   -ag
[ 6:ex]              rp -o se_mod2.f se_link.i se_def.i se_mod2.r                   -ag
[ 6:ex]              rp -o se_mod3.f se_link.i se_def.i se_mod3.r                   -ag
[ 6:ex]              rp -o se_mod4.f se_link.i se_def.i se_mod4.r                   -ag
[ 6:ex]              rp -o se_mod5.f se_link.i se_def.i se_mod5.r                   -ag
[ 6:ex]              rp -o se_mod6.f se_link.i se_def.i se_mod6.r                   -ag
[ 6:ex]              rp -o se_mod7.f se_link.i se_def.i se_mod7.r                   -ag
[ 6:ex]              rp -o se_mod8.f se_link.i se_def.i se_mod8.r                   -ag
[ 7:ex] args
 [ 7:ex] pn
 [ 7:ex] cat -s se.fcopts
 [ 6:ex]              fc se.f -q1 -d0             
[ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "se.f" "-q1" "-d0"
[ 7:ex]    x "ftn -i *>se.f -b *>se.b -l no -64v -dc -dy -o -sp"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 [ 6:ex]              fc se_mod1.f -q1 -d0             
 [ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "se_mod1.f" "-q1" "-d0"
 [ 7:ex]    x "ftn -i *>se_mod1.f -b *>se_mod1.b -l no -64v -dc -dy -o -sp"
 0000 ERRORS [<MAIN  >FTN-REV19.2] 
 0000 ERRORS [<INITI0>FTN-REV19.2] 
 0000 ERRORS [<GETTE0>FTN-REV19.2] 
 0000 ERRORS [<DECOD0>FTN-REV19.2] 
 0000 ERRORS [<USAGE >FTN-REV19.2] 
 0000 ERRORS [<SETSC0>FTN-REV19.2] 
 0000 ERRORS [<LOG   >FTN-REV19.2] 
 0000 ERRORS [<GARBA0>FTN-REV19.2] 
 0000 ERRORS [<RESTO0>FTN-REV19.2] 
 0000 ERRORS [<CLRSC0>FTN-REV19.2] 
 [ 6:ex]              fc se_mod2.f -q1 -d0             
 [ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "se_mod2.f" "-q1" "-d0"
 [ 7:ex]    x "ftn -i *>se_mod2.f -b *>se_mod2.b -l no -64v -dc -dy -o -sp"
 0000 ERRORS [<CLOSEF>FTN-REV19.2] 
 0000 ERRORS [<CLRBUF>FTN-REV19.2] 
 0000 ERRORS [<MAKSCR>FTN-REV19.2] 
 0000 ERRORS [<SETBUF>FTN-REV19.2] 
 0000 ERRORS [<SPINJ0>FTN-REV19.2] 
 0000 ERRORS [<DOLOG0>FTN-REV19.2] 
 0000 ERRORS [<DOREAD>FTN-REV19.2] 
 0000 ERRORS [<DOWRIT>FTN-REV19.2] 
 0000 ERRORS [<CKUPD >FTN-REV19.2] 
 0000 ERRORS [<GETFN >FTN-REV19.2] 
 0000 ERRORS [<SENDM0>FTN-REV19.2] 
 0000 ERRORS [<RECVM0>FTN-REV19.2] 
 [ 6:ex]              fc se_mod3.f -q1 -d0             
 [ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "se_mod3.f" "-q1" "-d0"
 [ 7:ex]    x "ftn -i *>se_mod3.f -b *>se_mod3.b -l no -64v -dc -dy -o -sp"
 0000 ERRORS [<COPY  >FTN-REV19.2] 
 0000 ERRORS [<CPROW >FTN-REV19.2] 
 0000 ERRORS [<DOHELP>FTN-REV19.2] 
 0000 ERRORS [<DISPL0>FTN-REV19.2] 
 0000 ERRORS [<DOMARK>FTN-REV19.2] 
 0000 ERRORS [<DOOPT >FTN-REV19.2] 
 0000 ERRORS [<DOSOPT>FTN-REV19.2] 
 0000 ERRORS [<DOTLIT>FTN-REV19.2] 
 0000 ERRORS [<GETRA0>FTN-REV19.2] 
 0000 ERRORS [<XINDEX>FTN-REV19.2] 
 0000 ERRORS [<MAKSET>FTN-REV19.2] 
 0000 ERRORS [<DOUNDO>FTN-REV19.2] 
 0000 ERRORS [<DRAWB0>FTN-REV19.2] 
 0000 ERRORS [<GETSTR>FTN-REV19.2] 
 0000 ERRORS [<GETWRD>FTN-REV19.2] 
 0000 ERRORS [<JOIN  >FTN-REV19.2] 
 0000 ERRORS [<LITME0>FTN-REV19.2] 
 0000 ERRORS [<MOVE  >FTN-REV19.2] 
 0000 ERRORS [<SETTAB>FTN-REV19.2] 
 0000 ERRORS [<UNIQU0>FTN-REV19.2] 
 0000 ERRORS [<GETKN >FTN-REV19.2] 
 0000 ERRORS [<PRINT0>FTN-REV19.2] 
 0000 ERRORS [<SAYNUM>FTN-REV19.2] 
 0000 ERRORS [<KNSCAN>FTN-REV19.2] 
 0000 ERRORS [<DOGLOB>FTN-REV19.2] 
 0000 ERRORS [<DOSHE0>FTN-REV19.2] 
 0000 ERRORS [<WHERE0>FTN-REV19.2] 
 [ 6:ex]              fc se_mod4.f -q1 -d0             
 [ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "se_mod4.f" "-q1" "-d0"
 [ 7:ex]    x "ftn -i *>se_mod4.f -b *>se_mod4.b -l no -64v -dc -dy -o -sp"
 0000 ERRORS [<WARND0>FTN-REV19.2] 
 0000 ERRORS [<ALLOC >FTN-REV19.2] 
 0000 ERRORS [<INJECT>FTN-REV19.2] 
 0000 ERRORS [<MAKLIN>FTN-REV19.2] 
 0000 ERRORS [<SVINS >FTN-REV19.2] 
 0000 ERRORS [<APPEND>FTN-REV19.2] 
 0000 ERRORS [<CLRROW>FTN-REV19.2] 
 0000 ERRORS [<CKCHAR>FTN-REV19.2] 
 0000 ERRORS [<DELETE>FTN-REV19.2] 
 0000 ERRORS [<SVDEL >FTN-REV19.2] 
 0000 ERRORS [<DOPRNT>FTN-REV19.2] 
 0000 ERRORS [<OVERL0>FTN-REV19.2] 
 0000 ERRORS [<PTSCAN>FTN-REV19.2] 
 0000 ERRORS [<BUMP  >FTN-REV19.2] 
 0000 ERRORS [<SUBST >FTN-REV19.2] 
 0000 ERRORS [<OPTPAT>FTN-REV19.2] 
 0000 ERRORS [<GETRHS>FTN-REV19.2] 
 0000 ERRORS [<REMARK>FTN-REV19.2] 
 0000 ERRORS [<LITNN0>FTN-REV19.2] 
 0000 ERRORS [<CKP   >FTN-REV19.2] 
 0000 ERRORS [<DELLI0>FTN-REV19.2] 
 0000 ERRORS [<INSLI0>FTN-REV19.2] 
 [ 6:ex]              fc se_mod5.f -q1 -d0             
 [ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "se_mod5.f" "-q1" "-d0"
 [ 7:ex]    x "ftn -i *>se_mod5.f -b *>se_mod5.b -l no -64v -dc -dy -o -sp"
 0000 ERRORS [<EDIT  >FTN-REV19.2] 
 0000 ERRORS [<INTRPT>FTN-REV19.2] 
 0000 ERRORS [<GETLST>FTN-REV19.2] 
 0000 ERRORS [<GETNUM>FTN-REV19.2] 
 0000 ERRORS [<GETONE>FTN-REV19.2] 
 0000 ERRORS [<CKGLOB>FTN-REV19.2] 
 0000 ERRORS [<DOCMD >FTN-REV19.2] 
 0000 ERRORS [<DEFALT>FTN-REV19.2] 
 0000 ERRORS [<MSWAIT>FTN-REV19.2] 
 0000 ERRORS [<RELINK>FTN-REV19.2] 
 0000 ERRORS [<WATCH >FTN-REV19.2] 
 0000 ERRORS [<MESG  >FTN-REV19.2] 
 0000 ERRORS [<NEXTLN>FTN-REV19.2] 
 0000 ERRORS [<PREVLN>FTN-REV19.2] 
 0000 ERRORS [<SERC  >FTN-REV19.2] 
 [ 6:ex]              fc se_mod6.f -q1 -d0             
 [ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "se_mod6.f" "-q1" "-d0"
 [ 7:ex]    x "ftn -i *>se_mod6.f -b *>se_mod6.b -l no -64v -dc -dy -o -sp"
 0000 ERRORS [<ADJUS0>FTN-REV19.2] 
 0000 ERRORS [<HWINS0>FTN-REV19.2] 
 0000 ERRORS [<UPDSC0>FTN-REV19.2] 
 0000 ERRORS [<FIXSC0>FTN-REV19.2] 
 0000 ERRORS [<SENDD0>FTN-REV19.2] 
 0000 ERRORS [<GETIND>FTN-REV19.2] 
 0000 ERRORS [<GETTXT>FTN-REV19.2] 
 0000 ERRORS [<GTXT  >FTN-REV19.2] 
 0000 ERRORS [<READF >FTN-REV19.2] 
 0000 ERRORS [<SEEKF >FTN-REV19.2] 
 0000 ERRORS [<WRITEF>FTN-REV19.2] 
 0000 ERRORS [<CLEAR0>FTN-REV19.2] 
 0000 ERRORS [<LOAD  >FTN-REV19.2] 
 0000 ERRORS [<LOADS0>FTN-REV19.2] 
 0000 ERRORS [<PROMPT>FTN-REV19.2] 
 [ 6:ex]              fc se_mod7.f -q1 -d0             
 [ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "se_mod7.f" "-q1" "-d0"
 [ 7:ex]    x "ftn -i *>se_mod7.f -b *>se_mod7.b -l no -64v -dc -dy -o -sp"
 0000 ERRORS [<GETCMD>FTN-REV19.2] 
 0000 ERRORS [<SEND  >FTN-REV19.2] 
 0000 ERRORS [<POSIT0>FTN-REV19.2] 
 0000 ERRORS [<B200C0>FTN-REV19.2] 
 0000 ERRORS [<BEEPOS>FTN-REV19.2] 
 0000 ERRORS [<BEE2P0>FTN-REV19.2] 
 0000 ERRORS [<REGEN0>FTN-REV19.2] 
 0000 ERRORS [<HPPOS >FTN-REV19.2] 
 0000 ERRORS [<IBMPOS>FTN-REV19.2] 
 0000 ERRORS [<INFOP0>FTN-REV19.2] 
 0000 ERRORS [<H19POS>FTN-REV19.2] 
 0000 ERRORS [<PEPOS >FTN-REV19.2] 
 0000 ERRORS [<ADMPOS>FTN-REV19.2] 
 0000 ERRORS [<UHCM  >FTN-REV19.2] 
 0000 ERRORS [<HAZPOS>FTN-REV19.2] 
 0000 ERRORS [<NETPOS>FTN-REV19.2] 
 0000 ERRORS [<GT40P0>FTN-REV19.2] 
 0000 ERRORS [<ADDSP0>FTN-REV19.2] 
 0000 ERRORS [<ANPPOS>FTN-REV19.2] 
 0000 ERRORS [<CGCOO0>FTN-REV19.2] 
 0000 ERRORS [<CGPOS >FTN-REV19.2] 
 0000 ERRORS [<ISCPOS>FTN-REV19.2] 
 0000 ERRORS [<SBEEC0>FTN-REV19.2] 
 0000 ERRORS [<TERAK0>FTN-REV19.2] 
 0000 ERRORS [<TRSPOS>FTN-REV19.2] 
 0000 ERRORS [<TVTPOS>FTN-REV19.2] 
 0000 ERRORS [<NBYPOS>FTN-REV19.2] 
 0000 ERRORS [<ANSIP0>FTN-REV19.2] 
 0000 ERRORS [<FORSY0>FTN-REV19.2] 
 [ 6:ex]              fc se_mod8.f -q1 -d0             
 [ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "se_mod8.f" "-q1" "-d0"
 [ 7:ex]    x "ftn -i *>se_mod8.f -b *>se_mod8.b -l no -64v -dc -dy -o -sp"
 0000 ERRORS [<SETPAT>FTN-REV19.2] 
 0000 ERRORS [<MATCH >FTN-REV19.2] 
 0000 ERRORS [<AMATCH>FTN-REV19.2] 
 0000 ERRORS [<OMATCH>FTN-REV19.2] 
 0000 ERRORS [<LOCATE>FTN-REV19.2] 
 0000 ERRORS [<PATSIZ>FTN-REV19.2] 
 0000 ERRORS [<MAKPAT>FTN-REV19.2] 
 0000 ERRORS [<GETCCL>FTN-REV19.2] 
 0000 ERRORS [<STCLOS>FTN-REV19.2] 
 0000 ERRORS [<MAKSUB>FTN-REV19.2] 
 0000 ERRORS [<CATSUB>FTN-REV19.2] 
 0000 ERRORS [<FILSET>FTN-REV19.2] 
 0000 ERRORS [<DODASH>FTN-REV19.2] 
 0000 ERRORS [<ADDSET>FTN-REV19.2] 
 0000 ERRORS [<ESC   >FTN-REV19.2] 
 0000 ERRORS [<START0>FTN-REV19.2] 
 0000 ERRORS [<STOPT0>FTN-REV19.2] 
 [ 5:ex]       when -mklink
 [ 6:ex] pn
 [ 6:ex] file se.ldproc
 [ 5:ex]    if 1
[ 6:ex] pn
 [ 5:ex]       se.ldproc
[ 7:ex] cat commseg
[ 7:ex] cat segment
[ 7:ex] cat segment
[ 6:ex]    ld -u       -g se       -c 4006       -e 2031       se_mod1.b       se_mod2.b       se_mod3.b       se_mod4.b       se_mod5.b       se_mod6.b       se_mod7.b       se_mod8.b       -e 4000       se.b       -e 2031       -l vshlib       -t -m       -o se
[ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 7:ex]    declare _quote_opt = YES
[ 8:ex] args
 [ 7:ex]    ld "-u" "-g" "se" "-c" "4006" "-e" "2031" "se_mod1.b" "se_mod2.b" "se_mod3.b" "se_mod4.b" "se_mod5.b" "se_mod6.b" "se_mod7.b" "se_mod8.b" "-e" "4000" "se.b" "-e" "2031" "-l" "vshlib" "-t" "-m" "-o" "se" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ co ab 4006
 $ s/lo se_mod1.b 0 2031 2031
 $ s/lo se_mod2.b 0 2031 2031
 $ s/lo se_mod3.b 0 2031 2031
 $ s/lo se_mod4.b 0 2031 2031
 $ s/lo se_mod5.b 0 2031 2031
 $ s/lo se_mod6.b 0 2031 2031
 $ s/lo se_mod7.b 0 2031 2031
 $ s/lo se_mod8.b 0 2031 2031
 $ s/lo se.b 0 4000 4000
$ s/lo 'newlib>vshlib' 0 2031 2031
 $ s/lo 'newlib>vswtlb' 0 2031 2031
 $ s/li 0 2031 2031
 LOAD COMPLETE
$ ma se.m
$ ma 6
 
 $ re
 # sh
 FILE ID: se
Creating SE2031
Creating SE4000
# delete
 # q
[ 5:ex]    else
[ 3:ex] cd =src=/spc/initswt.u
 [ 3:ex]  build
 [ 4:ex]    declare _search_rule = "^int,^var,&,=bin=/&"
[ 4:ex]    rp -ag initswt.r
[ 4:ex]    fc initswt.f
[ 5:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 6:ex] args
 [ 6:ex] fc "initswt.f"
 [ 5:ex]    x "ftn -i *>initswt.f -b *>initswt.b -l no -64v -dc -dy -o"
 0000 ERRORS [<MAIN  >FTN-REV19.2] 
 [ 4:ex]    pmac init_stack.s
 [ 5:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 6:ex] args
 [ 6:ex] pmac "init_stack.s"
[ 5:ex]    x "pma -i *>init_stack.s -b *>init_stack.b -l no"
 0000 ERRORS (PMA Rev. 19.2)
[ 4:ex]    pmac stack.s
[ 5:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 6:ex] args
 [ 6:ex] pmac "stack.s"
 [ 5:ex]    x "pma -i *>stack.s -b *>stack.b -l no"
 0000 ERRORS (PMA Rev. 19.2)
[ 4:ex]    link_initswt
[ 5:ex]    ld -u       init_stack.b       initswt.b       -l nvswtlb       -t       stack.b       -m initswt.m       -o initswt
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "-u" "init_stack.b" "initswt.b" "-l" "nvswtlb" "-t" "stack.b" "-m" "initswt.m" "-o" "initswt" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo init_stack.b 0 4000 4000
$ s/lo initswt.b 0 4000 4000
 $ s/lo 'newlib>nvswtlb' 0 4000 4000
$ s/lo 'newlib>vswtlb' 0 4000 4000
 $ s/li 0 4000 4000
 $ s/lo stack.b 0 4000 4000
 LOAD COMPLETE
$ ma initswt.m
 $ ma 6
 
 $ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 3:ex] cd =src=/spc/rp.u
[ 3:ex]  build
 [ 4:ex]    declare _search_rule = "^int,^var,=bin=/&"
[ 4:ex]    sep rp -all
 [ 5:ex]    declare _search_rule = "^int,=bin=/&,=lbin=/&,^var,&"
 [ 6:ex] arg 1
[ 5:ex]    if rp
 [ 5:ex]    else
[ 6:ex] arg 1
[ 5:ex]    declare pn = rp
 [ 6:ex] arg 2
[ 5:ex]    case -all
 [ 6:ex] pn
 [ 6:ex] file rp.stacc
[ 5:ex]          if 1
[ 6:ex] pn
 [ 6:ex] pn
 [ 6:ex] pn
 [ 5:ex]             rp.stacc> stacc >rp_stacc.r >rp_def.stacc.i
[ 5:ex]          fi
[ 6:ex] pn
 [ 6:ex] pn
 [ 6:ex]   echo rp
[ 6:ex]                    lf -c | find %rp_?*.r$ | change .r$                    
 [ 5:ex]          ^cn/1  rp rp_bool rp_def rp_init rp_lex rp_misc rp_other rp_out rp_proc rp_prof rp_sel rp_stacc
 [ 7:ex] args
 [ 7:ex] pn
 [ 7:ex] pn
 [ 7:ex] args
 [ 7:ex] pn
 [ 7:ex] cat -s rp.rpopts
 [ 6:ex]              rp -o rp.f rp_link.i rp_def.i rp.r                   -ag
[ 6:ex]              rp -o rp_bool.f rp_link.i rp_def.i rp_bool.r                   -ag
[ 6:ex]              rp -o rp_def.f rp_link.i rp_def.i rp_def.r                   -ag
[ 6:ex]              rp -o rp_init.f rp_link.i rp_def.i rp_init.r                   -ag
[ 6:ex]              rp -o rp_lex.f rp_link.i rp_def.i rp_lex.r                   -ag
[ 6:ex]              rp -o rp_misc.f rp_link.i rp_def.i rp_misc.r                   -ag
[ 6:ex]              rp -o rp_other.f rp_link.i rp_def.i rp_other.r                   -ag
[ 6:ex]              rp -o rp_out.f rp_link.i rp_def.i rp_out.r                   -ag
[ 6:ex]              rp -o rp_proc.f rp_link.i rp_def.i rp_proc.r                   -ag
[ 6:ex]              rp -o rp_prof.f rp_link.i rp_def.i rp_prof.r                   -ag
[ 6:ex]              rp -o rp_sel.f rp_link.i rp_def.i rp_sel.r                   -ag
[ 6:ex]              rp -o rp_stacc.f rp_link.i rp_def.i rp_stacc.r                   -ag
[ 7:ex] args
 [ 7:ex] pn
 [ 7:ex] cat -s rp.fcopts
 [ 6:ex]              fc rp.f              
 [ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "rp.f"
[ 7:ex]    x "ftn -i *>rp.f -b *>rp.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<PROCG0>FTN-REV19.2] 
 0000 ERRORS [<LISTL0>FTN-REV19.2] 
 [ 6:ex]              fc rp_bool.f              
[ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "rp_bool.f"
 [ 7:ex]    x "ftn -i *>rp_bool.f -b *>rp_bool.b -l no -64v -dc -dy -o"
 0000 ERRORS [<SIMPL0>FTN-REV19.2] 
 0000 ERRORS [<CHECK0>FTN-REV19.2] 
 0000 ERRORS [<COLLF0>FTN-REV19.2] 
 0000 ERRORS [<GENER0>FTN-REV19.2] 
 0000 ERRORS [<GENIF >FTN-REV19.2] 
 0000 ERRORS [<GENEX0>FTN-REV19.2] 
 0000 ERRORS [<PROPA0>FTN-REV19.2] 
 0000 ERRORS [<REPLA0>FTN-REV19.2] 
 0000 ERRORS [<NEGAT0>FTN-REV19.2] 
 0000 ERRORS [<COPYT0>FTN-REV19.2] 
 0000 ERRORS [<ENTEU0>FTN-REV19.2] 
 0000 ERRORS [<EXPRT0>FTN-REV19.2] 
 0000 ERRORS [<EXPRS0>FTN-REV19.2] 
 0000 ERRORS [<SAVES0>FTN-REV19.2] 
 0000 ERRORS [<RESTO0>FTN-REV19.2] 
 0000 ERRORS [<MAKET0>FTN-REV19.2] 
 [ 6:ex]              fc rp_def.f              
 [ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "rp_def.f"
[ 7:ex]    x "ftn -i *>rp_def.f -b *>rp_def.b -l no -64v -dc -dy -o"
 0000 ERRORS [<REMOV0>FTN-REV19.2] 
 0000 ERRORS [<INVOK0>FTN-REV19.2] 
 0000 ERRORS [<ENTER0>FTN-REV19.2] 
 0000 ERRORS [<DGETS0>FTN-REV19.2] 
 0000 ERRORS [<GETFO0>FTN-REV19.2] 
 0000 ERRORS [<SKIPW0>FTN-REV19.2] 
 0000 ERRORS [<GETDE0>FTN-REV19.2] 
 0000 ERRORS [<GETAC0>FTN-REV19.2] 
 0000 ERRORS [<COLLE0>FTN-REV19.2] 
 0000 ERRORS [<DELET0>FTN-REV19.2] 
 [ 6:ex]              fc rp_init.f              
[ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "rp_init.f"
 [ 7:ex]    x "ftn -i *>rp_init.f -b *>rp_init.b -l no -64v -dc -dy -o"
 0000 ERRORS [<INITI0>FTN-REV19.2] 
 0000 ERRORS [<ENTES0>FTN-REV19.2] 
 0000 ERRORS [<CLEAN0>FTN-REV19.2] 
 0000 ERRORS [<LOADT0>FTN-REV19.2] 
 0000 ERRORS [<GETTR0>FTN-REV19.2] 
 [ 6:ex]              fc rp_lex.f              
 [ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "rp_lex.f"
[ 7:ex]    x "ftn -i *>rp_lex.f -b *>rp_lex.b -l no -64v -dc -dy -o"
 0000 ERRORS [<GETSYM>FTN-REV19.2] 
 0000 ERRORS [<CONVE0>FTN-REV19.2] 
 0000 ERRORS [<REFIL0>FTN-REV19.2] 
 0000 ERRORS [<PUTBA0>FTN-REV19.2] 
 0000 ERRORS [<PUTBC0>FTN-REV19.2] 
 0000 ERRORS [<PUTBB0>FTN-REV19.2] 
 [ 6:ex]              fc rp_misc.f              
[ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "rp_misc.f"
 [ 7:ex]    x "ftn -i *>rp_misc.f -b *>rp_misc.b -l no -64v -dc -dy -o"
 0000 ERRORS [<SYNERR>FTN-REV19.2] 
 0000 ERRORS [<FATAL0>FTN-REV19.2] 
 0000 ERRORS [<SDUPL >FTN-REV19.2] 
 0000 ERRORS [<ENTET0>FTN-REV19.2] 
 0000 ERRORS [<MAKEU0>FTN-REV19.2] 
 0000 ERRORS [<LABGEN>FTN-REV19.2] 
 0000 ERRORS [<VARGEN>FTN-REV19.2] 
 0000 ERRORS [<SAVEM0>FTN-REV19.2] 
 0000 ERRORS [<GETLO0>FTN-REV19.2] 
 0000 ERRORS [<GENCH0>FTN-REV19.2] 
 0000 ERRORS [<GENDB0>FTN-REV19.2] 
 0000 ERRORS [<GENDA0>FTN-REV19.2] 
 0000 ERRORS [<GENIN0>FTN-REV19.2] 
 0000 ERRORS [<TLIT  >FTN-REV19.2] 
 [ 6:ex]              fc rp_other.f              
 [ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "rp_other.f"
[ 7:ex]    x "ftn -i *>rp_other.f -b *>rp_other.b -l no -64v -dc -dy -o"
 0000 ERRORS [<OTHER0>FTN-REV19.2] 
 0000 ERRORS [<DECLO0>FTN-REV19.2] 
 0000 ERRORS [<EQUIV0>FTN-REV19.2] 
 0000 ERRORS [<DATAO0>FTN-REV19.2] 
 0000 ERRORS [<CODEO0>FTN-REV19.2] 
 0000 ERRORS [<OTHER >FTN-REV19.2] 
 0000 ERRORS [<COPYL0>FTN-REV19.2] 
 0000 ERRORS [<ESCAP0>FTN-REV19.2] 
 [ 6:ex]              fc rp_out.f              
 [ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "rp_out.f"
[ 7:ex]    x "ftn -i *>rp_out.f -b *>rp_out.b -l no -64v -dc -dy -o"
 0000 ERRORS [<OUTTAB>FTN-REV19.2] 
 0000 ERRORS [<OUTCH >FTN-REV19.2] 
 0000 ERRORS [<OUTSTR>FTN-REV19.2] 
 0000 ERRORS [<OUTDON>FTN-REV19.2] 
 0000 ERRORS [<OUTGO >FTN-REV19.2] 
 0000 ERRORS [<OUTNUM>FTN-REV19.2] 
 0000 ERRORS [<OUTGO0>FTN-REV19.2] 
 0000 ERRORS [<CLEAO0>FTN-REV19.2] 
 0000 ERRORS [<FINDGO>FTN-REV19.2] 
 0000 ERRORS [<OUTLIT>FTN-REV19.2] 
 [ 6:ex]              fc rp_proc.f              
[ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "rp_proc.f"
 [ 7:ex]    x "ftn -i *>rp_proc.f -b *>rp_proc.b -l no -64v -dc -dy -o"
 0000 ERRORS [<SETUP0>FTN-REV19.2] 
 0000 ERRORS [<SETUQ0>FTN-REV19.2] 
 0000 ERRORS [<ENTEV0>FTN-REV19.2] 
 0000 ERRORS [<CREAT0>FTN-REV19.2] 
 0000 ERRORS [<GENPS0>FTN-REV19.2] 
 0000 ERRORS [<ENTEW0>FTN-REV19.2] 
 0000 ERRORS [<EXITS0>FTN-REV19.2] 
 0000 ERRORS [<GENPA0>FTN-REV19.2] 
 0000 ERRORS [<GENPR0>FTN-REV19.2] 
 0000 ERRORS [<GENPV0>FTN-REV19.2] 
 0000 ERRORS [<GENPU0>FTN-REV19.2] 
 0000 ERRORS [<GENPT0>FTN-REV19.2] 
 [ 6:ex]              fc rp_prof.f              
[ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "rp_prof.f"
 [ 7:ex]    x "ftn -i *>rp_prof.f -b *>rp_prof.b -l no -64v -dc -dy -o"
 0000 ERRORS [<BEGIN0>FTN-REV19.2] 
 0000 ERRORS [<BEGIP0>FTN-REV19.2] 
 0000 ERRORS [<BEGIO0>FTN-REV19.2] 
 0000 ERRORS [<ENDMO0>FTN-REV19.2] 
 0000 ERRORS [<STOPM0>FTN-REV19.2] 
 0000 ERRORS [<RETUR0>FTN-REV19.2] 
 0000 ERRORS [<ENDPR0>FTN-REV19.2] 
 [ 6:ex]              fc rp_sel.f              
 [ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "rp_sel.f"
[ 7:ex]    x "ftn -i *>rp_sel.f -b *>rp_sel.b -l no -64v -dc -dy -o"
 0000 ERRORS [<SETUR0>FTN-REV19.2] 
 0000 ERRORS [<GENSE0>FTN-REV19.2] 
 0000 ERRORS [<GENSF0>FTN-REV19.2] 
 [ 6:ex]              fc rp_stacc.f              
 [ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "rp_stacc.f"
[ 7:ex]    x "ftn -i *>rp_stacc.f -b *>rp_stacc.b -l no -64v -dc -dy -o"
 0000 ERRORS [<RATFO0>FTN-REV19.2] 
 0000 ERRORS [<DECLA0>FTN-REV19.2] 
 0000 ERRORS [<INCLU0>FTN-REV19.2] 
 0000 ERRORS [<LINKA0>FTN-REV19.2] 
 0000 ERRORS [<LOCAL0>FTN-REV19.2] 
 0000 ERRORS [<PROCE0>FTN-REV19.2] 
 0000 ERRORS [<STRDE0>FTN-REV19.2] 
 0000 ERRORS [<STRTA0>FTN-REV19.2] 
 0000 ERRORS [<ENDDE0>FTN-REV19.2] 
 0000 ERRORS [<STATE0>FTN-REV19.2] 
 0000 ERRORS [<IFSTMT>FTN-REV19.2] 
 0000 ERRORS [<FORST0>FTN-REV19.2] 
 0000 ERRORS [<WHILE0>FTN-REV19.2] 
 0000 ERRORS [<REPEA0>FTN-REV19.2] 
 0000 ERRORS [<PARBO0>FTN-REV19.2] 
 0000 ERRORS [<BOOLE0>FTN-REV19.2] 
 0000 ERRORS [<BOOLT0>FTN-REV19.2] 
 0000 ERRORS [<BOOLF0>FTN-REV19.2] 
 0000 ERRORS [<BOOLP0>FTN-REV19.2] 
 0000 ERRORS [<BOOLO0>FTN-REV19.2] 
 0000 ERRORS [<SELEC0>FTN-REV19.2] 
 0000 ERRORS [<PROCF0>FTN-REV19.2] 
 0000 ERRORS [<CASES0>FTN-REV19.2] 
 0000 ERRORS [<DOSTMT>FTN-REV19.2] 
 0000 ERRORS [<COMPO0>FTN-REV19.2] 
 0000 ERRORS [<RETUS0>FTN-REV19.2] 
 0000 ERRORS [<BREAK0>FTN-REV19.2] 
 0000 ERRORS [<NEXTS0>FTN-REV19.2] 
 0000 ERRORS [<STOPS0>FTN-REV19.2] 
 0000 ERRORS [<GOTOS0>FTN-REV19.2] 
 0000 ERRORS [<CALLS0>FTN-REV19.2] 
 [ 5:ex]       when -mklink
 [ 6:ex] pn
 [ 6:ex] file rp.ldproc
 [ 5:ex]    if 0
[ 6:ex] pn
 [ 6:ex] pn
 [ 6:ex] lf -c | find %rp_?*.b$
 [ 6:ex] pn
 [ 6:ex] pn
 [ 6:ex] cat -s rp.ldopts
 [ 5:ex]       ld -u rp.b rp_bool.b rp_def.b rp_init.b rp_lex.b rp_misc.b rp_other.b rp_out.b rp_proc.b rp_prof.b rp_sel.b rp_stacc.b -o rp -t -m
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "-u" "rp.b" "rp_bool.b" "rp_def.b" "rp_init.b" "rp_lex.b" "rp_misc.b" "rp_other.b" "rp_out.b" "rp_proc.b" "rp_prof.b" "rp_sel.b" "rp_stacc.b" "-o" "rp" "-t" "-m" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo rp.b 0 4000 4000
$ s/lo rp_bool.b 0 4000 4000
 $ s/lo rp_def.b 0 4000 4000
$ s/lo rp_init.b 0 4000 4000
 $ s/lo rp_lex.b 0 4000 4000
$ s/lo rp_misc.b 0 4000 4000
 $ s/lo rp_other.b 0 4000 4000
$ s/lo rp_out.b 0 4000 4000
$ s/lo rp_proc.b 0 4000 4000
 $ s/lo rp_prof.b 0 4000 4000
 $ s/lo rp_sel.b 0 4000 4000
$ s/lo rp_stacc.b 0 4000 4000
$ s/lo 'newlib>vswtlb' 0 4000 4000
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 LOAD COMPLETE
$ s/li 0 4000 4000
 LOAD COMPLETE
$ ma rp.m
$ ma 6
 
 $ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex]    fi
[ 3:ex] cd =src=/spc/xref.u
[ 3:ex]  build
 [ 4:ex]    declare _search_rule = "^int,^var,=bin=/&"
[ 4:ex]    sep xref -all
 [ 5:ex]    declare _search_rule = "^int,=bin=/&,=lbin=/&,^var,&"
 [ 6:ex] arg 1
[ 5:ex]    if xref
 [ 5:ex]    else
[ 6:ex] arg 1
[ 5:ex]    declare pn = xref
 [ 6:ex] arg 2
[ 5:ex]    case -all
 [ 6:ex] pn
 [ 6:ex] file xref.stacc
[ 5:ex]          if 0
[ 6:ex] pn
 [ 6:ex] pn
 [ 6:ex]   echo xref
[ 6:ex]                    lf -c | find %xref_?*.r$ | change .r$                    
 [ 5:ex]          ^cn/1  xref xref_build xref_lex xref_sort
 [ 7:ex] args
 [ 7:ex] pn
 [ 7:ex] pn
 [ 7:ex] args
 [ 7:ex] pn
 [ 7:ex] cat -s xref.rpopts
 [ 6:ex]              rp -o xref.f xref_link.i xref_def.i xref.r                   -a
 [ 6:ex]              rp -o xref_build.f xref_link.i xref_def.i xref_build.r                   -a
 [ 6:ex]              rp -o xref_lex.f xref_link.i xref_def.i xref_lex.r                   -a
 [ 6:ex]              rp -o xref_sort.f xref_link.i xref_def.i xref_sort.r                   -a
 [ 7:ex] args
 [ 7:ex] pn
 [ 7:ex] cat -s xref.fcopts
 [ 6:ex]              fc xref.f              
 [ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "xref.f"
[ 7:ex]    x "ftn -i *>xref.f -b *>xref.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<INITC0>FTN-REV19.2] 
 0000 ERRORS [<ENTER0>FTN-REV19.2] 
 0000 ERRORS [<SYNERR>FTN-REV19.2] 
 [ 6:ex]              fc xref_build.f              
 [ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "xref_build.f"
[ 7:ex]    x "ftn -i *>xref_build.f -b *>xref_build.b -l no -64v -dc -dy -o"
 0000 ERRORS [<BUILD0>FTN-REV19.2] 
 0000 ERRORS [<OUTPU0>FTN-REV19.2] 
 0000 ERRORS [<BOLDF0>FTN-REV19.2] 
 0000 ERRORS [<UNDER0>FTN-REV19.2] 
 0000 ERRORS [<OUTCH >FTN-REV19.2] 
 0000 ERRORS [<OUTSTR>FTN-REV19.2] 
 0000 ERRORS [<DUMPB0>FTN-REV19.2] 
 0000 ERRORS [<PRINT0>FTN-REV19.2] 
 [ 6:ex]              fc xref_lex.f              
 [ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "xref_lex.f"
[ 7:ex]    x "ftn -i *>xref_lex.f -b *>xref_lex.b -l no -64v -dc -dy -o"
 0000 ERRORS [<GETSYM>FTN-REV19.2] 
 0000 ERRORS [<SKIPB0>FTN-REV19.2] 
 0000 ERRORS [<NGETCH>FTN-REV19.2] 
 0000 ERRORS [<PUTBA0>FTN-REV19.2] 
 0000 ERRORS [<PUTBB0>FTN-REV19.2] 
 [ 6:ex]              fc xref_sort.f              
[ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "xref_sort.f"
 [ 7:ex]    x "ftn -i *>xref_sort.f -b *>xref_sort.b -l no -64v -dc -dy -o"
 0000 ERRORS [<SORT  >FTN-REV19.2] 
 0000 ERRORS [<GNAME >FTN-REV19.2] 
 0000 ERRORS [<MAKFIL>FTN-REV19.2] 
 0000 ERRORS [<GOPEN >FTN-REV19.2] 
 0000 ERRORS [<GREMOV>FTN-REV19.2] 
 0000 ERRORS [<MERGE >FTN-REV19.2] 
 0000 ERRORS [<REHEAP>FTN-REV19.2] 
 0000 ERRORS [<GTEXT >FTN-REV19.2] 
 0000 ERRORS [<PTEXT >FTN-REV19.2] 
 0000 ERRORS [<COMPA0>FTN-REV19.2] 
 0000 ERRORS [<EXCHAN>FTN-REV19.2] 
 0000 ERRORS [<QUICK >FTN-REV19.2] 
 [ 5:ex]       when -mklink
 [ 6:ex] pn
 [ 6:ex] file xref.ldproc
 [ 5:ex]    if 0
[ 6:ex] pn
 [ 6:ex] pn
 [ 6:ex] lf -c | find %xref_?*.b$
 [ 6:ex] pn
 [ 6:ex] pn
 [ 6:ex] cat -s xref.ldopts
 [ 5:ex]       ld -u xref.b xref_build.b xref_lex.b xref_sort.b -o xref 
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "-u" "xref.b" "xref_build.b" "xref_lex.b" "xref_sort.b" "-o" "xref" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo xref.b 0 4000 4000
$ s/lo xref_build.b 0 4000 4000
$ s/lo xref_lex.b 0 4000 4000
$ s/lo xref_sort.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ ma 6
 
 $ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex]    fi
[ 3:ex] cd =src=/spc/swtseg.u
[ 3:ex]  build
 [ 4:ex]    echo "Rebuilding swtseg"
Rebuilding swtseg
[ 3:ex] cd =src=/spc/banner.u
[ 3:ex]  build
 [ 4:ex]    declare _search_rule = "^int,^var,=bin=/&"
[ 4:ex]    rp banner.r
 [ 4:ex]    fc banner.f
 [ 5:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 6:ex] args
 [ 6:ex] fc "banner.f"
[ 5:ex]    x "ftn -i *>banner.f -b *>banner.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<PRNT  >FTN-REV19.2] 
 0000 ERRORS [<ACHN  >FTN-REV19.2] 
 0000 ERRORS [<OHAF  >FTN-REV19.2] 
 0000 ERRORS [<LEGL  >FTN-REV19.2] 
 0000 ERRORS [<OHAV  >FTN-REV19.2] 
 0000 ERRORS [<LEGU  >FTN-REV19.2] 
 0000 ERRORS [<BAXX  >FTN-REV19.2] 
 0000 ERRORS [<FRNT  >FTN-REV19.2] 
 0000 ERRORS [<DOARGS>FTN-REV19.2] 
 0000 ERRORS [<OUTPUT>FTN-REV19.2] 
 0000 ERRORS [<.DATA.>FTN-REV19.2] 
 [ 4:ex]    ld -u -s "co ab 4000" banner.b
[ 5:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 5:ex]    declare _quote_opt = YES
[ 6:ex] args
 [ 5:ex]    ld "-u" "-s" "co ab 4000" "banner.b" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ co ab 4000
 $ s/lo banner.b 0 4000 4000
$ s/lo 'newlib>vswtlb' 0 4000 4000
 LOAD COMPLETE
$ s/li 0 4000 4000
 LOAD COMPLETE
$ ma 6
 
 $ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 3:ex] cd =src=/spc/copyout.u
 [ 3:ex]  build
 [ 4:ex]    declare _search_rule = "^int,^var,=bin=/&"
[ 4:ex]    rp copyout.r
[ 4:ex]    spool$.f> include >>copyout.f
 [ 4:ex]    fc copyout.f
[ 5:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 6:ex] args
 [ 6:ex] fc "copyout.f"
 [ 5:ex]    x "ftn -i *>copyout.f -b *>copyout.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<SPOOL$>FTN-REV19.2] 
 [ 4:ex]    ld -u copyout.b
 [ 5:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 5:ex]    declare _quote_opt = YES
[ 6:ex] args
 [ 5:ex]    ld "-u" "copyout.b" | x
 [SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo copyout.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 $ s/li 0 4000 4000
 $ ma 6
 **SPL$MB    4000  004000  **TA$       4000  003766  
 
 $ re
 WARNING: LOAD NOT COMPLETE
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 3:ex] cd =src=/spc/ed.u
[ 3:ex]  build
 [ 4:ex]    declare _search_rule = "^int,^var,=bin=/&"
[ 4:ex]    rp ed.r
 [ 4:ex]    fc ed.f
 [ 5:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 6:ex] args
 [ 6:ex] fc "ed.f"
[ 5:ex]    x "ftn -i *>ed.f -b *>ed.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 [ 4:ex]    ld -u ed.b -l vedtlb -l vshlib
[ 5:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 5:ex]    declare _quote_opt = YES
[ 6:ex] args
 [ 5:ex]    ld "-u" "ed.b" "-l" "vedtlb" "-l" "vshlib" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo ed.b 0 4000 4000
$ s/lo 'newlib>vedtlb' 0 4000 4000
 $ s/lo 'newlib>vshlib' 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ ma 6
 
 $ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 3:ex] cd =src=/spc/fmt.u
 [ 3:ex]  build
 [ 4:ex]    sep fmt -all
[ 5:ex]    declare _search_rule = "^int,=bin=/&,=lbin=/&,^var,&"
 [ 6:ex] arg 1
[ 5:ex]    if fmt
[ 5:ex]    else
[ 6:ex] arg 1
[ 5:ex]    declare pn = fmt
[ 6:ex] arg 2
[ 5:ex]    case -all
 [ 6:ex] pn
 [ 6:ex] file fmt.stacc
 [ 5:ex]          if 0
[ 6:ex] pn
 [ 6:ex] pn
 [ 6:ex]   echo fmt
 [ 6:ex]                    lf -c | find %fmt_?*.r$ | change .r$                    
[ 5:ex]          ^cn/1  fmt fmt_cmd fmt_fill fmt_io fmt_mac fmt_misc
 [ 7:ex] args
 [ 7:ex] pn
 [ 7:ex] pn
 [ 7:ex] args
 [ 7:ex] pn
 [ 7:ex] cat -s fmt.rpopts
[ 6:ex]              rp -o fmt.f fmt_link.i fmt_def.i fmt.r                   -ag
[ 6:ex]              rp -o fmt_cmd.f fmt_link.i fmt_def.i fmt_cmd.r                   -ag
[ 6:ex]              rp -o fmt_fill.f fmt_link.i fmt_def.i fmt_fill.r                   -ag
[ 6:ex]              rp -o fmt_io.f fmt_link.i fmt_def.i fmt_io.r                   -ag
[ 6:ex]              rp -o fmt_mac.f fmt_link.i fmt_def.i fmt_mac.r                   -ag
[ 6:ex]              rp -o fmt_misc.f fmt_link.i fmt_def.i fmt_misc.r                   -ag
[ 7:ex] args
 [ 7:ex] pn
 [ 7:ex] cat -s fmt.fcopts
[ 6:ex]              fc fmt.f              
[ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "fmt.f"
 [ 7:ex]    x "ftn -i *>fmt.f -b *>fmt.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<OPTIO0>FTN-REV19.2] 
 0000 ERRORS [<INITI0>FTN-REV19.2] 
 [ 6:ex]              fc fmt_cmd.f              
[ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "fmt_cmd.f"
 [ 7:ex]    x "ftn -i *>fmt_cmd.f -b *>fmt_cmd.b -l no -64v -dc -dy -o"
 0000 ERRORS [<COMAND>FTN-REV19.2] 
 0000 ERRORS [<COMTYP>FTN-REV19.2] 
 0000 ERRORS [<PROCE0>FTN-REV19.2] 
 0000 ERRORS [<TEXT  >FTN-REV19.2] 
 [ 6:ex]              fc fmt_fill.f              
 [ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "fmt_fill.f"
[ 7:ex]    x "ftn -i *>fmt_fill.f -b *>fmt_fill.b -l no -64v -dc -dy -o"
 0000 ERRORS [<BOFACE>FTN-REV19.2] 
 0000 ERRORS [<BRK   >FTN-REV19.2] 
 0000 ERRORS [<CENTER>FTN-REV19.2] 
 0000 ERRORS [<DIVOK >FTN-REV19.2] 
 0000 ERRORS [<GETWRD>FTN-REV19.2] 
 0000 ERRORS [<HYNATE>FTN-REV19.2] 
 0000 ERRORS [<LEADBL>FTN-REV19.2] 
 0000 ERRORS [<NXBLNK>FTN-REV19.2] 
 0000 ERRORS [<PFOOT >FTN-REV19.2] 
 0000 ERRORS [<PHEAD >FTN-REV19.2] 
 0000 ERRORS [<PUT   >FTN-REV19.2] 
 0000 ERRORS [<PUTTAB>FTN-REV19.2] 
 0000 ERRORS [<PUTTL >FTN-REV19.2] 
 0000 ERRORS [<PUTW  >FTN-REV19.2] 
 0000 ERRORS [<PUTWRD>FTN-REV19.2] 
 0000 ERRORS [<SET   >FTN-REV19.2] 
 0000 ERRORS [<SETTAB>FTN-REV19.2] 
 0000 ERRORS [<SPACE >FTN-REV19.2] 
 0000 ERRORS [<SPREAD>FTN-REV19.2] 
 0000 ERRORS [<SUFFIX>FTN-REV19.2] 
 0000 ERRORS [<ITALIC>FTN-REV19.2] 
 0000 ERRORS [<UNDERL>FTN-REV19.2] 
 [ 6:ex]              fc fmt_io.f              
 [ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "fmt_io.f"
[ 7:ex]    x "ftn -i *>fmt_io.f -b *>fmt_io.b -l no -64v -dc -dy -o"
 0000 ERRORS [<NEWINP>FTN-REV19.2] 
 0000 ERRORS [<NEWOUT>FTN-REV19.2] 
 0000 ERRORS [<READLN>FTN-REV19.2] 
 0000 ERRORS [<RESET0>FTN-REV19.2] 
 0000 ERRORS [<XCLOSE>FTN-REV19.2] 
 0000 ERRORS [<XOPEN >FTN-REV19.2] 
 [ 6:ex]              fc fmt_mac.f              
[ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "fmt_mac.f"
 [ 7:ex]    x "ftn -i *>fmt_mac.f -b *>fmt_mac.b -l no -64v -dc -dy -o"
 0000 ERRORS [<APNDM0>FTN-REV19.2] 
 0000 ERRORS [<DEFMAC>FTN-REV19.2] 
 0000 ERRORS [<DOMAC >FTN-REV19.2] 
 0000 ERRORS [<EMARGS>FTN-REV19.2] 
 0000 ERRORS [<ENDMAC>FTN-REV19.2] 
 0000 ERRORS [<EVALF0>FTN-REV19.2] 
 0000 ERRORS [<EXTRA0>FTN-REV19.2] 
 0000 ERRORS [<FINDM0>FTN-REV19.2] 
 0000 ERRORS [<GETNAM>FTN-REV19.2] 
 0000 ERRORS [<ITOLET>FTN-REV19.2] 
 0000 ERRORS [<ITOROM>FTN-REV19.2] 
 0000 ERRORS [<MACINP>FTN-REV19.2] 
 0000 ERRORS [<MACGC >FTN-REV19.2] 
 0000 ERRORS [<MACREL>FTN-REV19.2] 
 0000 ERRORS [<MASSIN>FTN-REV19.2] 
 0000 ERRORS [<RDMAC >FTN-REV19.2] 
 0000 ERRORS [<TRNARG>FTN-REV19.2] 
 [ 6:ex]              fc fmt_misc.f              
 [ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "fmt_misc.f"
[ 7:ex]    x "ftn -i *>fmt_misc.f -b *>fmt_misc.b -l no -64v -dc -dy -o"
 0000 ERRORS [<CHKIF >FTN-REV19.2] 
 0000 ERRORS [<CTOI  >FTN-REV19.2] 
 0000 ERRORS [<ESC   >FTN-REV19.2] 
 0000 ERRORS [<GETSTR>FTN-REV19.2] 
 0000 ERRORS [<GETSC >FTN-REV19.2] 
 0000 ERRORS [<GETVAL>FTN-REV19.2] 
 0000 ERRORS [<MKTL  >FTN-REV19.2] 
 0000 ERRORS [<MVPART>FTN-REV19.2] 
 0000 ERRORS [<SKIP  >FTN-REV19.2] 
 0000 ERRORS [<TAILBL>FTN-REV19.2] 
 0000 ERRORS [<WIDTH >FTN-REV19.2] 
 [ 5:ex]       when -mklink
 [ 6:ex] pn
 [ 6:ex] file fmt.ldproc
[ 5:ex]    if 0
[ 6:ex] pn
 [ 6:ex] pn
 [ 6:ex] lf -c | find %fmt_?*.b$
[ 6:ex] pn
 [ 6:ex] pn
 [ 6:ex] cat -s fmt.ldopts
[ 5:ex]       ld -u fmt.b fmt_cmd.b fmt_fill.b fmt_io.b fmt_mac.b fmt_misc.b -o fmt -t -m
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "-u" "fmt.b" "fmt_cmd.b" "fmt_fill.b" "fmt_io.b" "fmt_mac.b" "fmt_misc.b" "-o" "fmt" "-t" "-m" | x
 [SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo fmt.b 0 4000 4000
 $ s/lo fmt_cmd.b 0 4000 4000
 $ s/lo fmt_fill.b 0 4000 4000
$ s/lo fmt_io.b 0 4000 4000
$ s/lo fmt_mac.b 0 4000 4000
 $ s/lo fmt_misc.b 0 4000 4000
$ s/lo 'newlib>vswtlb' 0 4000 4000
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ ma fmt.m
 $ ma 6
 
 $ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex]    fi
[ 3:ex] cd =src=/spc/link.u
[ 3:ex]  build
 [ 4:ex]    declare _search_rule = "^int,=bin=/&,=lbin=/&,&"
[ 4:ex]    sep link -all
 [ 5:ex]    declare _search_rule = "^int,=bin=/&,=lbin=/&,^var,&"
 [ 6:ex] arg 1
[ 5:ex]    if link
 [ 5:ex]    else
[ 6:ex] arg 1
[ 5:ex]    declare pn = link
 [ 6:ex] arg 2
[ 5:ex]    case -all
 [ 6:ex] pn
 [ 6:ex] file link.stacc
[ 5:ex]          if 0
[ 6:ex] pn
 [ 6:ex] pn
 [ 6:ex]   echo link
[ 6:ex]                    lf -c | find %link_?*.r$ | change .r$                    
 [ 5:ex]          ^cn/1  link link_def link_init link_lex link_misc link_sort
 [ 7:ex] args
 [ 7:ex] pn
 [ 7:ex] pn
 [ 7:ex] args
 [ 7:ex] pn
 [ 7:ex] cat -s link.rpopts
 [ 6:ex]              rp -o link.f link_link.i link_def.i link.r                   -a
 [ 6:ex]              rp -o link_def.f link_link.i link_def.i link_def.r                   -a
 [ 6:ex]              rp -o link_init.f link_link.i link_def.i link_init.r                   -a
 [ 6:ex]              rp -o link_lex.f link_link.i link_def.i link_lex.r                   -a
 [ 6:ex]              rp -o link_misc.f link_link.i link_def.i link_misc.r                   -a
 [ 6:ex]              rp -o link_sort.f link_link.i link_def.i link_sort.r                   -a
 [ 7:ex] args
 [ 7:ex] pn
 [ 7:ex] cat -s link.fcopts
 [ 6:ex]              fc link.f              
 [ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "link.f"
[ 7:ex]    x "ftn -i *>link.f -b *>link.b -l no -64v -dc -dy -o"
 0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<GETLI0>FTN-REV19.2] 
 [ 6:ex]              fc link_def.f              
 [ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "link_def.f"
[ 7:ex]    x "ftn -i *>link_def.f -b *>link_def.b -l no -64v -dc -dy -o"
 0000 ERRORS [<REMOV0>FTN-REV19.2] 
 0000 ERRORS [<INVOK0>FTN-REV19.2] 
 0000 ERRORS [<ENTER0>FTN-REV19.2] 
 0000 ERRORS [<DGETS0>FTN-REV19.2] 
 0000 ERRORS [<GETFO0>FTN-REV19.2] 
 0000 ERRORS [<SKIPW0>FTN-REV19.2] 
 0000 ERRORS [<GETDE0>FTN-REV19.2] 
 0000 ERRORS [<GETAC0>FTN-REV19.2] 
 0000 ERRORS [<COLLE0>FTN-REV19.2] 
 0000 ERRORS [<DELET0>FTN-REV19.2] 
 [ 6:ex]              fc link_init.f              
[ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "link_init.f"
 [ 7:ex]    x "ftn -i *>link_init.f -b *>link_init.b -l no -64v -dc -dy -o"
 0000 ERRORS [<INITI0>FTN-REV19.2] 
 0000 ERRORS [<ENTES0>FTN-REV19.2] 
 0000 ERRORS [<CLEAN0>FTN-REV19.2] 
 [ 6:ex]              fc link_lex.f              
 [ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "link_lex.f"
[ 7:ex]    x "ftn -i *>link_lex.f -b *>link_lex.b -l no -64v -dc -dy -o"
 0000 ERRORS [<GETSYM>FTN-REV19.2] 
 0000 ERRORS [<CONVE0>FTN-REV19.2] 
 0000 ERRORS [<REFIL0>FTN-REV19.2] 
 0000 ERRORS [<PUTBA0>FTN-REV19.2] 
 0000 ERRORS [<PUTBC0>FTN-REV19.2] 
 0000 ERRORS [<PUTBB0>FTN-REV19.2] 
 [ 6:ex]              fc link_misc.f              
[ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "link_misc.f"
 [ 7:ex]    x "ftn -i *>link_misc.f -b *>link_misc.b -l no -64v -dc -dy -o"
 0000 ERRORS [<SYNERR>FTN-REV19.2] 
 0000 ERRORS [<FATAL0>FTN-REV19.2] 
 0000 ERRORS [<SDUPL >FTN-REV19.2] 
 0000 ERRORS [<ENTET0>FTN-REV19.2] 
 0000 ERRORS [<MAKEU0>FTN-REV19.2] 
 0000 ERRORS [<LABGEN>FTN-REV19.2] 
 0000 ERRORS [<VARGEN>FTN-REV19.2] 
 0000 ERRORS [<SAVEM0>FTN-REV19.2] 
 0000 ERRORS [<GETLO0>FTN-REV19.2] 
 [ 6:ex]              fc link_sort.f              
[ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "link_sort.f"
 [ 7:ex]    x "ftn -i *>link_sort.f -b *>link_sort.b -l no -64v -dc -dy -o"
 0000 ERRORS [<SORT  >FTN-REV19.2] 
 0000 ERRORS [<GNAME >FTN-REV19.2] 
 0000 ERRORS [<MAKFIL>FTN-REV19.2] 
 0000 ERRORS [<GOPEN >FTN-REV19.2] 
 0000 ERRORS [<GREMOV>FTN-REV19.2] 
 0000 ERRORS [<MERGE >FTN-REV19.2] 
 0000 ERRORS [<REHEAP>FTN-REV19.2] 
 0000 ERRORS [<GTEXT >FTN-REV19.2] 
 0000 ERRORS [<PTEXT >FTN-REV19.2] 
 0000 ERRORS [<COMPA0>FTN-REV19.2] 
 0000 ERRORS [<EXCHAN>FTN-REV19.2] 
 0000 ERRORS [<QUICK >FTN-REV19.2] 
 [ 5:ex]       when -mklink
 [ 6:ex] pn
 [ 6:ex] file link.ldproc
 [ 5:ex]    if 0
[ 6:ex] pn
 [ 6:ex] pn
 [ 6:ex] lf -c | find %link_?*.b$
 [ 6:ex] pn
 [ 6:ex] pn
 [ 6:ex] cat -s link.ldopts
 [ 5:ex]       ld -u link.b link_def.b link_init.b link_lex.b link_misc.b link_sort.b -o link 
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "-u" "link.b" "link_def.b" "link_init.b" "link_lex.b" "link_misc.b" "link_sort.b" "-o" "link" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo link.b 0 4000 4000
$ s/lo link_def.b 0 4000 4000
$ s/lo link_init.b 0 4000 4000
 $ s/lo link_lex.b 0 4000 4000
$ s/lo link_misc.b 0 4000 4000
 $ s/lo link_sort.b 0 4000 4000
 $ s/lo 'newlib>vswtlb' 0 4000 4000
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ ma 6
 
 $ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex]    fi
[ 3:ex] cd =src=/spc/swt.u
 [ 3:ex]  build
 [ 4:ex]    declare _search_rule = "^int,^var,&,=bin=/&"
[ 4:ex]    rp -ag swt.r
[ 4:ex]    fc swt.f -d0op
[ 5:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 6:ex] args
 [ 6:ex] fc "swt.f" "-d0op"
 [ 5:ex]    x "ftn -i *>swt.f -b *>swt.b -l no -64v -dc -dy -pb -u"
 0000 ERRORS [<MAIN  >FTN-REV19.2] 
 0000 ERRORS [<INITV0>FTN-REV19.2] 
 [ 4:ex]    init_s.s> include >_init_s.s
[ 4:ex]    pmac _init_s.s -b init_s.b
[ 5:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 6:ex] args
 [ 6:ex] pmac "_init_s.s" "-b" "init_s.b"
 [ 5:ex]    x "pma -i *>_init_s.s -b *>init_s.b -l no"
0000 ERRORS (PMA Rev. 19.2)
[ 4:ex]    del _init_s.s
 [ 4:ex]    pmac fixlib.s
 [ 5:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 6:ex] args
 [ 6:ex] pmac "fixlib.s"
[ 5:ex]    x "pma -i *>fixlib.s -b *>fixlib.b -l no"
 0000 ERRORS (PMA Rev. 19.2)
[ 4:ex]    link_swt
[ 6:ex] cat segment
[ 5:ex]    declare SEG = 2030
[ 6:ex] cat rootseg
[ 5:ex]    declare ROOT = 4041
 [ 6:ex] ROOT
 [ 6:ex] SEG
[ 6:ex] SEG
[ 6:ex] SEG
[ 5:ex]    ld -g st -o swt       -s "sy root_ "4041" 0"       -s "mix on"       init_s.b       -s d/li       -m       -s "xp 0 2"       -i       -e 2030       -s "a/sy reserved pr "2030" 107000"       -s "au 6"       swt.b       fixlib.b       -t       -m       -m 3       -m 2       -s "/*  Make sure there are no sector zero links"       -s "/*  in segment "2030       -s "/*"       -s "/*"       -o swt
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "-g" "st" "-o" "swt" "-s" "sy root_ 4041 0" "-s" "mix on" "init_s.b" "-s" "d/li" "-m" "-s" "xp 0 2" "-i" "-e" "2030" "-s" "a/sy reserved pr 2030 107000" "-s" "au 6" "swt.b" "fixlib.b" "-t" "-m" "-m" "3" "-m" "2" "-s" "/*  Make sure there are no sector zero links" "-s" "/*  in segment 2030" "-s" "/*" "-s" "/*" "-o" "swt" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ sy root_ 4041 0
$ mix on
 $ s/lo init_s.b 0 4000 4000
$ d/li
 $ ma swt.m
 $ xp 0 2
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ a/sy reserved pr 2030 107000
 $ au 6
 $ s/lo swt.b 0 2030 2030
 $ s/lo fixlib.b 0 2030 2030
$ s/lo 'newlib>vswtlb' 0 2030 2030
 $ s/li 0 2030 2030
 LOAD COMPLETE
$ ma swt.m
 $ ma 3
 
 
 $ ma 2
 *START  4000  001374  *STACK  7777  000000  *SYM    000075
 
 SEG. #    TYPE        LOW      HIGH      TOP
   2030    PROC      110000    113231    113231    
   4000    PROC      001000    001543    001536    
 
 *BASE   002030  110000  110003  110005  110005  
 *BASE   002030  111070  111074  111075  111075  
 
 $ /*  Make sure there are no sector zero links
 $ /*  in segment 2030
$ /*
 $ /*
 $ re
 # sh
 FILE ID: st
Creating ST2030
Creating ST4000
# delete
 # q
[ 3:ex] cd =src=/spc/c1.u
[ 3:ex]  build
 [ 4:ex] echo "make sure you don't build c1_debug.r with -t in cc.rpopts"
 make sure you don't build c1_debug.r with -t in cc.rpopts
[ 4:ex] echo "it contains a routine that cannot be traced"
 it contains a routine that cannot be traced
[ 4:ex] sep c1 -all
[ 5:ex]    declare _search_rule = "^int,=bin=/&,=lbin=/&,^var,&"
 [ 6:ex] arg 1
[ 5:ex]    if c1
 [ 5:ex]    else
[ 6:ex] arg 1
[ 5:ex]    declare pn = c1
 [ 6:ex] arg 2
[ 5:ex]    case -all
 [ 6:ex] pn
 [ 6:ex] file c1.stacc
[ 5:ex]          if 1
[ 6:ex] pn
 [ 6:ex] pn
 [ 6:ex] pn
 [ 5:ex]             c1.stacc> stacc >c1_stacc.r >c1_def.stacc.i
[ 5:ex]          fi
[ 6:ex] pn
 [ 6:ex] pn
 [ 6:ex]   echo c1
[ 6:ex]                    lf -c | find %c1_?*.r$ | change .r$                    
 [ 5:ex]          ^cn/1  c1 c1_alloc c1_ck c1_debug c1_expr c1_fold c1_init c1_lex c1_misc c1_mode c1_out c1_parse c1_pp c1_stacc c1_sym
[ 7:ex] args
 [ 7:ex] pn
 [ 7:ex] pn
 [ 7:ex] args
 [ 7:ex] pn
 [ 7:ex] cat -s c1.rpopts
 [ 6:ex]              rp -o c1.f c1_link.i c1_def.i c1.r                   -g
 [ 6:ex]              rp -o c1_alloc.f c1_link.i c1_def.i c1_alloc.r                   -g
 [ 6:ex]              rp -o c1_ck.f c1_link.i c1_def.i c1_ck.r                   -g
 [ 6:ex]              rp -o c1_debug.f c1_link.i c1_def.i c1_debug.r                   -g
 [ 6:ex]              rp -o c1_expr.f c1_link.i c1_def.i c1_expr.r                   -g
 [ 6:ex]              rp -o c1_fold.f c1_link.i c1_def.i c1_fold.r                   -g
 [ 6:ex]              rp -o c1_init.f c1_link.i c1_def.i c1_init.r                   -g
 [ 6:ex]              rp -o c1_lex.f c1_link.i c1_def.i c1_lex.r                   -g
 [ 6:ex]              rp -o c1_misc.f c1_link.i c1_def.i c1_misc.r                   -g
 [ 6:ex]              rp -o c1_mode.f c1_link.i c1_def.i c1_mode.r                   -g
 [ 6:ex]              rp -o c1_out.f c1_link.i c1_def.i c1_out.r                   -g
 [ 6:ex]              rp -o c1_parse.f c1_link.i c1_def.i c1_parse.r                   -g
 [ 6:ex]              rp -o c1_pp.f c1_link.i c1_def.i c1_pp.r                   -g
 [ 6:ex]              rp -o c1_stacc.f c1_link.i c1_def.i c1_stacc.r                   -g
 [ 6:ex]              rp -o c1_sym.f c1_link.i c1_def.i c1_sym.r                   -g
 [ 7:ex] args
 [ 7:ex] pn
 [ 7:ex] cat -s c1.fcopts
 [ 6:ex]              fc c1.f -o0 -q1 -d0             
[ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "c1.f" "-o0" "-q1" "-d0"
[ 7:ex]    x "ftn -i *>c1.f -b *>c1.b -l no -64v -dc -dy -sp"
0000 ERRORS [<.MAIN.>FTN-REV19.2] 
 0000 ERRORS [<PROCE0>FTN-REV19.2] 
 [ 6:ex]              fc c1_alloc.f -o0 -q1 -d0             
[ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "c1_alloc.f" "-o0" "-q1" "-d0"
[ 7:ex]    x "ftn -i *>c1_alloc.f -b *>c1_alloc.b -l no -64v -dc -dy -sp"
0000 ERRORS [<ENTET0>FTN-REV19.2] 
 0000 ERRORS [<ENTEX0>FTN-REV19.2] 
 0000 ERRORS [<DECLC0>FTN-REV19.2] 
 0000 ERRORS [<CHECL0>FTN-REV19.2] 
 0000 ERRORS [<CLEAN0>FTN-REV19.2] 
 0000 ERRORS [<CHECM0>FTN-REV19.2] 
 0000 ERRORS [<ALLOC0>FTN-REV19.2] 
 0000 ERRORS [<ALLOD0>FTN-REV19.2] 
 0000 ERRORS [<WSIZE >FTN-REV19.2] 
 0000 ERRORS [<ALLOE0>FTN-REV19.2] 
 [ 6:ex]              fc c1_ck.f -o0 -q1 -d0             
 [ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "c1_ck.f" "-o0" "-q1" "-d0"
 [ 7:ex]    x "ftn -i *>c1_ck.f -b *>c1_ck.b -l no -64v -dc -dy -sp"
0000 ERRORS [<CKFND0>FTN-REV19.2] 
 0000 ERRORS [<CKFNC0>FTN-REV19.2] 
 0000 ERRORS [<CKPUU0>FTN-REV19.2] 
 0000 ERRORS [<CKFNA0>FTN-REV19.2] 
 0000 ERRORS [<CKPUT0>FTN-REV19.2] 
 0000 ERRORS [<CKFNE0>FTN-REV19.2] 
 [ 6:ex]              fc c1_debug.f -o0 -q1 -d0             
[ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "c1_debug.f" "-o0" "-q1" "-d0"
[ 7:ex]    x "ftn -i *>c1_debug.f -b *>c1_debug.b -l no -64v -dc -dy -sp"
0000 ERRORS [<DISPP0>FTN-REV19.2] 
 0000 ERRORS [<DISPL0>FTN-REV19.2] 
 0000 ERRORS [<PMODE >FTN-REV19.2] 
 0000 ERRORS [<DISPO0>FTN-REV19.2] 
 0000 ERRORS [<DUMPM0>FTN-REV19.2] 
 0000 ERRORS [<DMPR  >FTN-REV19.2] 
 0000 ERRORS [<DMPM  >FTN-REV19.2] 
 0000 ERRORS [<DMPS  >FTN-REV19.2] 
 0000 ERRORS [<DUMPT0>FTN-REV19.2] 
 0000 ERRORS [<DUMPS0>FTN-REV19.2] 
 0000 ERRORS [<T$TRAC>FTN-REV19.2] 
 0000 ERRORS [<DISPM0>FTN-REV19.2] 
 0000 ERRORS [<DISPN0>FTN-REV19.2] 
 0000 ERRORS [<DUMPE0>FTN-REV19.2] 
 0000 ERRORS [<DMPE  >FTN-REV19.2] 
 [ 6:ex]              fc c1_expr.f -o0 -q1 -d0             
 [ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "c1_expr.f" "-o0" "-q1" "-d0"
 [ 7:ex]    x "ftn -i *>c1_expr.f -b *>c1_expr.b -l no -64v -dc -dy -sp"
0000 ERRORS [<GENOQ0>FTN-REV19.2] 
 0000 ERRORS [<GENINT>FTN-REV19.2] 
 0000 ERRORS [<GENLIT>FTN-REV19.2] 
 0000 ERRORS [<GENIN0>FTN-REV19.2] 
 0000 ERRORS [<GENOP0>FTN-REV19.2] 
 0000 ERRORS [<GENMA0>FTN-REV19.2] 
 0000 ERRORS [<CHECK0>FTN-REV19.2] 
 0000 ERRORS [<GENTO0>FTN-REV19.2] 
 0000 ERRORS [<DEALL0>FTN-REV19.2] 
 [ 6:ex]              fc c1_fold.f -o0 -q1 -d0             
 [ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "c1_fold.f" "-o0" "-q1" "-d0"
 [ 7:ex]    x "ftn -i *>c1_fold.f -b *>c1_fold.b -l no -64v -dc -dy -sp"
0000 ERRORS [<ISNUL0>FTN-REV19.2] 
 0000 ERRORS [<GENCA0>FTN-REV19.2] 
 0000 ERRORS [<GENCO0>FTN-REV19.2] 
 0000 ERRORS [<CONVO0>FTN-REV19.2] 
 0000 ERRORS [<CONVT0>FTN-REV19.2] 
 0000 ERRORS [<CONVC0>FTN-REV19.2] 
 0000 ERRORS [<GETLI0>FTN-REV19.2] 
 0000 ERRORS [<PUTLI0>FTN-REV19.2] 
 0000 ERRORS [<DROPL0>FTN-REV19.2] 
 0000 ERRORS [<FOLDC0>FTN-REV19.2] 
 0000 ERRORS [<ARITH0>FTN-REV19.2] 
 [ 6:ex]              fc c1_init.f -o0 -q1 -d0             
 [ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "c1_init.f" "-o0" "-q1" "-d0"
 [ 7:ex]    x "ftn -i *>c1_init.f -b *>c1_init.b -l no -64v -dc -dy -sp"
0000 ERRORS [<INITI0>FTN-REV19.2] 
 0000 ERRORS [<ENTEU0>FTN-REV19.2] 
 [ 6:ex]              fc c1_lex.f -o0 -q1 -d0             
[ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "c1_lex.f" "-o0" "-q1" "-d0"
[ 7:ex]    x "ftn -i *>c1_lex.f -b *>c1_lex.b -l no -64v -dc -dy -sp"
0000 ERRORS [<GETSYM>FTN-REV19.2] 
 0000 ERRORS [<GETTOK>FTN-REV19.2] 
 0000 ERRORS [<REFIL0>FTN-REV19.2] 
 0000 ERRORS [<PUTBA0>FTN-REV19.2] 
 0000 ERRORS [<PUTBC0>FTN-REV19.2] 
 0000 ERRORS [<PUTBB0>FTN-REV19.2] 
 0000 ERRORS [<COLLF0>FTN-REV19.2] 
 [ 6:ex]              fc c1_misc.f -o0 -q1 -d0             
 [ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "c1_misc.f" "-o0" "-q1" "-d0"
 [ 7:ex]    x "ftn -i *>c1_misc.f -b *>c1_misc.b -l no -64v -dc -dy -sp"
0000 ERRORS [<SYNERR>FTN-REV19.2] 
 0000 ERRORS [<FATAL0>FTN-REV19.2] 
 0000 ERRORS [<SDUPL >FTN-REV19.2] 
 0000 ERRORS [<SSALL0>FTN-REV19.2] 
 0000 ERRORS [<SSDEA0>FTN-REV19.2] 
 0000 ERRORS [<CSPUSH>FTN-REV19.2] 
 0000 ERRORS [<CSPOP >FTN-REV19.2] 
 0000 ERRORS [<SKIPTO>FTN-REV19.2] 
 0000 ERRORS [<ESPUSH>FTN-REV19.2] 
 0000 ERRORS [<ESPOP >FTN-REV19.2] 
 0000 ERRORS [<ESTOP >FTN-REV19.2] 
 0000 ERRORS [<NEWOBJ>FTN-REV19.2] 
 0000 ERRORS [<ISSTO0>FTN-REV19.2] 
 0000 ERRORS [<ISLVA0>FTN-REV19.2] 
 0000 ERRORS [<ISARI0>FTN-REV19.2] 
 0000 ERRORS [<ISINT >FTN-REV19.2] 
 0000 ERRORS [<ISPOI0>FTN-REV19.2] 
 0000 ERRORS [<ISCON0>FTN-REV19.2] 
 0000 ERRORS [<ISAGG0>FTN-REV19.2] 
 0000 ERRORS [<PUTLO0>FTN-REV19.2] 
 0000 ERRORS [<GETLO0>FTN-REV19.2] 
 [ 6:ex]              fc c1_mode.f -o0 -q1 -d0             
 [ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "c1_mode.f" "-o0" "-q1" "-d0"
 [ 7:ex]    x "ftn -i *>c1_mode.f -b *>c1_mode.b -l no -64v -dc -dy -sp"
0000 ERRORS [<ALIGN0>FTN-REV19.2] 
 0000 ERRORS [<SIZEO0>FTN-REV19.2] 
 0000 ERRORS [<MAKEM0>FTN-REV19.2] 
 0000 ERRORS [<ENTEW0>FTN-REV19.2] 
 0000 ERRORS [<ENTER0>FTN-REV19.2] 
 0000 ERRORS [<FINDM0>FTN-REV19.2] 
 0000 ERRORS [<CREAT0>FTN-REV19.2] 
 0000 ERRORS [<COMPA0>FTN-REV19.2] 
 0000 ERRORS [<SAVEM0>FTN-REV19.2] 
 0000 ERRORS [<CREAU0>FTN-REV19.2] 
 0000 ERRORS [<MODIF0>FTN-REV19.2] 
 [ 6:ex]              fc c1_out.f -o0 -q1 -d0             
[ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "c1_out.f" "-o0" "-q1" "-d0"
[ 7:ex]    x "ftn -i *>c1_out.f -b *>c1_out.b -l no -64v -dc -dy -sp"
0000 ERRORS [<OUTST0>FTN-REV19.2] 
 0000 ERRORS [<OUTSI0>FTN-REV19.2] 
 0000 ERRORS [<OUTVAR>FTN-REV19.2] 
 0000 ERRORS [<OUTPR0>FTN-REV19.2] 
 0000 ERRORS [<OUTARG>FTN-REV19.2] 
 0000 ERRORS [<OUTLAB>FTN-REV19.2] 
 0000 ERRORS [<OUTGO0>FTN-REV19.2] 
 0000 ERRORS [<OUTEX0>FTN-REV19.2] 
 0000 ERRORS [<OUTEY0>FTN-REV19.2] 
 0000 ERRORS [<OUTPS0>FTN-REV19.2] 
 0000 ERRORS [<OUTNUM>FTN-REV19.2] 
 0000 ERRORS [<OUTOP0>FTN-REV19.2] 
 0000 ERRORS [<OUTNA0>FTN-REV19.2] 
 0000 ERRORS [<OUTMO0>FTN-REV19.2] 
 0000 ERRORS [<OUTDE0>FTN-REV19.2] 
 0000 ERRORS [<OUTIP0>FTN-REV19.2] 
 0000 ERRORS [<OUTIO0>FTN-REV19.2] 
 0000 ERRORS [<OUTIN0>FTN-REV19.2] 
 [ 6:ex]              fc c1_parse.f -o0 -q1 -d0             
[ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "c1_parse.f" "-o0" "-q1" "-d0"
[ 7:ex]    x "ftn -i *>c1_parse.f -b *>c1_parse.b -l no -64v -dc -dy -sp"
0000 ERRORS [<EMPTY >FTN-REV19.2] 
 0000 ERRORS [<TYPEO0>FTN-REV19.2] 
 0000 ERRORS [<NOTSU0>FTN-REV19.2] 
 0000 ERRORS [<NOTST0>FTN-REV19.2] 
 0000 ERRORS [<INITJ0>FTN-REV19.2] 
 0000 ERRORS [<INITR >FTN-REV19.2] 
 0000 ERRORS [<SCALA0>FTN-REV19.2] 
 0000 ERRORS [<ARRAY0>FTN-REV19.2] 
 0000 ERRORS [<STRUG0>FTN-REV19.2] 
 0000 ERRORS [<NEXTI0>FTN-REV19.2] 
 [ 6:ex]              fc c1_pp.f -o0 -q1 -d0             
 [ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "c1_pp.f" "-o0" "-q1" "-d0"
 [ 7:ex]    x "ftn -i *>c1_pp.f -b *>c1_pp.b -l no -64v -dc -dy -sp"
0000 ERRORS [<CPREP0>FTN-REV19.2] 
 0000 ERRORS [<PROCG0>FTN-REV19.2] 
 0000 ERRORS [<PROCH0>FTN-REV19.2] 
 0000 ERRORS [<GOBBL0>FTN-REV19.2] 
 0000 ERRORS [<RESET0>FTN-REV19.2] 
 0000 ERRORS [<OPENI0>FTN-REV19.2] 
 0000 ERRORS [<REMOV0>FTN-REV19.2] 
 0000 ERRORS [<INVOK0>FTN-REV19.2] 
 0000 ERRORS [<ENTES0>FTN-REV19.2] 
 0000 ERRORS [<INSTA0>FTN-REV19.2] 
 0000 ERRORS [<DGETS0>FTN-REV19.2] 
 0000 ERRORS [<GETFO0>FTN-REV19.2] 
 0000 ERRORS [<SKIPW0>FTN-REV19.2] 
 0000 ERRORS [<GETDE0>FTN-REV19.2] 
 0000 ERRORS [<GETAC0>FTN-REV19.2] 
 0000 ERRORS [<COLLE0>FTN-REV19.2] 
 [ 6:ex]              fc c1_stacc.f -o0 -q1 -d0             
[ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "c1_stacc.f" "-o0" "-q1" "-d0"
[ 7:ex]    x "ftn -i *>c1_stacc.f -b *>c1_stacc.b -l no -64v -dc -dy -sp"
0000 ERRORS [<EXTER0>FTN-REV19.2] 
 0000 ERRORS [<FUNCT0>FTN-REV19.2] 
 0000 ERRORS [<STATE0>FTN-REV19.2] 
 0000 ERRORS [<STATF0>FTN-REV19.2] 
 0000 ERRORS [<GOTOS0>FTN-REV19.2] 
 0000 ERRORS [<RETUR0>FTN-REV19.2] 
 0000 ERRORS [<CONTI0>FTN-REV19.2] 
 0000 ERRORS [<BREAK0>FTN-REV19.2] 
 0000 ERRORS [<SWITC0>FTN-REV19.2] 
 0000 ERRORS [<FORST0>FTN-REV19.2] 
 0000 ERRORS [<DOSTA0>FTN-REV19.2] 
 0000 ERRORS [<IFSTA0>FTN-REV19.2] 
 0000 ERRORS [<WHILE0>FTN-REV19.2] 
 0000 ERRORS [<COMPO0>FTN-REV19.2] 
 0000 ERRORS [<DECLA0>FTN-REV19.2] 
 0000 ERRORS [<DECLS0>FTN-REV19.2] 
 0000 ERRORS [<INITE0>FTN-REV19.2] 
 0000 ERRORS [<INITD0>FTN-REV19.2] 
 0000 ERRORS [<DECLB0>FTN-REV19.2] 
 0000 ERRORS [<STRUH0>FTN-REV19.2] 
 0000 ERRORS [<STRUF0>FTN-REV19.2] 
 0000 ERRORS [<STRUC0>FTN-REV19.2] 
 0000 ERRORS [<STRUE0>FTN-REV19.2] 
 0000 ERRORS [<STRUD0>FTN-REV19.2] 
 0000 ERRORS [<ENUMS0>FTN-REV19.2] 
 0000 ERRORS [<ENUMD0>FTN-REV19.2] 
 0000 ERRORS [<TYPEN0>FTN-REV19.2] 
 0000 ERRORS [<ABSTR0>FTN-REV19.2] 
 0000 ERRORS [<CONST0>FTN-REV19.2] 
 0000 ERRORS [<EXPRE0>FTN-REV19.2] 
 0000 ERRORS [<EXPR0 >FTN-REV19.2] 
 0000 ERRORS [<EXPR1 >FTN-REV19.2] 
 0000 ERRORS [<EXPR2 >FTN-REV19.2] 
 0000 ERRORS [<EXPR3 >FTN-REV19.2] 
 0000 ERRORS [<EXPR4 >FTN-REV19.2] 
 0000 ERRORS [<EXPR5 >FTN-REV19.2] 
 0000 ERRORS [<EXPR6 >FTN-REV19.2] 
 0000 ERRORS [<EXPR7 >FTN-REV19.2] 
 0000 ERRORS [<EXPR8 >FTN-REV19.2] 
 0000 ERRORS [<EXPR9 >FTN-REV19.2] 
 0000 ERRORS [<EXPR10>FTN-REV19.2] 
 0000 ERRORS [<EXPR11>FTN-REV19.2] 
 0000 ERRORS [<EXPR12>FTN-REV19.2] 
 0000 ERRORS [<PRIMA0>FTN-REV19.2] 
 [ 6:ex]              fc c1_sym.f -o0 -q1 -d0             
[ 7:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 8:ex] args
 [ 8:ex] fc "c1_sym.f" "-o0" "-q1" "-d0"
[ 7:ex]    x "ftn -i *>c1_sym.f -b *>c1_sym.b -l no -64v -dc -dy -sp"
0000 ERRORS [<FINDS0>FTN-REV19.2] 
 0000 ERRORS [<RECOR0>FTN-REV19.2] 
 0000 ERRORS [<MAKES0>FTN-REV19.2] 
 0000 ERRORS [<ENTEV0>FTN-REV19.2] 
 0000 ERRORS [<EXITLL>FTN-REV19.2] 
 0000 ERRORS [<ACCES0>FTN-REV19.2] 
 0000 ERRORS [<NEWSYM>FTN-REV19.2] 
 0000 ERRORS [<OLDSYM>FTN-REV19.2] 
 [ 5:ex]       when -mklink
 [ 6:ex] pn
 [ 6:ex] file c1.ldproc
 [ 5:ex]    if 0
[ 6:ex] pn
 [ 6:ex] pn
 [ 6:ex] lf -c | find %c1_?*.b$
 [ 6:ex] pn
 [ 6:ex] pn
 [ 6:ex] cat -s c1.ldopts
 [ 5:ex]       ld -u c1.b c1_alloc.b c1_ck.b c1_debug.b c1_expr.b c1_fold.b c1_init.b c1_lex.b c1_misc.b c1_mode.b c1_out.b c1_parse.b c1_pp.b c1_stacc.b c1_sym.b -o c1 -f
 [ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"
[ 6:ex]    declare _quote_opt = YES
[ 7:ex] args
 [ 6:ex]    ld "-u" "c1.b" "c1_alloc.b" "c1_ck.b" "c1_debug.b" "c1_expr.b" "c1_fold.b" "c1_init.b" "c1_lex.b" "c1_misc.b" "c1_mode.b" "c1_out.b" "c1_parse.b" "c1_pp.b" "c1_stacc.b" "c1_sym.b" "-o" "c1" "-f" | x
[SEG rev 19.2.GT]
# vl #
 $ co ab 4001
 $ sy swt$cm 4040 10000
 $ sy swt$tp 2030 120000
$ mi
 $ s/lo c1.b 0 4000 4000
$ s/lo c1_alloc.b 0 4000 4000
$ s/lo c1_ck.b 0 4000 4000
 $ s/lo c1_debug.b 0 4000 4000
$ s/lo c1_expr.b 0 4000 4000
 $ s/lo c1_fold.b 0 4000 4000
 $ s/lo c1_init.b 0 4000 4000
 $ s/lo c1_lex.b 0 4000 4000
$ s/lo c1_misc.b 0 4000 4000
 $ s/lo c1_mode.b 0 4000 4000
 $ s/lo c1_out.b 0 4000 4000
$ s/lo c1_parse.b 0 4000 4000
$ s/lo c1_pp.b 0 4000 4000
 $ s/lo c1_stacc.b 0 4000 4000
$ s/lo c1_sym.b 0 4000 4000
$ s/lo 'newlib>vswtlb' 0 4000 4000
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 "DS$MEM  ": SMALLER REDEFINITION OF COMMON
 $ s/li 0 4000 4000
 LOAD COMPLETE
$ ma 6
 
 $ ma c1.m
$ re
 # sh
 FILE ID: ..
Creating ..4000
# delete
 # q
[ 5:ex]    fi
[ 3:ex] cd =src=/spc/vcg.u
 [ 3:ex]  build
 [ 4:ex]    declare _search_rule = "^int,=bin=/&,&"
 [ 4:ex]    build_otg
 [ 5:ex]    declare _search_rule = "^int,=bin=/&"
 [ 6:ex] cat otg_names | change "?*" "src/&.r"
[ 5:ex]    rp otg_def.r.i vcg_link.i src/abs_end.r src/otg$aentpb.r src/otg$apins.r src/otg$ap.r src/otg$blk.r src/otg$brnch.r src/otg$dac.r src/otg$data.r src/otg$ecb.r src/otg$endlb.r src/otg$endpb.r src/otg$entlb.r src/otg$entpb.r src/otg$ip.r src/otg$mref.r src/otg$gen.r src/otg$orglb.r src/otg$proc.r src/otg$rentlb.r src/otg$rorg.r src/otg$rorglb.r src/otg$rslv.r src/otg$xtip.r src/otg$uii.r src/group.r src/flush.r -o otg.f
 [ 5:ex]    fc otg.f
[ 6:ex]    declare _search_rule = "^int,=ebin=/&,=bin=/&"            _quote_opt = YES
[ 7:ex] args
 [ 7:ex] fc "otg.f"
 [ 6:ex]    x "ftn -i *>otg.f -b *>otg.b -l no -64v -dc -dy -o"
 0000 ERRORS [<ABSEND>FTN-REV19.2] 
 0000 ERRORS [<OTG$A0>FTN-REV19.2] 
 0000 ERRORS [<OTG$B0>FTN-REV19.2] 
 0000 ERRORS [<OTG$AP>FTN-REV19.2] 
 0000 ERRORS [<OTG$C0>FTN-REV19.2] 
 0000 ERRORS [<OTG$D0>FTN-REV19.2] 
 0000 ERRORS [<OTG$E0>FTN-REV19.2] 
 0000 ERRORS [<OTG$F0>FTN-REV19.2] 
 0000 ERRORS [<OTG$G0>FTN-REV19.2] 
 0000 ERRORS [<OTG$H0>FTN-REV19.2] 
 0000 ERRORS [<OTG$I0>FTN-REV19.2] 
 0000 ERRORS [<OTG$J0>FTN-REV19.2] 
 0000 ERRORS [<OTG$K0>FTN-REV19.2] 
 0000 ERRORS [<OTG$IP>FTN-REV19.2] 
 0000 ERRORS [<OTG$M0>FTN-REV19.2] 
 0000 ERRORS [<OTG$L0>FTN-REV19.2] 
 0000 ERRORS [<OTG$O0>FTN-REV19.2] 
 0000 ERRORS [<OTG$P0>FTN-REV19.2] 
 0000 ERRORS [<OTG$R0>FTN-REV19.2] 
 0000 ERRORS [<OTG$S0>FTN-REV19.2] 
 0000 ERRORS [<OTG$T0>FTN-REV19.2] 
 0000 ERRORS [<OTG$U0>FTN-REV19.2] 
 0000 ERRORS [<OTG$X0>FTN-REV19.2] 
 0000 ERRORS [<OTG$V0>FTN-REV19.2] 
 0000 ERRORS [<GROUP >FTN-REV19.2] 
 0000 ERRORS [<FLUSH >FTN-REV19.2] 
 [ 5:ex]    echo EDB OTG.B _OTG@nRFL@nCOPY ALL@nSFL@nET@nQ | x
[EDB rev 19.0]
 ENTER, RFL
 ENTER, COPY ALL
ABSEND   OTG$A0   OTG$B0   OTG$AP   OTG$C0   OTG$D0   OTG$E0   OTG$F0   
 OTG$G0   OTG$H0   OTG$I0   OTG$J0   OTG$K0   OTG$IP   OTG$M0   OTG$L0   
 OTG$O0   OTG$P0   OTG$R0   OTG$S0   OTG$T0   OTG$U0   OTG$X0   OTG$V0   
 GROUP    FLUSH    
 .BOTTOM.
 ENTER, SFL
 ENTER, ET
ENTER, Q
 [ 5:ex]    echo R LIB'>'LIBEDB@n_OTG VCG_OTGLIB.B 0 | x
[LIBEDB rev 19.0]

 SOURCE FILE, DESTINATION FILE, PARAMETER
 WHERE: PARAMETER = 0 - DESTINATION FILE SAM
       PARAMETER = 2000 - DESTINATION FILE DAM
 $ _OTG VCG_OTGLIB.B 0
[ 5:ex]    del otg.f otg.b _otg
[ 4:ex]    sep vcg -all
[ 5:ex]    declare _search_rule = "^int,=bin=/&,=lbin=/&,^var,&"
 [ 6:ex] arg 1
[ 5:ex]    if vcg
[ 5:ex]    else
[ 6:ex] arg 1
[ 5:ex]    declare pn = vcg
[ 6:ex] arg 2
[ 5:ex]    case -all
 [ 6:ex] pn
 [ 6:ex] file vcg.stacc
 [ 5:ex]          if 0
[ 6:ex] pn
 [ 6:ex] pn
 [ 6:ex]   echo vcg
 [ 6:ex]                    lf -c | find %vcg_?*.r$ | change .r$                    
[ 5:ex]          ^cn/1  vcg vcg_field vcg_flow1 vcg_flow2 vcg_frames vcg_genins vcg_input vcg_load1 vcg_load2 vcg_load3 vcg_load4 vcg_load5 vcg_mem vcg_message vcg_misc vcg_module vcg_opt vcg_otg1 vcg_otg2 vcg_otgmem1 vcg_otgmem2 vcg_output vcg_powers_data vcg_reach vcg_rtrname_data vcg_shift vcg_void
 [ 7:ex] args
 [ 7:ex] pn
 [ 7:ex] pn
 [ 7:ex] args
 [ 7:ex] pn
 [ 7:ex] cat -s vcg.rpopts
[ 6:ex]              rp -o vcg.f vcg_link.i vcg_def.i vcg.r                   -ag
[ 6:ex]              rp -o vcg_field.f vcg_link.i vcg_def.i vcg_field.r                   -ag
[ 6:ex]              rp -o vcg_flow1.f vcg_link.i vcg_def.i vcg_flow1.r                   -ag
[ 6:ex]              rp -o vcg_flow2.f vcg_link.i vcg_def.i vcg_flow2.r                   -ag
[ 6:ex]              rp -o vcg_frames.f vcg_link.i vcg_def.i vcg_frames.r                   -ag
[ 6:ex]              rp -o vcg_genins.f vcg_link.i vcg_def.i vcg_genins.r                   -ag
[ 6:ex]              rp -o vcg_input.f vcg_link.i vcg_def.i vcg_input.r                   -ag
[ 6:ex]              rp -o vcg_load1.f vcg_link.i vcg_def.i vcg_load1.r                   -ag
[ 6:ex]              rp -o vcg_load2.f vcg_link.i vcg_def.i vcg_load2.r                   -ag
[ 6:ex]              rp -o vcg_load3.f vcg_link.i vcg_def.i vcg_load3.r                   -ag
[ 6:ex]              rp -o vcg_load4.f vcg_link.i vcg_def.i vcg_load4.r                   -ag
[ 6:ex]              rp -o vcg_load5.f vcg_link.i vcg_def.i vcg_load5.r                   -ag
[ 6:ex]              rp -o vcg_mem.f vcg_link.i vcg_def.i vcg_mem.r                   -ag
[ 6:ex]              rp -o vcg_message.f vcg_link.i vcg_def.i vcg_message.r                   -ag
[ 6:ex]              rp -o vcg_misc.f vcg_link.i vcg_def.i vcg_misc.r                   -ag
[ 6:ex]              rp -o vcg_module.f vcg_link.i vcg_def.i vcg_module.r                   -ag
[ 6:ex]              rp -o vcg_opt.f vcg_link.i vcg_def.i vcg_opt.r                   -ag
[ 6:ex]              rp -o vcg_otg1.f vcg_link.i vcg_def.i vcg_otg1.r                   -ag
[ 6:ex]              rp -o vcg_otg2.f vcg_link.i vcg_def.i vcg_otg2.r                   -ag
in dsget: out of storage space
 type 'c' or 'i' for char or integer dump
 stop -
 program terminated
 SYS.C! 
End of file. Cominput. (Input from terminal.)

 SYSTEM (user 39) logged out Tuesday, 27 Nov 84 05:37:44.
 Time used: 04h 37m connect, 170m 06s CPU, 26m 00s I/O.
 
 
