C     TEMP$SEG.FTN, SEGSRC, MLG-ELS-PMP, 08/31/79
C     OPEN UNIQUE TEMPORARY SEG FILE IN CURRENT UFD
C     Copyright (c) 1981, Prime Computer, Inc., Natick, MA 01760
C
C     THIS ROUTINE IS A MODIFICATION OF THE ORIGINAL TEMP$A IN THAT
C     THE KEY TO SRCH$$ HAS BEEN HARDWIRED TO CREATE SEGSAM FILES ONLY.
C     FOR THIS REASON THE SOURCE HAS BEEN INCLUDED WITH SEG'S SOURCE AND
C     THIS PARTICULAR VERSION OF TEMP$A IS USED BY SEG ONLY.
C
C     CALLING SEQUENCE:
C
C        CALL TEMP$S(KEY,NAME,NAMLEN,UNIT)
C        LOG= TEMP$S(KEY,NAME,NAMLEN,UNIT)
C
C      WHERE:   NAME   = RETURNED NAME (6 CHARACTERS)
C               NAMLEN = LENGTH OF NAME BUFFER IN CHARACTERS (>=6)
C               UNIT   = UNIT ON WHICH TO OPEN FILE (RETURNED IF KEY=K$GETU)
C
C        ALL ARGUMENTS ARE INTEGER*2.
C
C
C     APPLIB CALLS:
C
C        FILL$A
C
C
C     FUNCTION:
C
C        TEMP$S OPENS A UNIQUE TEMPORARY FILE IN THE CURRENT UFD FOR
C        READING AND WRITING.  THIS FILE WILL BE NAMED T$XXXX WHERE
C        XXXX IS A 4 DIGIT DECIMAL NUMBER BETWEEN 0000 AND 9999 INCLUSIVE.
C        THE ACTUAL NAME OPENED WILL BE RETURNED IN THE NAME BUFFER.
C        IF AN ERROR IS ENCOUNTERED OPENING A UNIQUE NAME, TEMP$S WILL
C        REPORT THE ERROR AND RETURN WITH THE FUNCTION VALUE .FALSE..
C        IF THE OPEN IS SUCCESSFUL, THE FUNCTION VALUE WILL BE .TRUE..
C
C        IF KEY CONTAINS K$GETU THE ROUTINE WILL CHOOSE AN UNUSED FILE
C        UNIT NUMBER TO OPEN THE FILE ON AND RETURN IT TO THE CALLING PROGRAM
C        IN "UNIT".
C
C     CHANGES:
C
C        02/12/79 - GET ANY UNIT KEY (A$GETU) ADDED - ELS
C        08/31/79 - Check for negative NAMLEN added - els
C        05/25/80 - SRCH$$ 'key' parameter modified to create temporary
C                           SEG files. -PMP
C        11/12/81 - All references to APPLB KEYS(A$KEYS) removed - PMP
C
      SUBROUTINE TEMP$S(KEY,NAME,NAMLEN,UNIT)
      INTEGER*2 KEY,NAME(1),NAMLEN,UNIT
C
$INSERT SYSCOM>KEYS.INS.FTN
$INSERT SYSCOM>ERRD.INS.FTN
C
      INTEGER*2 TYPE,CODE,I,TXNAME(3)
      INTEGER*2 ZERO,ONE,TWO,THREE,SIX,EIGHT,D21,D23,
     X   INCHGH,A9,BLANKS,ZEROS
      PARAMETER ZERO=0,ONE=1,TWO=2,THREE=3,SIX=6,EIGHT=8,
     X   D21=21,D23=23,INCHGH=246,A9=:271,
     X   BLANKS=:120240,ZEROS=:130260
C
      DATA TXNAME/'T$0000'/
C
C

      IF (NAMLEN.GE.0) GO TO 3
      CALL ERRPR$(K$IRTN,E$BPAR,'Negative string length',22,'TEMP$S',6)
      RETURN

3     IF(NAMLEN.LT.6) RETURN
      CALL FILL$A(NAME,NAMLEN,' ')
C
C     INITIALIZE NAME
C
1     DO 5 I=ONE,THREE
         NAME(I)=TXNAME(I)
5     CONTINUE
C
10    CALL SRCH$$(K$EXST+K$GETU,NAME,SIX,1,TYPE,CODE)
      IF(CODE.EQ.ZERO) GO TO 20
C
15    CALL SRCH$$(KEY,NAME,SIX,UNIT,TYPE,CODE)
      IF(CODE.EQ.E$FIUS) GO TO 20
         CALL ERRPR$(K$IRTN,CODE,NAME,SIX,'TEMP$S',SIX)
         RETURN
C
C     INCREMENT NAME AND TRY AGAIN
C
20    NAME(THREE)=NAME(THREE)+ONE
      IF(RT(NAME(THREE),EIGHT).GT.A9) NAME(THREE)=NAME(THREE)+INCHGH
      IF(RS(NAME(THREE),EIGHT).LE.A9) GO TO 10
C
C     TRY MIDDLE DIGITS
C
      NAME(THREE)=ZEROS
      NAME(TWO)=NAME(TWO)+ONE
      IF(RT(NAME(TWO),EIGHT).GT.A9) NAME(TWO)=NAME(TWO)+INCHGH
      IF(RS(NAME(TWO),EIGHT).LE.A9) GO TO 10
C
C     BAD NAME - CANNOT FIND UNIQUE NAME
C
      CALL ERRPR$(K$IRTN,E$BNAM,'CANNOT FIND UNIQUE NAME',D23,
     X   'TEMP$S',SIX)
      RETURN
C
C     SUCCESSFUL
C
      END
